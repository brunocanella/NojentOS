

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Nov  2 16:07:01 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	nvCOMRAM
    64  00003B                     __pnvCOMRAM:
    65                           	opt stack 0
    66  00003B                     __timer0_callback:
    67                           	opt stack 0
    68  00003B                     	ds	2
    69                           
    70                           	psect	nvBANK1
    71  0001A9                     __pnvBANK1:
    72                           	opt stack 0
    73  0001A9                     __timer0_delay_us:
    74                           	opt stack 0
    75  0001A9                     	ds	2
    76  0000                     _TOS	set	4093
    77  0000                     _TMR0	set	4054
    78  0000                     _BSR	set	4064
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _INTCONbits	set	4082
    81  0000                     _LATDbits	set	3980
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _OSCTUNEbits	set	3995
    84  0000                     _PORTDbits	set	3971
    85  0000                     _STATUS	set	4056
    86  0000                     _STKPTR	set	4092
    87  0000                     _T0CONbits	set	4053
    88  0000                     _TOSH	set	4094
    89  0000                     _TOSL	set	4093
    90  0000                     _TOSU	set	4095
    91  0000                     _TRISDbits	set	3989
    92  0000                     _WREG	set	4072
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  000F50                     __pcinit:
    98                           	opt stack 0
    99  000F50                     start_initialization:
   100                           	opt stack 0
   101  000F50                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Clear objects allocated to BIGRAM (512 bytes)
   105  000F50  EE03  F009         	lfsr	0,__pbssBIGRAM
   106  000F54  EE12 F000          	lfsr	1,512
   107  000F58                     clear_0:
   108  000F58  6AEE               	clrf	postinc0,c
   109  000F5A  50E5               	movf	postdec1,w,c
   110  000F5C  50E1               	movf	fsr1l,w,c
   111  000F5E  E1FC               	bnz	clear_0
   112  000F60  50E2               	movf	fsr1h,w,c
   113  000F62  E1FA               	bnz	clear_0
   114                           
   115                           ; Clear objects allocated to BANK1 (169 bytes)
   116  000F64  EE01  F000         	lfsr	0,__pbssBANK1
   117  000F68  0EA9               	movlw	169
   118  000F6A                     clear_1:
   119  000F6A  6AEE               	clrf	postinc0,c
   120  000F6C  06E8               	decf	wreg,f,c
   121  000F6E  E1FD               	bnz	clear_1
   122                           
   123                           ; Clear objects allocated to BANK0 (10 bytes)
   124  000F70  EE00  F0CE         	lfsr	0,__pbssBANK0
   125  000F74  0E0A               	movlw	10
   126  000F76                     clear_2:
   127  000F76  6AEE               	clrf	postinc0,c
   128  000F78  06E8               	decf	wreg,f,c
   129  000F7A  E1FD               	bnz	clear_2
   130                           
   131                           ; Clear objects allocated to COMRAM (3 bytes)
   132  000F7C  6A3A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   133  000F7E  6A39               	clrf	(__pbssCOMRAM+1)& (0+255),c
   134  000F80  6A38               	clrf	__pbssCOMRAM& (0+255),c
   135  000F82                     end_of_initialization:
   136                           	opt stack 0
   137  000F82                     __end_of__initialization:
   138                           	opt stack 0
   139  000F82  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   140  000F84  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   141  000F86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   142  000F88  6EF8               	movwf	tblptru,c
   143  000F8A  0100               	movlb	0
   144  000F8C  EF93  F006         	goto	_main	;jump to C main() function
   145                           tblptru	equ	0xFF8
   146                           postinc0	equ	0xFEE
   147                           wreg	equ	0xFE8
   148                           postdec1	equ	0xFE5
   149                           fsr1h	equ	0xFE2
   150                           fsr1l	equ	0xFE1
   151                           
   152                           	psect	bssCOMRAM
   153  000038                     __pbssCOMRAM:
   154                           	opt stack 0
   155  000038                     __BSR:
   156                           	opt stack 0
   157  000038                     	ds	1
   158  000039                     __STATUS:
   159                           	opt stack 0
   160  000039                     	ds	1
   161  00003A                     __WREG:
   162                           	opt stack 0
   163  00003A                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           postdec1	equ	0xFE5
   168                           fsr1h	equ	0xFE2
   169                           fsr1l	equ	0xFE1
   170                           
   171                           	psect	bssBANK0
   172  0000CE                     __pbssBANK0:
   173                           	opt stack 0
   174  0000CE                     _s_blocks:
   175                           	opt stack 0
   176  0000CE                     	ds	2
   177  0000D0                     _g_sem_1:
   178                           	opt stack 0
   179  0000D0                     	ds	4
   180  0000D4                     _g_sem_2:
   181                           	opt stack 0
   182  0000D4                     	ds	4
   183                           tblptru	equ	0xFF8
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           postdec1	equ	0xFE5
   187                           fsr1h	equ	0xFE2
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	bssBANK1
   191  000100                     __pbssBANK1:
   192                           	opt stack 0
   193  000100                     _dispatcher:
   194                           	opt stack 0
   195  000100                     	ds	128
   196  000180                     _idle:
   197                           	opt stack 0
   198  000180                     	ds	41
   199                           tblptru	equ	0xFF8
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           postdec1	equ	0xFE5
   203                           fsr1h	equ	0xFE2
   204                           fsr1l	equ	0xFE1
   205                           
   206                           	psect	bssBIGRAM
   207  000309                     __pbssBIGRAM:
   208                           	opt stack 0
   209  000309                     _s_heap:
   210                           	opt stack 0
   211  000309                     	ds	512
   212                           tblptru	equ	0xFF8
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1h	equ	0xFE2
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	cstackBANK3
   220  000300                     __pcstackBANK3:
   221                           	opt stack 0
   222  000300                     task_create@id:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x0
   226  000300                     	ds	2
   227  000302                     task_create@priority:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x2
   231  000302                     	ds	2
   232  000304                     task_create@callback:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x4
   236  000304                     	ds	2
   237  000306                     ??_task_create:
   238                           
   239                           ; 1 bytes @ 0x6
   240  000306                     	ds	3
   241                           tblptru	equ	0xFF8
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1h	equ	0xFE2
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	cstackBANK2
   249  000200                     __pcstackBANK2:
   250                           	opt stack 0
   251  000200                     	ds	77
   252  00024D                     task_2_priority@i:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x4D
   256  00024D                     	ds	2
   257  00024F                     ??__merge_free_blocks:
   258  00024F                     ?_linked_list_get_first:
   259                           	opt stack 0
   260  00024F                     ?___wmul:
   261                           	opt stack 0
   262  00024F                     task_running@handle:
   263                           	opt stack 0
   264  00024F                     linked_list_get_first@a_head:
   265                           	opt stack 0
   266  00024F                     linked_list_get_size@a_head:
   267                           	opt stack 0
   268  00024F                     ___wmul@multiplier:
   269                           	opt stack 0
   270  00024F                     i1task_ready@handle:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x4F
   274  00024F                     	ds	2
   275  000251                     __merge_free_blocks@l_next:
   276                           	opt stack 0
   277  000251                     linked_list_get_size@l_head_data:
   278                           	opt stack 0
   279  000251                     ___wmul@multiplicand:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x51
   283  000251                     	ds	2
   284  000253                     __merge_free_blocks@l_curr:
   285                           	opt stack 0
   286  000253                     ___wmul@product:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x53
   290  000253                     	ds	2
   291  000255                     ?_scheduler_priority:
   292                           	opt stack 0
   293  000255                     free@a_pointer:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x55
   297  000255                     	ds	2
   298  000257                     ??_scheduler_priority:
   299  000257                     free@l_block:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x57
   303  000257                     	ds	2
   304  000259                     linked_list_remove_first@a_head:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x59
   308  000259                     	ds	2
   309  00025B                     ??_linked_list_remove_first:
   310  00025B                     scheduler_priority@highest:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x5B
   314  00025B                     	ds	2
   315  00025D                     scheduler_priority@i:
   316                           	opt stack 0
   317  00025D                     linked_list_remove_first@l_iter_new_first:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x5D
   321  00025D                     	ds	2
   322  00025F                     scheduler_priority@current:
   323                           	opt stack 0
   324  00025F                     linked_list_remove_first@l_iter_delet:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x5F
   328  00025F                     	ds	2
   329  000261                     ??_dispatcher_change_context:
   330  000261                     linked_list_remove_first@l_head_data:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x61
   334  000261                     	ds	1
   335  000262                     dispatcher_change_context@task_state:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x62
   339  000262                     	ds	1
   340  000263                     dispatcher_change_context@next:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x63
   344  000263                     	ds	2
   345  000265                     dispatcher_change_context@i:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x65
   349  000265                     	ds	1
   350  000266                     dispatcher_change_context@i_820:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x66
   354  000266                     	ds	1
   355  000267                     dispatcher_change_context@task:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x67
   359  000267                     	ds	2
   360  000269                     dispatcher_change_context@task_798:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x69
   364  000269                     	ds	2
   365  00026B                     dispatcher_change_context@stack:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x6B
   369  00026B                     	ds	2
   370  00026D                     dispatcher_change_context@stack_817:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x6D
   374  00026D                     	ds	2
   375  00026F                     dispatcher_change_context@context:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x6F
   379  00026F                     	ds	2
   380  000271                     dispatcher_change_context@context_810:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x71
   384  000271                     	ds	2
   385  000273                     semaphore_signal@handle:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x73
   389  000273                     	ds	2
   390  000275                     
   391                           ; 1 bytes @ 0x75
   392  000275                     	ds	1
   393  000276                     semaphore_signal@l_task:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x76
   397  000276                     	ds	2
   398  000278                     ??_task_3_priority:
   399                           
   400                           ; 1 bytes @ 0x78
   401  000278                     	ds	1
   402  000279                     task_3_priority@i:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x79
   406  000279                     	ds	2
   407  00027B                     
   408                           ; 2 bytes @ 0x7B
   409  00027B                     	ds	2
   410  00027D                     ?_dispatcher_add_task:
   411                           	opt stack 0
   412  00027D                     timer0_init@delay_us:
   413                           	opt stack 0
   414  00027D                     task_ready@handle:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x7D
   418  00027D                     	ds	2
   419  00027F                     timer0_init@callback:
   420                           	opt stack 0
   421  00027F                     dispatcher_add_task@task:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x7F
   425  00027F                     	ds	2
   426  000281                     task_create@handle:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x81
   430  000281                     	ds	2
   431  000283                     tblptru	equ	0xFF8
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1h	equ	0xFE2
   436                           fsr1l	equ	0xFE1
   437                           
   438                           ; 1 bytes @ 0x83
   439                           
   440                           	psect	cstackBANK0
   441  000080                     __pcstackBANK0:
   442                           	opt stack 0
   443  000080                     	ds	24
   444  000098                     linked_list_create@a_head:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x18
   448  000098                     	ds	2
   449  00009A                     ??_linked_list_create:
   450                           
   451                           ; 1 bytes @ 0x1A
   452  00009A                     	ds	2
   453  00009C                     linked_list_create@l_head_data:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x1C
   457  00009C                     	ds	2
   458  00009E                     semaphore_init@handle:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x1E
   462  00009E                     	ds	2
   463  0000A0                     semaphore_init@initial_value:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x20
   467  0000A0                     	ds	5
   468  0000A5                     ??_task_1_priority:
   469                           
   470                           ; 1 bytes @ 0x25
   471  0000A5                     	ds	1
   472  0000A6                     task_1_priority@i:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x26
   476  0000A6                     	ds	2
   477  0000A8                     ?__find_free_block:
   478                           	opt stack 0
   479  0000A8                     __find_free_block@a_size:
   480                           	opt stack 0
   481  0000A8                     __split_free_block@a_block:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x28
   485  0000A8                     	ds	2
   486  0000AA                     __split_free_block@a_resize:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x2A
   490  0000AA                     	ds	2
   491  0000AC                     ??__split_free_block:
   492  0000AC                     __find_free_block@l_current:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x2C
   496  0000AC                     	ds	4
   497  0000B0                     __split_free_block@l_new:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x30
   501  0000B0                     	ds	2
   502  0000B2                     ?_malloc:
   503                           	opt stack 0
   504  0000B2                     malloc@a_size:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x32
   508  0000B2                     	ds	2
   509  0000B4                     ??_malloc:
   510                           
   511                           ; 1 bytes @ 0x34
   512  0000B4                     	ds	4
   513  0000B8                     malloc@l_previous:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x38
   517  0000B8                     	ds	2
   518  0000BA                     malloc@l_offset:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x3A
   522  0000BA                     	ds	2
   523  0000BC                     malloc@l_free:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x3C
   527  0000BC                     	ds	2
   528  0000BE                     malloc@l_block:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x3E
   532  0000BE                     	ds	2
   533  0000C0                     linked_list_insert@a_head:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x40
   537  0000C0                     	ds	2
   538  0000C2                     linked_list_insert@a_data:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x42
   542  0000C2                     	ds	2
   543  0000C4                     ??_linked_list_insert:
   544                           
   545                           ; 1 bytes @ 0x44
   546  0000C4                     	ds	2
   547  0000C6                     linked_list_insert@l_head_data:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x46
   551  0000C6                     	ds	2
   552  0000C8                     linked_list_insert@l_node:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x48
   556  0000C8                     	ds	2
   557  0000CA                     semaphore_wait@handle:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x4A
   561  0000CA                     	ds	2
   562  0000CC                     
   563                           ; 1 bytes @ 0x4C
   564  0000CC                     	ds	1
   565  0000CD                     ??_task_2_priority:
   566                           
   567                           ; 1 bytes @ 0x4D
   568  0000CD                     	ds	1
   569                           tblptru	equ	0xFF8
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           postdec1	equ	0xFE5
   573                           fsr1h	equ	0xFE2
   574                           fsr1l	equ	0xFE1
   575                           
   576                           	psect	cstackCOMRAM
   577  000001                     __pcstackCOMRAM:
   578                           	opt stack 0
   579  000001                     ?i2___wmul:
   580                           	opt stack 0
   581  000001                     i2task_ready@handle:
   582                           	opt stack 0
   583  000001                     i2task_running@handle:
   584                           	opt stack 0
   585  000001                     i2___wmul@multiplier:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x0
   589  000001                     	ds	2
   590  000003                     i2___wmul@multiplicand:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x2
   594  000003                     	ds	2
   595  000005                     i2___wmul@product:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x4
   599  000005                     	ds	2
   600  000007                     ?i2_scheduler_priority:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x6
   604  000007                     	ds	2
   605  000009                     ??i2_scheduler_priority:
   606                           
   607                           ; 1 bytes @ 0x8
   608  000009                     	ds	4
   609  00000D                     i2scheduler_priority@highest:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0xC
   613  00000D                     	ds	2
   614  00000F                     i2scheduler_priority@i:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0xE
   618  00000F                     	ds	2
   619  000011                     i2scheduler_priority@current:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x10
   623  000011                     	ds	2
   624  000013                     dispatcher_change_context_isr@next:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x12
   628  000013                     	ds	2
   629  000015                     ??_global_isr:
   630                           
   631                           ; 1 bytes @ 0x14
   632  000015                     	ds	21
   633  00002A                     global_isr@i:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x29
   637  00002A                     	ds	1
   638  00002B                     global_isr@p_task:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x2A
   642  00002B                     	ds	2
   643  00002D                     global_isr@n_task:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2C
   647  00002D                     	ds	2
   648  00002F                     global_isr@p_stack:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x2E
   652  00002F                     	ds	2
   653  000031                     global_isr@i_609:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x30
   657  000031                     	ds	1
   658  000032                     global_isr@n_stack:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x31
   662  000032                     	ds	2
   663  000034                     global_isr@p_context:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x33
   667  000034                     	ds	2
   668  000036                     global_isr@n_context:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x35
   672  000036                     	ds	2
   673  000038                     tblptru	equ	0xFF8
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1h	equ	0xFE2
   678                           fsr1l	equ	0xFE1
   679                           
   680                           ; 1 bytes @ 0x37
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 80 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   700 ;;      Params:         0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels required when called:   14
   706 ;; This function calls:
   707 ;;		_nojo_init
   708 ;;		_nojo_start
   709 ;;		_task_create
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716  000D26                     __ptext0:
   717                           	opt stack 0
   718  000D26                     _main:
   719                           	opt stack 17
   720                           
   721                           ;main.c: 82: nojo_init();
   722                           
   723                           ;incstack = 0
   724  000D26  ECDD  F008         	call	_nojo_init	;# 
   725                           
   726                           ;main.c: 87: task_create( 1, 200, task_1_priority );
   727  000D2A  0E00               	movlw	0
   728  000D2C  0103               	movlb	3	; () banked
   729  000D2E  6F01               	movwf	(task_create@id+1)& (0+255),b
   730  000D30  0E01               	movlw	1
   731  000D32  6F00               	movwf	task_create@id& (0+255),b
   732  000D34  0E00               	movlw	0
   733  000D36  0103               	movlb	3	; () banked
   734  000D38  6F03               	movwf	(task_create@priority+1)& (0+255),b
   735  000D3A  0EC8               	movlw	200
   736  000D3C  6F02               	movwf	task_create@priority& (0+255),b
   737  000D3E  0EA4               	movlw	low _task_1_priority
   738  000D40  0103               	movlb	3	; () banked
   739  000D42  6F04               	movwf	task_create@callback& (0+255),b
   740  000D44  0E0C               	movlw	high _task_1_priority
   741  000D46  0103               	movlb	3	; () banked
   742  000D48  6F05               	movwf	(task_create@callback+1)& (0+255),b
   743  000D4A  EC62  F004         	call	_task_create	;wreg free
   744                           
   745                           ;main.c: 88: task_create( 2, 100, task_2_priority );
   746  000D4E  0E00               	movlw	0
   747  000D50  0103               	movlb	3	; () banked
   748  000D52  6F01               	movwf	(task_create@id+1)& (0+255),b
   749  000D54  0E02               	movlw	2
   750  000D56  6F00               	movwf	task_create@id& (0+255),b
   751  000D58  0E00               	movlw	0
   752  000D5A  0103               	movlb	3	; () banked
   753  000D5C  6F03               	movwf	(task_create@priority+1)& (0+255),b
   754  000D5E  0E64               	movlw	100
   755  000D60  6F02               	movwf	task_create@priority& (0+255),b
   756  000D62  0E9E               	movlw	low _task_2_priority
   757  000D64  0103               	movlb	3	; () banked
   758  000D66  6F04               	movwf	task_create@callback& (0+255),b
   759  000D68  0E0D               	movlw	high _task_2_priority
   760  000D6A  0103               	movlb	3	; () banked
   761  000D6C  6F05               	movwf	(task_create@callback+1)& (0+255),b
   762  000D6E  EC62  F004         	call	_task_create	;wreg free
   763                           
   764                           ;main.c: 89: task_create( 3, 50, task_3_priority );
   765  000D72  0E00               	movlw	0
   766  000D74  0103               	movlb	3	; () banked
   767  000D76  6F01               	movwf	(task_create@id+1)& (0+255),b
   768  000D78  0E03               	movlw	3
   769  000D7A  6F00               	movwf	task_create@id& (0+255),b
   770  000D7C  0E00               	movlw	0
   771  000D7E  0103               	movlb	3	; () banked
   772  000D80  6F03               	movwf	(task_create@priority+1)& (0+255),b
   773  000D82  0E32               	movlw	50
   774  000D84  6F02               	movwf	task_create@priority& (0+255),b
   775  000D86  0E6A               	movlw	low _task_3_priority
   776  000D88  0103               	movlb	3	; () banked
   777  000D8A  6F04               	movwf	task_create@callback& (0+255),b
   778  000D8C  0E0E               	movlw	high _task_3_priority
   779  000D8E  0103               	movlb	3	; () banked
   780  000D90  6F05               	movwf	(task_create@callback+1)& (0+255),b
   781  000D92  EC62  F004         	call	_task_create	;wreg free
   782                           
   783                           ;main.c: 91: nojo_start();
   784  000D96  ECF0  F008         	call	_nojo_start	;wreg free
   785  000D9A                     l51:
   786  000D9A  F000               	nop		;# 
   787  000D9C  D7FE               	goto	l51
   788  000D9E                     __end_of_main:
   789                           	opt stack 0
   790                           tblptru	equ	0xFF8
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           postdec1	equ	0xFE5
   794                           fsr1h	equ	0xFE2
   795                           fsr1l	equ	0xFE1
   796                           
   797 ;; *************** function _task_create *****************
   798 ;; Defined at:
   799 ;;		line 5 in file "kernel/task.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  id              2    0[BANK3 ] unsigned int 
   802 ;;  priority        2    2[BANK3 ] unsigned int 
   803 ;;  callback        2    4[BANK3 ] PTR FTN()void 
   804 ;;		 -> task_3_priority(1), task_2_priority(1), task_1_priority(1), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  handle          2  129[BANK2 ] PTR struct task_s
   807 ;;		 -> dispatcher.tasks(123), dispatcher(128), 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   817 ;;      Params:         0       0       0       0       6       0       0
   818 ;;      Locals:         0       0       0       2       0       0       0
   819 ;;      Temps:          0       0       0       0       3       0       0
   820 ;;      Totals:         0       0       0       2       9       0       0
   821 ;;Total ram usage:       11 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:   11
   824 ;; This function calls:
   825 ;;		_dispatcher_add_task
   826 ;;		_task_ready
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text1
   833  0008C4                     __ptext1:
   834                           	opt stack 0
   835  0008C4                     _task_create:
   836                           	opt stack 19
   837                           
   838                           ;task.c: 8: task_t* handle = dispatcher_add_task();
   839                           
   840                           ;incstack = 0
   841  0008C4  EC5B  F008         	call	_dispatcher_add_task	;wreg free
   842  0008C8  C27D  F281         	movff	?_dispatcher_add_task,task_create@handle
   843  0008CC  C27E  F282         	movff	?_dispatcher_add_task+1,task_create@handle+1
   844                           
   845                           ;task.c: 10: handle->id = id;
   846  0008D0  C281  FFD9         	movff	task_create@handle,fsr2l
   847  0008D4  C282  FFDA         	movff	task_create@handle+1,fsr2h
   848  0008D8  C300  FFDE         	movff	task_create@id,postinc2
   849  0008DC  C301  FFDD         	movff	task_create@id+1,postdec2
   850                           
   851                           ;task.c: 11: handle->priority = priority;
   852  0008E0  0102               	movlb	2	; () banked
   853  0008E2  EE20 F002          	lfsr	2,2
   854  0008E6  5181               	movf	task_create@handle& (0+255),w,b
   855  0008E8  26D9               	addwf	fsr2l,f,c
   856  0008EA  5182               	movf	(task_create@handle+1)& (0+255),w,b
   857  0008EC  22DA               	addwfc	fsr2h,f,c
   858  0008EE  C302  FFDE         	movff	task_create@priority,postinc2
   859  0008F2  C303  FFDD         	movff	task_create@priority+1,postdec2
   860                           
   861                           ; BSR set to: 2
   862                           ;task.c: 12: handle->callback = callback;
   863  0008F6  0102               	movlb	2	; () banked
   864  0008F8  EE20 F005          	lfsr	2,5
   865  0008FC  5181               	movf	task_create@handle& (0+255),w,b
   866  0008FE  26D9               	addwf	fsr2l,f,c
   867  000900  5182               	movf	(task_create@handle+1)& (0+255),w,b
   868  000902  22DA               	addwfc	fsr2h,f,c
   869  000904  C304  FFDE         	movff	task_create@callback,postinc2
   870  000908  C305  FFDD         	movff	task_create@callback+1,postdec2
   871                           
   872                           ; BSR set to: 2
   873                           ;task.c: 15: handle->context.work = WREG;
   874  00090C  0102               	movlb	2	; () banked
   875  00090E  EE20 F007          	lfsr	2,7
   876  000912  5181               	movf	task_create@handle& (0+255),w,b
   877  000914  26D9               	addwf	fsr2l,f,c
   878  000916  5182               	movf	(task_create@handle+1)& (0+255),w,b
   879  000918  22DA               	addwfc	fsr2h,f,c
   880  00091A  CFE8 FFDF          	movff	wreg,indf2	;volatile
   881                           
   882                           ; BSR set to: 2
   883                           ;task.c: 16: handle->context.bsr = BSR;
   884  00091E  0102               	movlb	2	; () banked
   885  000920  EE20 F008          	lfsr	2,8
   886  000924  5181               	movf	task_create@handle& (0+255),w,b
   887  000926  26D9               	addwf	fsr2l,f,c
   888  000928  5182               	movf	(task_create@handle+1)& (0+255),w,b
   889  00092A  22DA               	addwfc	fsr2h,f,c
   890  00092C  CFE0 FFDF          	movff	bsr,indf2	;volatile
   891                           
   892                           ; BSR set to: 2
   893                           ;task.c: 17: handle->context.status = STATUS;
   894  000930  0102               	movlb	2	; () banked
   895  000932  EE20 F009          	lfsr	2,9
   896  000936  5181               	movf	task_create@handle& (0+255),w,b
   897  000938  26D9               	addwf	fsr2l,f,c
   898  00093A  5182               	movf	(task_create@handle+1)& (0+255),w,b
   899  00093C  22DA               	addwfc	fsr2h,f,c
   900  00093E  CFD8 FFDF          	movff	status,indf2	;volatile
   901                           
   902                           ; BSR set to: 2
   903                           ;task.c: 18: handle->context.stack.size = 1;
   904  000942  0102               	movlb	2	; () banked
   905  000944  EE20 F028          	lfsr	2,40
   906  000948  5181               	movf	task_create@handle& (0+255),w,b
   907  00094A  26D9               	addwf	fsr2l,f,c
   908  00094C  5182               	movf	(task_create@handle+1)& (0+255),w,b
   909  00094E  22DA               	addwfc	fsr2h,f,c
   910  000950  0E01               	movlw	1
   911  000952  6EDF               	movwf	indf2,c
   912                           
   913                           ; BSR set to: 2
   914                           ;task.c: 19: handle->context.stack.values[0] = (uint24_t)callback;
   915  000954  C304  F306         	movff	task_create@callback,??_task_create
   916  000958  C305  F307         	movff	task_create@callback+1,??_task_create+1
   917  00095C  0103               	movlb	3	; () banked
   918  00095E  6B08               	clrf	(??_task_create+2)& (0+255),b
   919  000960  0102               	movlb	2	; () banked
   920  000962  EE20 F00A          	lfsr	2,10
   921  000966  5181               	movf	task_create@handle& (0+255),w,b
   922  000968  26D9               	addwf	fsr2l,f,c
   923  00096A  5182               	movf	(task_create@handle+1)& (0+255),w,b
   924  00096C  22DA               	addwfc	fsr2h,f,c
   925  00096E  C306  FFDE         	movff	??_task_create,postinc2
   926  000972  C307  FFDE         	movff	??_task_create+1,postinc2
   927  000976  C308  FFDE         	movff	??_task_create+2,postinc2
   928                           
   929                           ; BSR set to: 2
   930                           ;task.c: 21: task_ready( handle );
   931  00097A  C281  F27D         	movff	task_create@handle,task_ready@handle
   932  00097E  C282  F27E         	movff	task_create@handle+1,task_ready@handle+1
   933  000982  ECAD  F008         	call	_task_ready	;wreg free
   934  000986  0012               	return		;funcret
   935  000988                     __end_of_task_create:
   936                           	opt stack 0
   937                           tblptru	equ	0xFF8
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1h	equ	0xFE2
   942                           fsr1l	equ	0xFE1
   943                           bsr	equ	0xFE0
   944                           indf2	equ	0xFDF
   945                           postinc2	equ	0xFDE
   946                           postdec2	equ	0xFDD
   947                           fsr2h	equ	0xFDA
   948                           fsr2l	equ	0xFD9
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _task_ready *****************
   952 ;; Defined at:
   953 ;;		line 24 in file "kernel/task.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  handle          2  125[BANK2 ] PTR struct task_s
   956 ;;		 -> s_heap(512), dispatcher.tasks(123), idle(41), dispatcher(128), 
   957 ;;		 -> NULL(0), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   969 ;;      Params:         0       0       0       2       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0
   972 ;;      Totals:         0       0       0       2       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:   10
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_task_create
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984  00115A                     __ptext2:
   985                           	opt stack 0
   986  00115A                     _task_ready:
   987                           	opt stack 19
   988                           
   989                           ;task.c: 25: handle->state = task_state_ready;
   990                           
   991                           ;incstack = 0
   992  00115A  0102               	movlb	2	; () banked
   993  00115C  EE20 F004          	lfsr	2,4
   994  001160  517D               	movf	task_ready@handle& (0+255),w,b
   995  001162  26D9               	addwf	fsr2l,f,c
   996  001164  517E               	movf	(task_ready@handle+1)& (0+255),w,b
   997  001166  22DA               	addwfc	fsr2h,f,c
   998  001168  0E00               	movlw	0
   999  00116A  6EDF               	movwf	indf2,c
  1000                           
  1001                           ; BSR set to: 2
  1002  00116C  0012               	return		;funcret
  1003  00116E                     __end_of_task_ready:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           postdec1	equ	0xFE5
  1009                           fsr1h	equ	0xFE2
  1010                           fsr1l	equ	0xFE1
  1011                           bsr	equ	0xFE0
  1012                           indf2	equ	0xFDF
  1013                           postinc2	equ	0xFDE
  1014                           postdec2	equ	0xFDD
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _dispatcher_add_task *****************
  1020 ;; Defined at:
  1021 ;;		line 43 in file "kernel/dispatcher.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  task            2  127[BANK2 ] PTR struct task_s
  1026 ;;		 -> dispatcher.tasks(123), dispatcher(128), 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2  125[BANK2 ] PTR struct task_s
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, prodl, prodh
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         0       0       0       2       0       0       0
  1037 ;;      Locals:         0       0       0       2       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         0       0       0       4       0       0       0
  1040 ;;Total ram usage:        4 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:   10
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_task_create
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text3
  1051  0010B6                     __ptext3:
  1052                           	opt stack 0
  1053  0010B6                     _dispatcher_add_task:
  1054                           	opt stack 19
  1055                           
  1056                           ;dispatcher.c: 44: task_t* task = &dispatcher.tasks[dispatcher.size];
  1057                           
  1058                           ; BSR set to: 2
  1059                           ;incstack = 0
  1060  0010B6  0101               	movlb	1	; () banked
  1061  0010B8  517B               	movf	(_dispatcher+123)& (0+255),w,b
  1062  0010BA  0D29               	mullw	41
  1063  0010BC  0E00               	movlw	low _dispatcher
  1064  0010BE  24F3               	addwf	prodl,w,c
  1065  0010C0  0102               	movlb	2	; () banked
  1066  0010C2  6F7F               	movwf	dispatcher_add_task@task& (0+255),b
  1067  0010C4  0E01               	movlw	high _dispatcher
  1068  0010C6  20F4               	addwfc	prodh,w,c
  1069  0010C8  0102               	movlb	2	; () banked
  1070  0010CA  6F80               	movwf	(dispatcher_add_task@task+1)& (0+255),b
  1071                           
  1072                           ; BSR set to: 2
  1073                           ;dispatcher.c: 45: dispatcher.size++;
  1074  0010CC  0101               	movlb	1	; () banked
  1075  0010CE  2B7B               	incf	(_dispatcher+123)& (0+255),f,b
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;dispatcher.c: 46: return task;
  1079  0010D0  C27F  F27D         	movff	dispatcher_add_task@task,?_dispatcher_add_task
  1080  0010D4  C280  F27E         	movff	dispatcher_add_task@task+1,?_dispatcher_add_task+1
  1081  0010D8  0012               	return	
  1082  0010DA                     __end_of_dispatcher_add_task:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           prodh	equ	0xFF4
  1086                           prodl	equ	0xFF3
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1h	equ	0xFE2
  1091                           fsr1l	equ	0xFE1
  1092                           bsr	equ	0xFE0
  1093                           indf2	equ	0xFDF
  1094                           postinc2	equ	0xFDE
  1095                           postdec2	equ	0xFDD
  1096                           fsr2h	equ	0xFDA
  1097                           fsr2l	equ	0xFD9
  1098                           status	equ	0xFD8
  1099                           
  1100 ;; *************** function _nojo_start *****************
  1101 ;; Defined at:
  1102 ;;		line 23 in file "nojentOS.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1116 ;;      Params:         0       0       0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:   13
  1123 ;; This function calls:
  1124 ;;		_dispatcher_start
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text4
  1131  0011E0                     __ptext4:
  1132                           	opt stack 0
  1133  0011E0                     _nojo_start:
  1134                           	opt stack 17
  1135                           
  1136                           ;nojentOS.c: 24: dispatcher_start();
  1137                           
  1138                           ; BSR set to: 1
  1139                           ;incstack = 0
  1140  0011E0  EC9F  F008         	call	_dispatcher_start	;wreg free
  1141                           
  1142                           ;nojentOS.c: 26: do{ INTCONbits.GIE = 1; }while(0);
  1143  0011E4  8EF2               	bsf	intcon,7,c	;volatile
  1144  0011E6  0012               	return	
  1145  0011E8                     __end_of_nojo_start:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           prodh	equ	0xFF4
  1149                           prodl	equ	0xFF3
  1150                           intcon	equ	0xFF2
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1h	equ	0xFE2
  1155                           fsr1l	equ	0xFE1
  1156                           bsr	equ	0xFE0
  1157                           indf2	equ	0xFDF
  1158                           postinc2	equ	0xFDE
  1159                           postdec2	equ	0xFDD
  1160                           fsr2h	equ	0xFDA
  1161                           fsr2l	equ	0xFD9
  1162                           status	equ	0xFD8
  1163                           
  1164 ;; *************** function _dispatcher_start *****************
  1165 ;; Defined at:
  1166 ;;		line 39 in file "kernel/dispatcher.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1180 ;;      Params:         0       0       0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:   12
  1187 ;; This function calls:
  1188 ;;		_timer0_init
  1189 ;; This function is called by:
  1190 ;;		_nojo_start
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text5
  1195  00113E                     __ptext5:
  1196                           	opt stack 0
  1197  00113E                     _dispatcher_start:
  1198                           	opt stack 17
  1199                           
  1200                           ;dispatcher.c: 40: timer0_init( 10000, dispatcher_change_context_isr );
  1201                           
  1202                           ;incstack = 0
  1203  00113E  0E27               	movlw	39
  1204  001140  0102               	movlb	2	; () banked
  1205  001142  6F7E               	movwf	(timer0_init@delay_us+1)& (0+255),b
  1206  001144  0E10               	movlw	16
  1207  001146  6F7D               	movwf	timer0_init@delay_us& (0+255),b
  1208  001148  0EC6               	movlw	low _dispatcher_change_context_isr
  1209  00114A  0102               	movlb	2	; () banked
  1210  00114C  6F7F               	movwf	timer0_init@callback& (0+255),b
  1211  00114E  0E0E               	movlw	high _dispatcher_change_context_isr
  1212  001150  0102               	movlb	2	; () banked
  1213  001152  6F80               	movwf	(timer0_init@callback+1)& (0+255),b
  1214  001154  EC1C  F008         	call	_timer0_init	;wreg free
  1215  001158  0012               	return		;funcret
  1216  00115A                     __end_of_dispatcher_start:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           prodh	equ	0xFF4
  1220                           prodl	equ	0xFF3
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           bsr	equ	0xFE0
  1228                           indf2	equ	0xFDF
  1229                           postinc2	equ	0xFDE
  1230                           postdec2	equ	0xFDD
  1231                           fsr2h	equ	0xFDA
  1232                           fsr2l	equ	0xFD9
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function _timer0_init *****************
  1236 ;; Defined at:
  1237 ;;		line 15 in file "kernel/timers.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  delay_us        2  125[BANK2 ] unsigned int 
  1240 ;;  callback        2  127[BANK2 ] PTR FTN()void 
  1241 ;;		 -> dispatcher_change_context_isr(1), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         0       0       0       4       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         0       0       0       4       0       0       0
  1257 ;;Total ram usage:        4 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:   11
  1260 ;; This function calls:
  1261 ;;		_timer0_reset
  1262 ;; This function is called by:
  1263 ;;		_dispatcher_start
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text6
  1268  001038                     __ptext6:
  1269                           	opt stack 0
  1270  001038                     _timer0_init:
  1271                           	opt stack 17
  1272                           
  1273                           ;timers.c: 17: T0CONbits.TMR0ON = 0;
  1274                           
  1275                           ;incstack = 0
  1276  001038  9ED5               	bcf	4053,7,c	;volatile
  1277                           
  1278                           ;timers.c: 19: INTCONbits.TMR0IE = 0;
  1279  00103A  9AF2               	bcf	intcon,5,c	;volatile
  1280                           
  1281                           ;timers.c: 23: _timer0_delay_us = delay_us;
  1282  00103C  C27D  F1A9         	movff	timer0_init@delay_us,__timer0_delay_us
  1283  001040  C27E  F1AA         	movff	timer0_init@delay_us+1,__timer0_delay_us+1
  1284                           
  1285                           ;timers.c: 25: _timer0_callback = callback;
  1286  001044  C27F  F03B         	movff	timer0_init@callback,__timer0_callback
  1287  001048  C280  F03C         	movff	timer0_init@callback+1,__timer0_callback+1
  1288                           
  1289                           ;timers.c: 28: T0CONbits.T08BIT = 0;
  1290  00104C  9CD5               	bcf	4053,6,c	;volatile
  1291                           
  1292                           ;timers.c: 30: T0CONbits.T0CS = 0;
  1293  00104E  9AD5               	bcf	4053,5,c	;volatile
  1294                           
  1295                           ;timers.c: 32: T0CONbits.T0SE = 0;
  1296  001050  98D5               	bcf	4053,4,c	;volatile
  1297                           
  1298                           ;timers.c: 34: T0CONbits.PSA = 1;
  1299  001052  86D5               	bsf	4053,3,c	;volatile
  1300                           
  1301                           ;timers.c: 36: T0CONbits.T0PS = 0b010;
  1302  001054  50D5               	movf	4053,w,c	;volatile
  1303  001056  0BF8               	andlw	-8
  1304  001058  0902               	iorlw	2
  1305  00105A  6ED5               	movwf	4053,c	;volatile
  1306                           
  1307                           ;timers.c: 38: INTCONbits.TMR0IF = 0;
  1308  00105C  94F2               	bcf	intcon,2,c	;volatile
  1309                           
  1310                           ;timers.c: 40: INTCON2bits.TMR0IP = 1;
  1311  00105E  84F1               	bsf	intcon2,2,c	;volatile
  1312                           
  1313                           ;timers.c: 43: timer0_reset();
  1314  001060  ECE4  F008         	call	_timer0_reset	;wreg free
  1315                           
  1316                           ;timers.c: 46: INTCONbits.TMR0IE = 1;
  1317  001064  8AF2               	bsf	intcon,5,c	;volatile
  1318                           
  1319                           ;timers.c: 48: T0CONbits.TMR0ON = 1;
  1320  001066  8ED5               	bsf	4053,7,c	;volatile
  1321  001068  0012               	return		;funcret
  1322  00106A                     __end_of_timer0_init:
  1323                           	opt stack 0
  1324                           tblptru	equ	0xFF8
  1325                           prodh	equ	0xFF4
  1326                           prodl	equ	0xFF3
  1327                           intcon	equ	0xFF2
  1328                           intcon2	equ	0xFF1
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           postdec1	equ	0xFE5
  1332                           fsr1h	equ	0xFE2
  1333                           fsr1l	equ	0xFE1
  1334                           bsr	equ	0xFE0
  1335                           indf2	equ	0xFDF
  1336                           postinc2	equ	0xFDE
  1337                           postdec2	equ	0xFDD
  1338                           fsr2h	equ	0xFDA
  1339                           fsr2l	equ	0xFD9
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _timer0_reset *****************
  1343 ;; Defined at:
  1344 ;;		line 8 in file "kernel/timers.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		None
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1358 ;;      Params:         0       0       0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:   10
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_timer0_init
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text7
  1373  0011C8                     __ptext7:
  1374                           	opt stack 0
  1375  0011C8                     _timer0_reset:
  1376                           	opt stack 17
  1377                           
  1378                           ;timers.c: 10: INTCONbits.TMR0IF = 0;
  1379                           
  1380                           ;incstack = 0
  1381  0011C8  94F2               	bcf	intcon,2,c	;volatile
  1382                           
  1383                           ;timers.c: 12: TMR0 = _timer0_delay_us;
  1384  0011CA  C1A9  FFD6         	movff	__timer0_delay_us,4054	;volatile
  1385  0011CE  C1AA  FFD7         	movff	__timer0_delay_us+1,4055	;volatile
  1386  0011D2  0012               	return		;funcret
  1387  0011D4                     __end_of_timer0_reset:
  1388                           	opt stack 0
  1389                           tblptru	equ	0xFF8
  1390                           prodh	equ	0xFF4
  1391                           prodl	equ	0xFF3
  1392                           intcon	equ	0xFF2
  1393                           intcon2	equ	0xFF1
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1h	equ	0xFE2
  1398                           fsr1l	equ	0xFE1
  1399                           bsr	equ	0xFE0
  1400                           indf2	equ	0xFDF
  1401                           postinc2	equ	0xFDE
  1402                           postdec2	equ	0xFDD
  1403                           fsr2h	equ	0xFDA
  1404                           fsr2l	equ	0xFD9
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _nojo_init *****************
  1408 ;; Defined at:
  1409 ;;		line 15 in file "nojentOS.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1423 ;;      Params:         0       0       0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:   11
  1430 ;; This function calls:
  1431 ;;		_dispatcher_init
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text8
  1438  0011BA                     __ptext8:
  1439                           	opt stack 0
  1440  0011BA                     _nojo_init:
  1441                           	opt stack 19
  1442                           
  1443                           ;nojentOS.c: 17: OSCCONbits.IRCF = 0b111;
  1444                           
  1445                           ;incstack = 0
  1446  0011BA  88D3               	bsf	4051,4,c	;volatile
  1447  0011BC  8AD3               	bsf	4051,5,c	;volatile
  1448  0011BE  8CD3               	bsf	4051,6,c	;volatile
  1449                           
  1450                           ;nojentOS.c: 18: OSCTUNEbits.PLLEN = 0;
  1451  0011C0  9C9B               	bcf	3995,6,c	;volatile
  1452                           
  1453                           ;nojentOS.c: 20: dispatcher_init();
  1454  0011C2  EC86  F007         	call	_dispatcher_init	;wreg free
  1455  0011C6  0012               	return		;funcret
  1456  0011C8                     __end_of_nojo_init:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           prodh	equ	0xFF4
  1460                           prodl	equ	0xFF3
  1461                           intcon	equ	0xFF2
  1462                           intcon2	equ	0xFF1
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           postdec1	equ	0xFE5
  1466                           fsr1h	equ	0xFE2
  1467                           fsr1l	equ	0xFE1
  1468                           bsr	equ	0xFE0
  1469                           indf2	equ	0xFDF
  1470                           postinc2	equ	0xFDE
  1471                           postdec2	equ	0xFDD
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _dispatcher_init *****************
  1477 ;; Defined at:
  1478 ;;		line 18 in file "kernel/dispatcher.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         0       0       0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:   10
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_nojo_init
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text9
  1507  000F0C                     __ptext9:
  1508                           	opt stack 0
  1509  000F0C                     _dispatcher_init:
  1510                           	opt stack 19
  1511                           
  1512                           ;dispatcher.c: 19: dispatcher.size = 0;
  1513                           
  1514                           ;incstack = 0
  1515  000F0C  0E00               	movlw	0
  1516  000F0E  0101               	movlb	1	; () banked
  1517  000F10  6F7B               	movwf	(_dispatcher+123)& (0+255),b
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;dispatcher.c: 23: dispatcher.callback = scheduler_priority;
  1521  000F12  0EFE               	movlw	low _scheduler_priority
  1522  000F14  0101               	movlb	1	; () banked
  1523  000F16  6F7E               	movwf	(_dispatcher+126)& (0+255),b
  1524  000F18  0E07               	movlw	high _scheduler_priority
  1525  000F1A  0101               	movlb	1	; () banked
  1526  000F1C  6F7F               	movwf	(_dispatcher+127)& (0+255),b
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;dispatcher.c: 26: idle.id = 255;
  1530  000F1E  0E00               	movlw	0
  1531  000F20  0101               	movlb	1	; () banked
  1532  000F22  6F81               	movwf	(_idle+1)& (0+255),b
  1533  000F24  6980               	setf	_idle& (0+255),b
  1534                           
  1535                           ; BSR set to: 1
  1536                           ;dispatcher.c: 27: idle.priority = 0;
  1537  000F26  0E00               	movlw	0
  1538  000F28  0101               	movlb	1	; () banked
  1539  000F2A  6F83               	movwf	(_idle+3)& (0+255),b
  1540  000F2C  0E00               	movlw	0
  1541  000F2E  6F82               	movwf	(_idle+2)& (0+255),b
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;dispatcher.c: 28: idle.state = task_state_ready;
  1545  000F30  0E00               	movlw	0
  1546  000F32  0101               	movlb	1	; () banked
  1547  000F34  6F84               	movwf	(_idle+4)& (0+255),b
  1548                           
  1549                           ;dispatcher.c: 29: idle.callback = task_idle_callback;
  1550  000F36  0EE8               	movlw	low _task_idle_callback
  1551  000F38  0101               	movlb	1	; () banked
  1552  000F3A  6F85               	movwf	(_idle+5)& (0+255),b
  1553  000F3C  0E11               	movlw	high _task_idle_callback
  1554  000F3E  0101               	movlb	1	; () banked
  1555  000F40  6F86               	movwf	(_idle+6)& (0+255),b
  1556                           
  1557                           ;dispatcher.c: 36: dispatcher.running = &idle;
  1558  000F42  0E80               	movlw	low _idle
  1559  000F44  0101               	movlb	1	; () banked
  1560  000F46  6F7C               	movwf	(_dispatcher+124)& (0+255),b
  1561  000F48  0E01               	movlw	high _idle
  1562  000F4A  0101               	movlb	1	; () banked
  1563  000F4C  6F7D               	movwf	(_dispatcher+125)& (0+255),b
  1564                           
  1565                           ; BSR set to: 1
  1566  000F4E  0012               	return		;funcret
  1567  000F50                     __end_of_dispatcher_init:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           intcon	equ	0xFF2
  1573                           intcon2	equ	0xFF1
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           postdec1	equ	0xFE5
  1577                           fsr1h	equ	0xFE2
  1578                           fsr1l	equ	0xFE1
  1579                           bsr	equ	0xFE0
  1580                           indf2	equ	0xFDF
  1581                           postinc2	equ	0xFDE
  1582                           postdec2	equ	0xFDD
  1583                           fsr2h	equ	0xFDA
  1584                           fsr2l	equ	0xFD9
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _task_1_priority *****************
  1588 ;; Defined at:
  1589 ;;		line 45 in file "main.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  i               2   38[BANK0 ] unsigned int 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1603 ;;      Params:         0       0       0       0       0       0       0
  1604 ;;      Locals:         0       2       0       0       0       0       0
  1605 ;;      Temps:          0       1       0       0       0       0       0
  1606 ;;      Totals:         0       3       0       0       0       0       0
  1607 ;;Total ram usage:        3 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    9
  1610 ;; This function calls:
  1611 ;;		_semaphore_init
  1612 ;;		_semaphore_wait
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text10
  1619  000CA4                     __ptext10:
  1620                           	opt stack 0
  1621  000CA4                     _task_1_priority:
  1622                           	opt stack 17
  1623                           
  1624                           ;main.c: 46: TRISDbits.RD0 = 0;
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;incstack = 0
  1628  000CA4  9095               	bcf	3989,0,c	;volatile
  1629                           
  1630                           ;main.c: 47: PORTDbits.RD0 = 0;
  1631  000CA6  9083               	bcf	3971,0,c	;volatile
  1632                           
  1633                           ;main.c: 49: semaphore_init( &g_sem_1, 0 );
  1634  000CA8  0ED0               	movlw	low _g_sem_1
  1635  000CAA  0100               	movlb	0	; () banked
  1636  000CAC  6F9E               	movwf	semaphore_init@handle& (0+255),b
  1637  000CAE  0E00               	movlw	high _g_sem_1
  1638  000CB0  0100               	movlb	0	; () banked
  1639  000CB2  6F9F               	movwf	(semaphore_init@handle+1)& (0+255),b
  1640  000CB4  0E00               	movlw	0
  1641  000CB6  0100               	movlb	0	; () banked
  1642  000CB8  6FA0               	movwf	semaphore_init@initial_value& (0+255),b
  1643  000CBA  EC35  F008         	call	_semaphore_init	;wreg free
  1644                           
  1645                           ;main.c: 50: semaphore_init( &g_sem_2, 0 );
  1646  000CBE  0ED4               	movlw	low _g_sem_2
  1647  000CC0  0100               	movlb	0	; () banked
  1648  000CC2  6F9E               	movwf	semaphore_init@handle& (0+255),b
  1649  000CC4  0E00               	movlw	high _g_sem_2
  1650  000CC6  0100               	movlb	0	; () banked
  1651  000CC8  6F9F               	movwf	(semaphore_init@handle+1)& (0+255),b
  1652  000CCA  0E00               	movlw	0
  1653  000CCC  0100               	movlb	0	; () banked
  1654  000CCE  6FA0               	movwf	semaphore_init@initial_value& (0+255),b
  1655  000CD0  EC35  F008         	call	_semaphore_init	;wreg free
  1656  000CD4                     l4674:
  1657                           
  1658                           ;main.c: 53: PORTDbits.RD0 = !LATDbits.LATD0;
  1659  000CD4  B08C               	btfsc	3980,0,c	;volatile
  1660  000CD6  D004               	goto	u425_20
  1661  000CD8  0100               	movlb	0	; () banked
  1662  000CDA  6BA5               	clrf	??_task_1_priority& (0+255),b
  1663  000CDC  2BA5               	incf	??_task_1_priority& (0+255),f,b
  1664  000CDE  D002               	goto	u426_28
  1665  000CE0                     u425_20:
  1666  000CE0  0100               	movlb	0	; () banked
  1667  000CE2  6BA5               	clrf	??_task_1_priority& (0+255),b
  1668  000CE4                     u426_28:
  1669  000CE4  5083               	movf	3971,w,c	;volatile
  1670  000CE6  0100               	movlb	0	; () banked
  1671  000CE8  19A5               	xorwf	??_task_1_priority& (0+255),w,b
  1672  000CEA  0BFE               	andlw	-2
  1673  000CEC  19A5               	xorwf	??_task_1_priority& (0+255),w,b
  1674  000CEE  6E83               	movwf	3971,c	;volatile
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;main.c: 54: for( uint16_t i = 0; i < 60000; i++ ) { __nop(); }
  1678  000CF0  0E00               	movlw	0
  1679  000CF2  0100               	movlb	0	; () banked
  1680  000CF4  6FA7               	movwf	(task_1_priority@i+1)& (0+255),b
  1681  000CF6  0E00               	movlw	0
  1682  000CF8  6FA6               	movwf	task_1_priority@i& (0+255),b
  1683  000CFA                     l4678:
  1684                           
  1685                           ; BSR set to: 0
  1686  000CFA  0E60               	movlw	96
  1687  000CFC  0100               	movlb	0	; () banked
  1688  000CFE  5DA6               	subwf	task_1_priority@i& (0+255),w,b
  1689  000D00  0EEA               	movlw	234
  1690  000D02  0100               	movlb	0	; () banked
  1691  000D04  59A7               	subwfb	(task_1_priority@i+1)& (0+255),w,b
  1692  000D06  B0D8               	btfsc	status,0,c
  1693  000D08  D005               	goto	l4686
  1694                           
  1695                           ; BSR set to: 0
  1696                           
  1697                           ; BSR set to: 0
  1698  000D0A  F000               	nop	
  1699  000D0C  0100               	movlb	0	; () banked
  1700  000D0E  4BA6               	infsnz	task_1_priority@i& (0+255),f,b
  1701  000D10  2BA7               	incf	(task_1_priority@i+1)& (0+255),f,b
  1702  000D12  D7F3               	goto	l4678
  1703  000D14                     l4686:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;main.c: 55: semaphore_wait( &g_sem_1 );
  1707  000D14  0ED0               	movlw	low _g_sem_1
  1708  000D16  0100               	movlb	0	; () banked
  1709  000D18  6FCA               	movwf	semaphore_wait@handle& (0+255),b
  1710  000D1A  0E00               	movlw	high _g_sem_1
  1711  000D1C  0100               	movlb	0	; () banked
  1712  000D1E  6FCB               	movwf	(semaphore_wait@handle+1)& (0+255),b
  1713  000D20  ECC8  F007         	call	_semaphore_wait	;wreg free
  1714  000D24  D7D7               	goto	l4674
  1715  000D26                     __end_of_task_1_priority:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           prodh	equ	0xFF4
  1719                           prodl	equ	0xFF3
  1720                           intcon	equ	0xFF2
  1721                           intcon2	equ	0xFF1
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           postdec1	equ	0xFE5
  1725                           fsr1h	equ	0xFE2
  1726                           fsr1l	equ	0xFE1
  1727                           bsr	equ	0xFE0
  1728                           indf2	equ	0xFDF
  1729                           postinc2	equ	0xFDE
  1730                           postdec2	equ	0xFDD
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _semaphore_wait *****************
  1736 ;; Defined at:
  1737 ;;		line 10 in file "kernel/semaphore.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  handle          2   74[BANK0 ] PTR struct semaphore_s
  1740 ;;		 -> g_sem_2(4), g_sem_1(4), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1752 ;;      Params:         0       2       0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0
  1754 ;;      Temps:          0       1       0       0       0       0       0
  1755 ;;      Totals:         0       3       0       0       0       0       0
  1756 ;;Total ram usage:        3 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    8
  1759 ;; This function calls:
  1760 ;;		_dispatcher_change_context
  1761 ;;		_linked_list_insert
  1762 ;; This function is called by:
  1763 ;;		_task_1_priority
  1764 ;;		_task_2_priority
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text11
  1769  000F90                     __ptext11:
  1770                           	opt stack 0
  1771  000F90                     _semaphore_wait:
  1772                           	opt stack 17
  1773                           
  1774                           ;semaphore.c: 12: if( --handle->value < 0 ) {
  1775                           
  1776                           ;incstack = 0
  1777  000F90  C0CA  FFD9         	movff	semaphore_wait@handle,fsr2l
  1778  000F94  C0CB  FFDA         	movff	semaphore_wait@handle+1,fsr2h
  1779  000F98  06DF               	decf	indf2,f,c
  1780  000F9A  0E00               	movlw	0
  1781  000F9C  AEDB               	btfss	plusw2,7,c
  1782  000F9E  0012               	return	
  1783                           
  1784                           ;semaphore.c: 14: linked_list_insert( handle->queue, (pointer_t)dispatcher.running );
  1785  000FA0  0100               	movlb	0	; () banked
  1786  000FA2  EE20 F001          	lfsr	2,1
  1787  000FA6  51CA               	movf	semaphore_wait@handle& (0+255),w,b
  1788  000FA8  26D9               	addwf	fsr2l,f,c
  1789  000FAA  51CB               	movf	(semaphore_wait@handle+1)& (0+255),w,b
  1790  000FAC  22DA               	addwfc	fsr2h,f,c
  1791  000FAE  CFDE F0C0          	movff	postinc2,linked_list_insert@a_head
  1792  000FB2  CFDD F0C1          	movff	postdec2,linked_list_insert@a_head+1
  1793  000FB6  C17C  F0C2         	movff	_dispatcher+124,linked_list_insert@a_data
  1794  000FBA  C17D  F0C3         	movff	_dispatcher+125,linked_list_insert@a_data+1
  1795  000FBE  ECC4  F004         	call	_linked_list_insert	;wreg free
  1796                           
  1797                           ;semaphore.c: 16: dispatcher_change_context( task_state_blocked );
  1798  000FC2  0E02               	movlw	2
  1799  000FC4  EC3F  F002         	call	_dispatcher_change_context
  1800  000FC8  0012               	return	
  1801  000FCA                     __end_of_semaphore_wait:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           intcon	equ	0xFF2
  1807                           intcon2	equ	0xFF1
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           bsr	equ	0xFE0
  1814                           indf2	equ	0xFDF
  1815                           postinc2	equ	0xFDE
  1816                           postdec2	equ	0xFDD
  1817                           plusw2	equ	0xFDB
  1818                           fsr2h	equ	0xFDA
  1819                           fsr2l	equ	0xFD9
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _linked_list_insert *****************
  1823 ;; Defined at:
  1824 ;;		line 28 in file "kernel/linked_list.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  a_head          2   64[BANK0 ] PTR struct linked_list_s
  1827 ;;  a_data          2   66[BANK0 ] PTR void 
  1828 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  l_node          2   72[BANK0 ] PTR struct linked_list_s
  1831 ;;		 -> s_heap(512), NULL(0), 
  1832 ;;  l_head_data     2   70[BANK0 ] PTR struct linked_list_h
  1833 ;;		 -> s_heap(512), idle(41), dispatcher(128), NULL(0), 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      char 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1843 ;;      Params:         0       4       0       0       0       0       0
  1844 ;;      Locals:         0       4       0       0       0       0       0
  1845 ;;      Temps:          0       2       0       0       0       0       0
  1846 ;;      Totals:         0      10       0       0       0       0       0
  1847 ;;Total ram usage:       10 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    7
  1850 ;; This function calls:
  1851 ;;		_malloc
  1852 ;; This function is called by:
  1853 ;;		_semaphore_wait
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text12
  1858  000988                     __ptext12:
  1859                           	opt stack 0
  1860  000988                     _linked_list_insert:
  1861                           	opt stack 17
  1862                           
  1863                           ;linked_list.c: 29: linked_list_t* l_node = (linked_list_t*) malloc( sizeof(linked_list_
      +                          t) );
  1864                           
  1865                           ;incstack = 0
  1866  000988  0E00               	movlw	0
  1867  00098A  0100               	movlb	0	; () banked
  1868  00098C  6FB3               	movwf	(malloc@a_size+1)& (0+255),b
  1869  00098E  0E04               	movlw	4
  1870  000990  6FB2               	movwf	malloc@a_size& (0+255),b
  1871  000992  EC2F  F001         	call	_malloc	;wreg free
  1872  000996  C0B2  F0C8         	movff	?_malloc,linked_list_insert@l_node
  1873  00099A  C0B3  F0C9         	movff	?_malloc+1,linked_list_insert@l_node+1
  1874                           
  1875                           ;linked_list.c: 31: if( l_node == ((void*)0) ) {
  1876  00099E  0100               	movlb	0	; () banked
  1877  0009A0  51C8               	movf	linked_list_insert@l_node& (0+255),w,b
  1878  0009A2  0100               	movlb	0	; () banked
  1879  0009A4  11C9               	iorwf	(linked_list_insert@l_node+1)& (0+255),w,b
  1880  0009A6  B4D8               	btfsc	status,2,c
  1881  0009A8  0012               	return	
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;linked_list.c: 33: }
  1885                           ;linked_list.c: 35: l_node->next = ((void*)0);
  1886                           
  1887                           ; BSR set to: 0
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;linked_list.c: 32: return -1;
  1891                           ;	Return value of _linked_list_insert is never used
  1892  0009AA  C0C8  FFD9         	movff	linked_list_insert@l_node,fsr2l
  1893  0009AE  C0C9  FFDA         	movff	linked_list_insert@l_node+1,fsr2h
  1894  0009B2  0E00               	movlw	0
  1895  0009B4  6EDE               	movwf	postinc2,c
  1896  0009B6  0E00               	movlw	0
  1897  0009B8  6EDD               	movwf	postdec2,c
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;linked_list.c: 36: l_node->data = a_data;
  1901  0009BA  0100               	movlb	0	; () banked
  1902  0009BC  EE20 F002          	lfsr	2,2
  1903  0009C0  51C8               	movf	linked_list_insert@l_node& (0+255),w,b
  1904  0009C2  26D9               	addwf	fsr2l,f,c
  1905  0009C4  51C9               	movf	(linked_list_insert@l_node+1)& (0+255),w,b
  1906  0009C6  22DA               	addwfc	fsr2h,f,c
  1907  0009C8  C0C2  FFDE         	movff	linked_list_insert@a_data,postinc2
  1908  0009CC  C0C3  FFDD         	movff	linked_list_insert@a_data+1,postdec2
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;linked_list.c: 38: linked_list_head_data_t* l_head_data = (linked_list_head_data_t*)(a_
      +                          head->data);
  1912  0009D0  0100               	movlb	0	; () banked
  1913  0009D2  EE20 F002          	lfsr	2,2
  1914  0009D6  51C0               	movf	linked_list_insert@a_head& (0+255),w,b
  1915  0009D8  26D9               	addwf	fsr2l,f,c
  1916  0009DA  51C1               	movf	(linked_list_insert@a_head+1)& (0+255),w,b
  1917  0009DC  22DA               	addwfc	fsr2h,f,c
  1918  0009DE  CFDE F0C6          	movff	postinc2,linked_list_insert@l_head_data
  1919  0009E2  CFDD F0C7          	movff	postdec2,linked_list_insert@l_head_data+1
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;linked_list.c: 41: a_head->next = l_node;
  1923  0009E6  C0C0  FFD9         	movff	linked_list_insert@a_head,fsr2l
  1924  0009EA  C0C1  FFDA         	movff	linked_list_insert@a_head+1,fsr2h
  1925  0009EE  50DE               	movf	postinc2,w,c
  1926  0009F0  10DE               	iorwf	postinc2,w,c
  1927  0009F2  B4D8               	btfsc	status,2,c
  1928  0009F4  D013               	goto	L1
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;linked_list.c: 44: l_head_data->last->next = l_node;
  1932                           
  1933                           ; BSR set to: 0
  1934                           
  1935                           ;linked_list.c: 43: } else {
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;linked_list.c: 42: l_head_data->last = l_node;
  1939  0009F6  0100               	movlb	0	; () banked
  1940  0009F8  EE20 F001          	lfsr	2,1
  1941  0009FC  51C6               	movf	linked_list_insert@l_head_data& (0+255),w,b
  1942  0009FE  26D9               	addwf	fsr2l,f,c
  1943  000A00  51C7               	movf	(linked_list_insert@l_head_data+1)& (0+255),w,b
  1944  000A02  22DA               	addwfc	fsr2h,f,c
  1945  000A04  CFDE F0C4          	movff	postinc2,??_linked_list_insert
  1946  000A08  CFDD F0C5          	movff	postdec2,??_linked_list_insert+1
  1947  000A0C  C0C4  FFD9         	movff	??_linked_list_insert,fsr2l
  1948  000A10  C0C5  FFDA         	movff	??_linked_list_insert+1,fsr2h
  1949  000A14  C0C8  FFDE         	movff	linked_list_insert@l_node,postinc2
  1950  000A18  C0C9  FFDD         	movff	linked_list_insert@l_node+1,postdec2
  1951  000A1C                     L1:
  1952                           
  1953                           ;linked_list.c: 45: l_head_data->last = l_node;
  1954  000A1C  0100               	movlb	0	; () banked
  1955  000A1E  EE20 F001          	lfsr	2,1
  1956  000A22  51C6               	movf	linked_list_insert@l_head_data& (0+255),w,b
  1957  000A24  26D9               	addwf	fsr2l,f,c
  1958  000A26  51C7               	movf	(linked_list_insert@l_head_data+1)& (0+255),w,b
  1959  000A28  22DA               	addwfc	fsr2h,f,c
  1960  000A2A  C0C8  FFDE         	movff	linked_list_insert@l_node,postinc2
  1961  000A2E  C0C9  FFDD         	movff	linked_list_insert@l_node+1,postdec2
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;linked_list.c: 46: }
  1965                           ;linked_list.c: 48: l_head_data->size++;
  1966                           
  1967                           ; BSR set to: 0
  1968  000A32  C0C6  FFD9         	movff	linked_list_insert@l_head_data,fsr2l
  1969  000A36  C0C7  FFDA         	movff	linked_list_insert@l_head_data+1,fsr2h
  1970  000A3A  2ADF               	incf	indf2,f,c
  1971  000A3C  0012               	return	
  1972  000A3E                     __end_of_linked_list_insert:
  1973                           	opt stack 0
  1974                           tblptru	equ	0xFF8
  1975                           prodh	equ	0xFF4
  1976                           prodl	equ	0xFF3
  1977                           intcon	equ	0xFF2
  1978                           intcon2	equ	0xFF1
  1979                           postinc0	equ	0xFEE
  1980                           wreg	equ	0xFE8
  1981                           postdec1	equ	0xFE5
  1982                           fsr1h	equ	0xFE2
  1983                           fsr1l	equ	0xFE1
  1984                           bsr	equ	0xFE0
  1985                           indf2	equ	0xFDF
  1986                           postinc2	equ	0xFDE
  1987                           postdec2	equ	0xFDD
  1988                           plusw2	equ	0xFDB
  1989                           fsr2h	equ	0xFDA
  1990                           fsr2l	equ	0xFD9
  1991                           status	equ	0xFD8
  1992                           
  1993 ;; *************** function _dispatcher_change_context *****************
  1994 ;; Defined at:
  1995 ;;		line 63 in file "kernel/dispatcher.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  task_state      1    wreg     enum E3210
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  task_state      1   98[BANK2 ] enum E3210
  2000 ;;  i               1  102[BANK2 ] unsigned char 
  2001 ;;  i               1  101[BANK2 ] unsigned char 
  2002 ;;  context         2  113[BANK2 ] PTR struct task_context_
  2003 ;;		 -> dispatcher.context(34), idle.context(34), idle(41), dispatcher(128), 
  2004 ;;  stack           2  109[BANK2 ] PTR struct task_context_
  2005 ;;		 -> dispatcher.stack(31), idle.stack(31), dispatcher.context.stack(31), idle.context.stack(31), 
  2006 ;;		 -> dispatcher_change_context@context_810(2), 
  2007 ;;  task            2  105[BANK2 ] PTR struct task_s
  2008 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  2009 ;;  context         2  111[BANK2 ] PTR struct task_context_
  2010 ;;		 -> dispatcher.context(34), idle.context(34), idle(41), dispatcher(128), 
  2011 ;;  stack           2  107[BANK2 ] PTR struct task_context_
  2012 ;;		 -> dispatcher.stack(31), idle.stack(31), dispatcher.context.stack(31), idle.context.stack(31), 
  2013 ;;		 -> dispatcher_change_context@context(2), 
  2014 ;;  task            2  103[BANK2 ] PTR struct task_s
  2015 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  2016 ;;  next            2   99[BANK2 ] PTR struct task_s
  2017 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2027 ;;      Params:         0       0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0      17       0       0       0
  2029 ;;      Temps:          0       0       0       1       0       0       0
  2030 ;;      Totals:         0       0       0      18       0       0       0
  2031 ;;Total ram usage:       18 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    7
  2034 ;; This function calls:
  2035 ;;		_scheduler_priority
  2036 ;;		_task_running
  2037 ;; This function is called by:
  2038 ;;		_semaphore_wait
  2039 ;;		_semaphore_signal
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text13
  2044  00047E                     __ptext13:
  2045                           	opt stack 0
  2046  00047E                     _dispatcher_change_context:
  2047                           	opt stack 17
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;incstack = 0
  2051                           ;dispatcher_change_context@task_state stored from wreg
  2052  00047E  0102               	movlb	2	; () banked
  2053  000480  6F62               	movwf	dispatcher_change_context@task_state& (0+255),b
  2054                           
  2055                           ;dispatcher.c: 65: do{ INTCONbits.GIE = 0; }while(0);
  2056  000482  9EF2               	bcf	intcon,7,c	;volatile
  2057                           
  2058                           ;dispatcher.c: 67: do { task_t* task = (dispatcher.running); if( task == ((void*)0) ) { 
      +                          break; } task_context_t* context = &(task->context); context->work = WREG; context->bsr 
      +                          = BSR; context->status = STATUS; task_context_stack_t* stack = &context->stack; while( S
      +                          TKPTR
  2059  000484  C17C  F267         	movff	_dispatcher+124,dispatcher_change_context@task
  2060  000488  C17D  F268         	movff	_dispatcher+125,dispatcher_change_context@task+1
  2061  00048C  0102               	movlb	2	; () banked
  2062  00048E  5167               	movf	dispatcher_change_context@task& (0+255),w,b
  2063  000490  0102               	movlb	2	; () banked
  2064  000492  1168               	iorwf	(dispatcher_change_context@task+1)& (0+255),w,b
  2065  000494  B4D8               	btfsc	status,2,c
  2066  000496  D054               	goto	i1l4492
  2067                           
  2068                           ; BSR set to: 2
  2069                           
  2070                           ; BSR set to: 2
  2071                           
  2072                           ; BSR set to: 2
  2073  000498  0E07               	movlw	7
  2074  00049A  0102               	movlb	2	; () banked
  2075  00049C  2567               	addwf	dispatcher_change_context@task& (0+255),w,b
  2076  00049E  0102               	movlb	2	; () banked
  2077  0004A0  6F6F               	movwf	dispatcher_change_context@context& (0+255),b
  2078  0004A2  0E00               	movlw	0
  2079  0004A4  0102               	movlb	2	; () banked
  2080  0004A6  2168               	addwfc	(dispatcher_change_context@task+1)& (0+255),w,b
  2081  0004A8  0102               	movlb	2	; () banked
  2082  0004AA  6F70               	movwf	(dispatcher_change_context@context+1)& (0+255),b
  2083                           
  2084                           ; BSR set to: 2
  2085  0004AC  C26F  FFD9         	movff	dispatcher_change_context@context,fsr2l
  2086  0004B0  C270  FFDA         	movff	dispatcher_change_context@context+1,fsr2h
  2087  0004B4  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2088  0004B8  0102               	movlb	2	; () banked
  2089  0004BA  EE20 F001          	lfsr	2,1
  2090  0004BE  516F               	movf	dispatcher_change_context@context& (0+255),w,b
  2091  0004C0  26D9               	addwf	fsr2l,f,c
  2092  0004C2  5170               	movf	(dispatcher_change_context@context+1)& (0+255),w,b
  2093  0004C4  22DA               	addwfc	fsr2h,f,c
  2094  0004C6  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2095  0004CA  0102               	movlb	2	; () banked
  2096  0004CC  EE20 F002          	lfsr	2,2
  2097  0004D0  516F               	movf	dispatcher_change_context@context& (0+255),w,b
  2098  0004D2  26D9               	addwf	fsr2l,f,c
  2099  0004D4  5170               	movf	(dispatcher_change_context@context+1)& (0+255),w,b
  2100  0004D6  22DA               	addwfc	fsr2h,f,c
  2101  0004D8  CFD8 FFDF          	movff	status,indf2	;volatile
  2102                           
  2103                           ; BSR set to: 2
  2104  0004DC  0E03               	movlw	3
  2105  0004DE  0102               	movlb	2	; () banked
  2106  0004E0  256F               	addwf	dispatcher_change_context@context& (0+255),w,b
  2107  0004E2  0102               	movlb	2	; () banked
  2108  0004E4  6F6B               	movwf	dispatcher_change_context@stack& (0+255),b
  2109  0004E6  0E00               	movlw	0
  2110  0004E8  0102               	movlb	2	; () banked
  2111  0004EA  2170               	addwfc	(dispatcher_change_context@context+1)& (0+255),w,b
  2112  0004EC  0102               	movlb	2	; () banked
  2113  0004EE  6F6C               	movwf	(dispatcher_change_context@stack+1)& (0+255),b
  2114  0004F0  D024               	goto	i1l4490
  2115  0004F2                     i1l4486:
  2116  0004F2  0102               	movlb	2	; () banked
  2117  0004F4  EE20 F01E          	lfsr	2,30
  2118  0004F8  516B               	movf	dispatcher_change_context@stack& (0+255),w,b
  2119  0004FA  26D9               	addwf	fsr2l,f,c
  2120  0004FC  516C               	movf	(dispatcher_change_context@stack+1)& (0+255),w,b
  2121  0004FE  22DA               	addwfc	fsr2h,f,c
  2122  000500  50DF               	movf	indf2,w,c
  2123  000502  0102               	movlb	2	; () banked
  2124  000504  6F65               	movwf	dispatcher_change_context@i& (0+255),b
  2125  000506  0102               	movlb	2	; () banked
  2126  000508  EE20 F01E          	lfsr	2,30
  2127  00050C  516B               	movf	dispatcher_change_context@stack& (0+255),w,b
  2128  00050E  26D9               	addwf	fsr2l,f,c
  2129  000510  516C               	movf	(dispatcher_change_context@stack+1)& (0+255),w,b
  2130  000512  22DA               	addwfc	fsr2h,f,c
  2131  000514  2ADF               	incf	indf2,f,c
  2132                           
  2133                           ; BSR set to: 2
  2134  000516  0102               	movlb	2	; () banked
  2135  000518  5165               	movf	dispatcher_change_context@i& (0+255),w,b
  2136  00051A  0D03               	mullw	3
  2137  00051C  50F3               	movf	prodl,w,c
  2138  00051E  0102               	movlb	2	; () banked
  2139  000520  256B               	addwf	dispatcher_change_context@stack& (0+255),w,b
  2140  000522  6ED9               	movwf	fsr2l,c
  2141  000524  50F4               	movf	prodh,w,c
  2142  000526  0102               	movlb	2	; () banked
  2143  000528  216C               	addwfc	(dispatcher_change_context@stack+1)& (0+255),w,b
  2144  00052A  6EDA               	movwf	fsr2h,c
  2145  00052C  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2146  000530  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2147  000534  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2148  000538  0006               	pop		;# 
  2149  00053A                     i1l4490:
  2150  00053A  50FC               	movf	stkptr,w,c	;volatile
  2151  00053C  A4D8               	btfss	status,2,c
  2152  00053E  D7D9               	goto	i1l4486
  2153  000540                     i1l4492:
  2154                           
  2155                           ;dispatcher.c: 69: dispatcher.running->state = task_state;
  2156  000540  0101               	movlb	1	; () banked
  2157  000542  EE20 F004          	lfsr	2,4
  2158  000546  517C               	movf	(_dispatcher+124)& (0+255),w,b
  2159  000548  26D9               	addwf	fsr2l,f,c
  2160  00054A  517D               	movf	(_dispatcher+125)& (0+255),w,b
  2161  00054C  22DA               	addwfc	fsr2h,f,c
  2162  00054E  C262  FFDF         	movff	dispatcher_change_context@task_state,indf2
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;dispatcher.c: 71: task_t* next = dispatcher.callback();
  2166  000552  EE21  F07E         	lfsr	2,_dispatcher+126
  2167  000556  D801               	call	i1u410_28
  2168  000558  D00A               	goto	i1u410_29
  2169  00055A                     i1u410_28:
  2170  00055A  0005               	push	
  2171  00055C  6EFA               	movwf	pclath,c
  2172  00055E  50DE               	movf	postinc2,w,c
  2173  000560  6EFD               	movwf	tosl,c
  2174  000562  50DE               	movf	postinc2,w,c
  2175  000564  6EFE               	movwf	tosh,c
  2176  000566  50F8               	movf	tblptru,w,c
  2177  000568  6EFF               	movwf	tosu,c
  2178  00056A  50FA               	movf	pclath,w,c
  2179  00056C  0012               	return		;indir
  2180  00056E                     i1u410_29:
  2181  00056E  C255  F263         	movff	?_scheduler_priority,dispatcher_change_context@next
  2182  000572  C256  F264         	movff	?_scheduler_priority+1,dispatcher_change_context@next+1
  2183                           
  2184                           ;dispatcher.c: 73: dispatcher.running = next;
  2185  000576  C263  F17C         	movff	dispatcher_change_context@next,_dispatcher+124
  2186  00057A  C264  F17D         	movff	dispatcher_change_context@next+1,_dispatcher+125
  2187                           
  2188                           ;dispatcher.c: 75: task_running( dispatcher.running );
  2189  00057E  C17C  F24F         	movff	_dispatcher+124,task_running@handle
  2190  000582  C17D  F250         	movff	_dispatcher+125,task_running@handle+1
  2191  000586  ECB7  F008         	call	_task_running	;wreg free
  2192                           
  2193                           ;dispatcher.c: 77: do { task_t* task = (dispatcher.running); if( task == ((void*)0) ) { 
      +                          break; } task_context_t* context = &(task->context); WREG = context->work; BSR = context
      +                          ->bsr; STATUS = context->status; task_context_stack_t* stack = &context->stack; while( s
      +                          tack-
  2194  00058A  C17C  F269         	movff	_dispatcher+124,dispatcher_change_context@task_798
  2195  00058E  C17D  F26A         	movff	_dispatcher+125,dispatcher_change_context@task_798+1
  2196  000592  0102               	movlb	2	; () banked
  2197  000594  5169               	movf	dispatcher_change_context@task_798& (0+255),w,b
  2198  000596  0102               	movlb	2	; () banked
  2199  000598  116A               	iorwf	(dispatcher_change_context@task_798+1)& (0+255),w,b
  2200  00059A  B4D8               	btfsc	status,2,c
  2201  00059C  D057               	goto	i1l195
  2202                           
  2203                           ; BSR set to: 2
  2204                           
  2205                           ; BSR set to: 2
  2206                           
  2207                           ; BSR set to: 2
  2208  00059E  0E07               	movlw	7
  2209  0005A0  0102               	movlb	2	; () banked
  2210  0005A2  2569               	addwf	dispatcher_change_context@task_798& (0+255),w,b
  2211  0005A4  0102               	movlb	2	; () banked
  2212  0005A6  6F71               	movwf	dispatcher_change_context@context_810& (0+255),b
  2213  0005A8  0E00               	movlw	0
  2214  0005AA  0102               	movlb	2	; () banked
  2215  0005AC  216A               	addwfc	(dispatcher_change_context@task_798+1)& (0+255),w,b
  2216  0005AE  0102               	movlb	2	; () banked
  2217  0005B0  6F72               	movwf	(dispatcher_change_context@context_810+1)& (0+255),b
  2218                           
  2219                           ; BSR set to: 2
  2220  0005B2  C271  FFD9         	movff	dispatcher_change_context@context_810,fsr2l
  2221  0005B6  C272  FFDA         	movff	dispatcher_change_context@context_810+1,fsr2h
  2222  0005BA  50DF               	movf	indf2,w,c
  2223  0005BC  0102               	movlb	2	; () banked
  2224  0005BE  6F61               	movwf	??_dispatcher_change_context& (0+255),b
  2225  0005C0  0102               	movlb	2	; () banked
  2226  0005C2  5161               	movf	??_dispatcher_change_context& (0+255),w,b
  2227                           
  2228                           ; BSR set to: 2
  2229  0005C4  0102               	movlb	2	; () banked
  2230  0005C6  EE20 F001          	lfsr	2,1
  2231  0005CA  5171               	movf	dispatcher_change_context@context_810& (0+255),w,b
  2232  0005CC  26D9               	addwf	fsr2l,f,c
  2233  0005CE  5172               	movf	(dispatcher_change_context@context_810+1)& (0+255),w,b
  2234  0005D0  22DA               	addwfc	fsr2h,f,c
  2235  0005D2  50DF               	movf	indf2,w,c
  2236  0005D4  6EE0               	movwf	bsr,c	;volatile
  2237                           
  2238                           ; BSR set to: 2
  2239  0005D6  0102               	movlb	2	; () banked
  2240  0005D8  EE20 F002          	lfsr	2,2
  2241  0005DC  5171               	movf	dispatcher_change_context@context_810& (0+255),w,b
  2242  0005DE  26D9               	addwf	fsr2l,f,c
  2243  0005E0  5172               	movf	(dispatcher_change_context@context_810+1)& (0+255),w,b
  2244  0005E2  22DA               	addwfc	fsr2h,f,c
  2245  0005E4  50DF               	movf	indf2,w,c
  2246  0005E6  6ED8               	movwf	status,c	;volatile
  2247                           
  2248                           ; BSR set to: 2
  2249  0005E8  0E03               	movlw	3
  2250  0005EA  0102               	movlb	2	; () banked
  2251  0005EC  2571               	addwf	dispatcher_change_context@context_810& (0+255),w,b
  2252  0005EE  0102               	movlb	2	; () banked
  2253  0005F0  6F6D               	movwf	dispatcher_change_context@stack_817& (0+255),b
  2254  0005F2  0E00               	movlw	0
  2255  0005F4  0102               	movlb	2	; () banked
  2256  0005F6  2172               	addwfc	(dispatcher_change_context@context_810+1)& (0+255),w,b
  2257  0005F8  0102               	movlb	2	; () banked
  2258  0005FA  6F6E               	movwf	(dispatcher_change_context@stack_817+1)& (0+255),b
  2259  0005FC  D01D               	goto	i1l4520
  2260  0005FE                     i1l4516:
  2261                           
  2262                           ; BSR set to: 2
  2263  0005FE  0102               	movlb	2	; () banked
  2264  000600  EE20 F01E          	lfsr	2,30
  2265  000604  516D               	movf	dispatcher_change_context@stack_817& (0+255),w,b
  2266  000606  26D9               	addwf	fsr2l,f,c
  2267  000608  516E               	movf	(dispatcher_change_context@stack_817+1)& (0+255),w,b
  2268  00060A  22DA               	addwfc	fsr2h,f,c
  2269  00060C  06DF               	decf	indf2,f,c
  2270  00060E  50DF               	movf	indf2,w,c
  2271  000610  0102               	movlb	2	; () banked
  2272  000612  6F66               	movwf	dispatcher_change_context@i_820& (0+255),b
  2273  000614  0005               	push		;# 
  2274  000616  0102               	movlb	2	; () banked
  2275  000618  5166               	movf	dispatcher_change_context@i_820& (0+255),w,b
  2276  00061A  0D03               	mullw	3
  2277  00061C  50F3               	movf	prodl,w,c
  2278  00061E  0102               	movlb	2	; () banked
  2279  000620  256D               	addwf	dispatcher_change_context@stack_817& (0+255),w,b
  2280  000622  6ED9               	movwf	fsr2l,c
  2281  000624  50F4               	movf	prodh,w,c
  2282  000626  0102               	movlb	2	; () banked
  2283  000628  216E               	addwfc	(dispatcher_change_context@stack_817+1)& (0+255),w,b
  2284  00062A  6EDA               	movwf	fsr2h,c
  2285  00062C  CFDE FFFD          	movff	postinc2,tosl	;volatile
  2286  000630  CFDE FFFE          	movff	postinc2,tosh	;volatile
  2287  000634  CFDD FFFF          	movff	postdec2,tosu	;volatile
  2288  000638                     i1l4520:
  2289                           
  2290                           ; BSR set to: 2
  2291  000638  0102               	movlb	2	; () banked
  2292  00063A  EE20 F01E          	lfsr	2,30
  2293  00063E  516D               	movf	dispatcher_change_context@stack_817& (0+255),w,b
  2294  000640  26D9               	addwf	fsr2l,f,c
  2295  000642  516E               	movf	(dispatcher_change_context@stack_817+1)& (0+255),w,b
  2296  000644  22DA               	addwfc	fsr2h,f,c
  2297  000646  50DF               	movf	indf2,w,c
  2298  000648  A4D8               	btfss	status,2,c
  2299  00064A  D7D9               	goto	i1l4516
  2300  00064C                     i1l195:
  2301                           
  2302                           ; BSR set to: 2
  2303  00064C  8EF2               	bsf	intcon,7,c	;volatile
  2304  00064E  0012               	return	
  2305  000650                     __end_of_dispatcher_change_context:
  2306                           	opt stack 0
  2307                           tosu	equ	0xFFF
  2308                           tosh	equ	0xFFE
  2309                           tosl	equ	0xFFD
  2310                           stkptr	equ	0xFFC
  2311                           pclath	equ	0xFFA
  2312                           tblptru	equ	0xFF8
  2313                           prodh	equ	0xFF4
  2314                           prodl	equ	0xFF3
  2315                           intcon	equ	0xFF2
  2316                           intcon2	equ	0xFF1
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           postdec1	equ	0xFE5
  2320                           fsr1h	equ	0xFE2
  2321                           fsr1l	equ	0xFE1
  2322                           bsr	equ	0xFE0
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           postdec2	equ	0xFDD
  2326                           plusw2	equ	0xFDB
  2327                           fsr2h	equ	0xFDA
  2328                           fsr2l	equ	0xFD9
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _task_running *****************
  2332 ;; Defined at:
  2333 ;;		line 28 in file "kernel/task.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  handle          2   79[BANK2 ] PTR struct task_s
  2336 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         0       0       0       2       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       2       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    5
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_dispatcher_change_context
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text14
  2363  00116E                     __ptext14:
  2364                           	opt stack 0
  2365  00116E                     _task_running:
  2366                           	opt stack 18
  2367                           
  2368                           ;task.c: 29: handle->state = task_state_running;
  2369                           
  2370                           ; BSR set to: 2
  2371                           ;incstack = 0
  2372  00116E  0102               	movlb	2	; () banked
  2373  001170  EE20 F004          	lfsr	2,4
  2374  001174  514F               	movf	task_running@handle& (0+255),w,b
  2375  001176  26D9               	addwf	fsr2l,f,c
  2376  001178  5150               	movf	(task_running@handle+1)& (0+255),w,b
  2377  00117A  22DA               	addwfc	fsr2h,f,c
  2378  00117C  0E01               	movlw	1
  2379  00117E  6EDF               	movwf	indf2,c
  2380                           
  2381                           ; BSR set to: 2
  2382  001180  0012               	return		;funcret
  2383  001182                     __end_of_task_running:
  2384                           	opt stack 0
  2385                           tosu	equ	0xFFF
  2386                           tosh	equ	0xFFE
  2387                           tosl	equ	0xFFD
  2388                           stkptr	equ	0xFFC
  2389                           pclath	equ	0xFFA
  2390                           tblptru	equ	0xFF8
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           intcon2	equ	0xFF1
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postdec1	equ	0xFE5
  2398                           fsr1h	equ	0xFE2
  2399                           fsr1l	equ	0xFE1
  2400                           bsr	equ	0xFE0
  2401                           indf2	equ	0xFDF
  2402                           postinc2	equ	0xFDE
  2403                           postdec2	equ	0xFDD
  2404                           plusw2	equ	0xFDB
  2405                           fsr2h	equ	0xFDA
  2406                           fsr2l	equ	0xFD9
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function _scheduler_priority *****************
  2410 ;; Defined at:
  2411 ;;		line 5 in file "kernel/scheduler.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  current         2   95[BANK2 ] PTR struct task_s
  2416 ;;		 -> dispatcher.tasks(123), dispatcher(128), 
  2417 ;;  i               2   93[BANK2 ] int 
  2418 ;;  highest         2   91[BANK2 ] PTR struct task_s
  2419 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2   85[BANK2 ] PTR struct task_s
  2422 ;; Registers used:
  2423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2429 ;;      Params:         0       0       0       2       0       0       0
  2430 ;;      Locals:         0       0       0       6       0       0       0
  2431 ;;      Temps:          0       0       0       4       0       0       0
  2432 ;;      Totals:         0       0       0      12       0       0       0
  2433 ;;Total ram usage:       12 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    6
  2436 ;; This function calls:
  2437 ;;		___wmul
  2438 ;; This function is called by:
  2439 ;;		_dispatcher_init
  2440 ;;		_dispatcher_change_context_isr
  2441 ;;		_dispatcher_change_context
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text15
  2446  0007FE                     __ptext15:
  2447                           	opt stack 0
  2448  0007FE                     _scheduler_priority:
  2449                           	opt stack 0
  2450                           
  2451                           ; BSR set to: 2
  2452                           ;Skip over the trampoline to the duplicate function for level 2
  2453  0007FE  B23D               	btfsc	btemp,1,c
  2454  000800  EF77  F005         	goto	i2_scheduler_priority
  2455  000804                     _scheduler_priority$intlevel1:
  2456                           	opt stack 17
  2457                           
  2458                           ;scheduler.c: 7: task_t* highest = &idle;
  2459                           
  2460                           ;incstack = 0
  2461  000804  0E80               	movlw	low _idle
  2462  000806  0102               	movlb	2	; () banked
  2463  000808  6F5B               	movwf	scheduler_priority@highest& (0+255),b
  2464  00080A  0E01               	movlw	high _idle
  2465  00080C  0102               	movlb	2	; () banked
  2466  00080E  6F5C               	movwf	(scheduler_priority@highest+1)& (0+255),b
  2467                           
  2468                           ; BSR set to: 2
  2469                           ;scheduler.c: 9: for( int i = 0; i < dispatcher.size; i++ ) {
  2470  000810  0E00               	movlw	0
  2471  000812  0102               	movlb	2	; () banked
  2472  000814  6F5E               	movwf	(scheduler_priority@i+1)& (0+255),b
  2473  000816  0E00               	movlw	0
  2474  000818  6F5D               	movwf	scheduler_priority@i& (0+255),b
  2475  00081A  D03A               	goto	i1l4390
  2476  00081C                     i1l4380:
  2477                           
  2478                           ; BSR set to: 2
  2479                           ;scheduler.c: 11: task_t* current = &dispatcher.tasks[i];
  2480  00081C  C25D  F24F         	movff	scheduler_priority@i,___wmul@multiplier
  2481  000820  C25E  F250         	movff	scheduler_priority@i+1,___wmul@multiplier+1
  2482  000824  0E00               	movlw	0
  2483  000826  0102               	movlb	2	; () banked
  2484  000828  6F52               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2485  00082A  0E29               	movlw	41
  2486  00082C  6F51               	movwf	___wmul@multiplicand& (0+255),b
  2487  00082E  EC01  F008         	call	___wmul	;wreg free
  2488  000832  0E00               	movlw	low _dispatcher
  2489  000834  0102               	movlb	2	; () banked
  2490  000836  254F               	addwf	?___wmul& (0+255),w,b
  2491  000838  0102               	movlb	2	; () banked
  2492  00083A  6F5F               	movwf	scheduler_priority@current& (0+255),b
  2493  00083C  0E01               	movlw	high _dispatcher
  2494  00083E  0102               	movlb	2	; () banked
  2495  000840  2150               	addwfc	(?___wmul+1)& (0+255),w,b
  2496  000842  0102               	movlb	2	; () banked
  2497  000844  6F60               	movwf	(scheduler_priority@current+1)& (0+255),b
  2498                           
  2499                           ; BSR set to: 2
  2500                           ;scheduler.c: 13: if( ( current->state == task_state_ready ) && ( highest->priority < cu
      +                          rrent->priority ) ) {
  2501  000846  0102               	movlb	2	; () banked
  2502  000848  EE20 F004          	lfsr	2,4
  2503  00084C  515F               	movf	scheduler_priority@current& (0+255),w,b
  2504  00084E  26D9               	addwf	fsr2l,f,c
  2505  000850  5160               	movf	(scheduler_priority@current+1)& (0+255),w,b
  2506  000852  22DA               	addwfc	fsr2h,f,c
  2507  000854  50DF               	movf	indf2,w,c
  2508  000856  A4D8               	btfss	status,2,c
  2509  000858  D018               	goto	i1l4388
  2510                           
  2511                           ; BSR set to: 2
  2512  00085A  0102               	movlb	2	; () banked
  2513  00085C  EE20 F002          	lfsr	2,2
  2514  000860  515F               	movf	scheduler_priority@current& (0+255),w,b
  2515  000862  26D9               	addwf	fsr2l,f,c
  2516  000864  5160               	movf	(scheduler_priority@current+1)& (0+255),w,b
  2517  000866  22DA               	addwfc	fsr2h,f,c
  2518  000868  0102               	movlb	2	; () banked
  2519  00086A  EE10 F002          	lfsr	1,2
  2520  00086E  515B               	movf	scheduler_priority@highest& (0+255),w,b
  2521  000870  26E1               	addwf	fsr1l,f,c
  2522  000872  515C               	movf	(scheduler_priority@highest+1)& (0+255),w,b
  2523  000874  22E2               	addwfc	fsr1h,f,c
  2524  000876  50DE               	movf	postinc2,w,c
  2525  000878  5CE6               	subwf	postinc1,w,c
  2526  00087A  50DE               	movf	postinc2,w,c
  2527  00087C  58E6               	subwfb	postinc1,w,c
  2528  00087E  B0D8               	btfsc	status,0,c
  2529  000880  D004               	goto	i1l4388
  2530                           
  2531                           ; BSR set to: 2
  2532                           ;scheduler.c: 14: highest = current;
  2533  000882  C25F  F25B         	movff	scheduler_priority@current,scheduler_priority@highest
  2534  000886  C260  F25C         	movff	scheduler_priority@current+1,scheduler_priority@highest+1
  2535  00088A                     i1l4388:
  2536                           
  2537                           ; BSR set to: 2
  2538  00088A  0102               	movlb	2	; () banked
  2539  00088C  4B5D               	infsnz	scheduler_priority@i& (0+255),f,b
  2540  00088E  2B5E               	incf	(scheduler_priority@i+1)& (0+255),f,b
  2541  000890                     i1l4390:
  2542                           
  2543                           ; BSR set to: 2
  2544  000890  0101               	movlb	1	; () banked
  2545  000892  517B               	movf	(_dispatcher+123)& (0+255),w,b
  2546  000894  0102               	movlb	2	; () banked
  2547  000896  6F57               	movwf	??_scheduler_priority& (0+255),b
  2548  000898  6B58               	clrf	(??_scheduler_priority+1)& (0+255),b
  2549  00089A  0102               	movlb	2	; () banked
  2550  00089C  5157               	movf	??_scheduler_priority& (0+255),w,b
  2551  00089E  0102               	movlb	2	; () banked
  2552  0008A0  5D5D               	subwf	scheduler_priority@i& (0+255),w,b
  2553  0008A2  0102               	movlb	2	; () banked
  2554  0008A4  515E               	movf	(scheduler_priority@i+1)& (0+255),w,b
  2555  0008A6  0A80               	xorlw	128
  2556  0008A8  0102               	movlb	2	; () banked
  2557  0008AA  6F59               	movwf	(??_scheduler_priority+2)& (0+255),b
  2558  0008AC  0102               	movlb	2	; () banked
  2559  0008AE  5158               	movf	(??_scheduler_priority+1)& (0+255),w,b
  2560  0008B0  0A80               	xorlw	128
  2561  0008B2  0102               	movlb	2	; () banked
  2562  0008B4  5959               	subwfb	(??_scheduler_priority+2)& (0+255),w,b
  2563  0008B6  A0D8               	btfss	status,0,c
  2564  0008B8  D7B1               	goto	i1l4380
  2565                           
  2566                           ; BSR set to: 2
  2567                           ;scheduler.c: 15: }
  2568                           ;scheduler.c: 16: }
  2569                           ;scheduler.c: 18: return highest;
  2570                           
  2571                           ; BSR set to: 2
  2572  0008BA  C25B  F255         	movff	scheduler_priority@highest,?_scheduler_priority
  2573  0008BE  C25C  F256         	movff	scheduler_priority@highest+1,?_scheduler_priority+1
  2574  0008C2  0012               	return	
  2575  0008C4                     __end_of_scheduler_priority:
  2576                           	opt stack 0
  2577                           tosu	equ	0xFFF
  2578                           tosh	equ	0xFFE
  2579                           tosl	equ	0xFFD
  2580                           stkptr	equ	0xFFC
  2581                           pclath	equ	0xFFA
  2582                           tblptru	equ	0xFF8
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           intcon	equ	0xFF2
  2586                           intcon2	equ	0xFF1
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           postinc1	equ	0xFE6
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           bsr	equ	0xFE0
  2594                           indf2	equ	0xFDF
  2595                           postinc2	equ	0xFDE
  2596                           postdec2	equ	0xFDD
  2597                           plusw2	equ	0xFDB
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602 ;; *************** function ___wmul *****************
  2603 ;; Defined at:
  2604 ;;		line 15 in file "/home/bruno/Programs/microchip/xc8/v1.37/sources/common/Umul16.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  multiplier      2   79[BANK2 ] unsigned int 
  2607 ;;  multiplicand    2   81[BANK2 ] unsigned int 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  product         2   83[BANK2 ] unsigned int 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2   79[BANK2 ] unsigned int 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, prodl, prodh
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2619 ;;      Params:         0       0       0       4       0       0       0
  2620 ;;      Locals:         0       0       0       2       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0
  2622 ;;      Totals:         0       0       0       6       0       0       0
  2623 ;;Total ram usage:        6 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    5
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_scheduler_priority
  2630 ;;		_scheduler_round_robin
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text16
  2635  001002                     __ptext16:
  2636                           	opt stack 0
  2637  001002                     ___wmul:
  2638                           	opt stack 17
  2639                           
  2640                           ; BSR set to: 2
  2641                           ;incstack = 0
  2642  001002  0102               	movlb	2	; () banked
  2643  001004  514F               	movf	___wmul@multiplier& (0+255),w,b
  2644  001006  0102               	movlb	2	; () banked
  2645  001008  0351               	mulwf	___wmul@multiplicand& (0+255),b
  2646  00100A  CFF3 F253          	movff	prodl,___wmul@product
  2647  00100E  CFF4 F254          	movff	prodh,___wmul@product+1
  2648  001012  0102               	movlb	2	; () banked
  2649  001014  514F               	movf	___wmul@multiplier& (0+255),w,b
  2650  001016  0102               	movlb	2	; () banked
  2651  001018  0352               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2652  00101A  50F3               	movf	prodl,w,c
  2653  00101C  0102               	movlb	2	; () banked
  2654  00101E  2754               	addwf	(___wmul@product+1)& (0+255),f,b
  2655  001020  0102               	movlb	2	; () banked
  2656  001022  5150               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2657  001024  0102               	movlb	2	; () banked
  2658  001026  0351               	mulwf	___wmul@multiplicand& (0+255),b
  2659  001028  50F3               	movf	prodl,w,c
  2660  00102A  0102               	movlb	2	; () banked
  2661  00102C  2754               	addwf	(___wmul@product+1)& (0+255),f,b
  2662                           
  2663                           ; BSR set to: 2
  2664  00102E  C253  F24F         	movff	___wmul@product,?___wmul
  2665  001032  C254  F250         	movff	___wmul@product+1,?___wmul+1
  2666  001036  0012               	return	
  2667  001038                     __end_of___wmul:
  2668                           	opt stack 0
  2669                           tosu	equ	0xFFF
  2670                           tosh	equ	0xFFE
  2671                           tosl	equ	0xFFD
  2672                           stkptr	equ	0xFFC
  2673                           pclath	equ	0xFFA
  2674                           tblptru	equ	0xFF8
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           intcon	equ	0xFF2
  2678                           intcon2	equ	0xFF1
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           postinc1	equ	0xFE6
  2682                           postdec1	equ	0xFE5
  2683                           fsr1h	equ	0xFE2
  2684                           fsr1l	equ	0xFE1
  2685                           bsr	equ	0xFE0
  2686                           indf2	equ	0xFDF
  2687                           postinc2	equ	0xFDE
  2688                           postdec2	equ	0xFDD
  2689                           plusw2	equ	0xFDB
  2690                           fsr2h	equ	0xFDA
  2691                           fsr2l	equ	0xFD9
  2692                           status	equ	0xFD8
  2693                           
  2694 ;; *************** function _semaphore_init *****************
  2695 ;; Defined at:
  2696 ;;		line 5 in file "kernel/semaphore.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  handle          2   30[BANK0 ] PTR struct semaphore_s
  2699 ;;		 -> g_sem_2(4), g_sem_1(4), 
  2700 ;;  initial_valu    1   32[BANK0 ] char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2712 ;;      Params:         0       3       0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0
  2715 ;;      Totals:         0       3       0       0       0       0       0
  2716 ;;Total ram usage:        3 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    8
  2719 ;; This function calls:
  2720 ;;		_linked_list_create
  2721 ;; This function is called by:
  2722 ;;		_task_1_priority
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text17
  2727  00106A                     __ptext17:
  2728                           	opt stack 0
  2729  00106A                     _semaphore_init:
  2730                           	opt stack 17
  2731                           
  2732                           ;semaphore.c: 6: handle->value = initial_value;
  2733                           
  2734                           ; BSR set to: 2
  2735                           ;incstack = 0
  2736  00106A  C09E  FFD9         	movff	semaphore_init@handle,fsr2l
  2737  00106E  C09F  FFDA         	movff	semaphore_init@handle+1,fsr2h
  2738  001072  C0A0  FFDF         	movff	semaphore_init@initial_value,indf2
  2739                           
  2740                           ;semaphore.c: 7: linked_list_create( &handle->queue );
  2741  001076  0E01               	movlw	1
  2742  001078  0100               	movlb	0	; () banked
  2743  00107A  259E               	addwf	semaphore_init@handle& (0+255),w,b
  2744  00107C  0100               	movlb	0	; () banked
  2745  00107E  6F98               	movwf	linked_list_create@a_head& (0+255),b
  2746  001080  0E00               	movlw	0
  2747  001082  0100               	movlb	0	; () banked
  2748  001084  219F               	addwfc	(semaphore_init@handle+1)& (0+255),w,b
  2749  001086  0100               	movlb	0	; () banked
  2750  001088  6F99               	movwf	(linked_list_create@a_head+1)& (0+255),b
  2751  00108A  ECC4  F005         	call	_linked_list_create	;wreg free
  2752  00108E  0012               	return		;funcret
  2753  001090                     __end_of_semaphore_init:
  2754                           	opt stack 0
  2755                           tosu	equ	0xFFF
  2756                           tosh	equ	0xFFE
  2757                           tosl	equ	0xFFD
  2758                           stkptr	equ	0xFFC
  2759                           pclath	equ	0xFFA
  2760                           tblptru	equ	0xFF8
  2761                           prodh	equ	0xFF4
  2762                           prodl	equ	0xFF3
  2763                           intcon	equ	0xFF2
  2764                           intcon2	equ	0xFF1
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           postinc1	equ	0xFE6
  2768                           postdec1	equ	0xFE5
  2769                           fsr1h	equ	0xFE2
  2770                           fsr1l	equ	0xFE1
  2771                           bsr	equ	0xFE0
  2772                           indf2	equ	0xFDF
  2773                           postinc2	equ	0xFDE
  2774                           postdec2	equ	0xFDD
  2775                           plusw2	equ	0xFDB
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _linked_list_create *****************
  2781 ;; Defined at:
  2782 ;;		line 10 in file "kernel/linked_list.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  a_head          2   24[BANK0 ] PTR PTR struct linked_li
  2785 ;;		 -> g_sem_2(4), g_sem_1(4), 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  l_head_data     2   28[BANK0 ] PTR struct linked_list_h
  2788 ;;		 -> s_heap(512), NULL(0), 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      char 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2798 ;;      Params:         0       2       0       0       0       0       0
  2799 ;;      Locals:         0       2       0       0       0       0       0
  2800 ;;      Temps:          0       2       0       0       0       0       0
  2801 ;;      Totals:         0       6       0       0       0       0       0
  2802 ;;Total ram usage:        6 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    7
  2805 ;; This function calls:
  2806 ;;		_malloc
  2807 ;; This function is called by:
  2808 ;;		_semaphore_init
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text18
  2813  000B88                     __ptext18:
  2814                           	opt stack 0
  2815  000B88                     _linked_list_create:
  2816                           	opt stack 17
  2817                           
  2818                           ;linked_list.c: 11: (*a_head) = (linked_list_t*) malloc( sizeof( linked_list_t ) );
  2819                           
  2820                           ;incstack = 0
  2821  000B88  0E00               	movlw	0
  2822  000B8A  0100               	movlb	0	; () banked
  2823  000B8C  6FB3               	movwf	(malloc@a_size+1)& (0+255),b
  2824  000B8E  0E04               	movlw	4
  2825  000B90  6FB2               	movwf	malloc@a_size& (0+255),b
  2826  000B92  EC2F  F001         	call	_malloc	;wreg free
  2827  000B96  C098  FFD9         	movff	linked_list_create@a_head,fsr2l
  2828  000B9A  C099  FFDA         	movff	linked_list_create@a_head+1,fsr2h
  2829  000B9E  0100               	movlb	0	; () banked
  2830  000BA0  C0B2  FFDE         	movff	?_malloc,postinc2
  2831  000BA4  0100               	movlb	0	; () banked
  2832  000BA6  C0B3  FFDD         	movff	?_malloc+1,postdec2
  2833                           
  2834                           ;linked_list.c: 13: linked_list_head_data_t* l_head_data = (linked_list_head_data_t*) ma
      +                          lloc( sizeof(linked_list_head_data_t) );
  2835  000BAA  0E00               	movlw	0
  2836  000BAC  0100               	movlb	0	; () banked
  2837  000BAE  6FB3               	movwf	(malloc@a_size+1)& (0+255),b
  2838  000BB0  0E03               	movlw	3
  2839  000BB2  6FB2               	movwf	malloc@a_size& (0+255),b
  2840  000BB4  EC2F  F001         	call	_malloc	;wreg free
  2841  000BB8  C0B2  F09C         	movff	?_malloc,linked_list_create@l_head_data
  2842  000BBC  C0B3  F09D         	movff	?_malloc+1,linked_list_create@l_head_data+1
  2843                           
  2844                           ;linked_list.c: 15: l_head_data->size = 0;
  2845  000BC0  C09C  FFD9         	movff	linked_list_create@l_head_data,fsr2l
  2846  000BC4  C09D  FFDA         	movff	linked_list_create@l_head_data+1,fsr2h
  2847  000BC8  0E00               	movlw	0
  2848  000BCA  6EDF               	movwf	indf2,c
  2849                           
  2850                           ;linked_list.c: 16: l_head_data->last = ((void*)0);
  2851  000BCC  0100               	movlb	0	; () banked
  2852  000BCE  EE20 F001          	lfsr	2,1
  2853  000BD2  519C               	movf	linked_list_create@l_head_data& (0+255),w,b
  2854  000BD4  26D9               	addwf	fsr2l,f,c
  2855  000BD6  519D               	movf	(linked_list_create@l_head_data+1)& (0+255),w,b
  2856  000BD8  22DA               	addwfc	fsr2h,f,c
  2857  000BDA  0E00               	movlw	0
  2858  000BDC  6EDE               	movwf	postinc2,c
  2859  000BDE  0E00               	movlw	0
  2860  000BE0  6EDD               	movwf	postdec2,c
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;linked_list.c: 18: (*a_head)->data = l_head_data;
  2864  000BE2  C098  FFD9         	movff	linked_list_create@a_head,fsr2l
  2865  000BE6  C099  FFDA         	movff	linked_list_create@a_head+1,fsr2h
  2866  000BEA  EE10 F002          	lfsr	1,2
  2867  000BEE  50DE               	movf	postinc2,w,c
  2868  000BF0  26E1               	addwf	fsr1l,f,c
  2869  000BF2  50DD               	movf	postdec2,w,c
  2870  000BF4  22E2               	addwfc	fsr1h,f,c
  2871  000BF6  C09C  FFE6         	movff	linked_list_create@l_head_data,postinc1
  2872  000BFA  C09D  FFE5         	movff	linked_list_create@l_head_data+1,postdec1
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;linked_list.c: 19: (*a_head)->next = ((void*)0);
  2876  000BFE  C098  FFD9         	movff	linked_list_create@a_head,fsr2l
  2877  000C02  C099  FFDA         	movff	linked_list_create@a_head+1,fsr2h
  2878  000C06  CFDE F09A          	movff	postinc2,??_linked_list_create
  2879  000C0A  CFDD F09B          	movff	postdec2,??_linked_list_create+1
  2880  000C0E  C09A  FFD9         	movff	??_linked_list_create,fsr2l
  2881  000C12  C09B  FFDA         	movff	??_linked_list_create+1,fsr2h
  2882  000C16  0E00               	movlw	0
  2883  000C18  6EDE               	movwf	postinc2,c
  2884  000C1A  0E00               	movlw	0
  2885  000C1C  6EDD               	movwf	postdec2,c
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;linked_list.c: 24: return 0;
  2889                           ;	Return value of _linked_list_create is never used
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;linked_list.c: 23: } else {
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;linked_list.c: 22: return -1;
  2896                           ;	Return value of _linked_list_create is never used
  2897                           
  2898                           ; BSR set to: 0
  2899                           
  2900                           ; BSR set to: 0
  2901  000C1E  0012               	return	
  2902  000C20                     __end_of_linked_list_create:
  2903                           	opt stack 0
  2904                           tosu	equ	0xFFF
  2905                           tosh	equ	0xFFE
  2906                           tosl	equ	0xFFD
  2907                           stkptr	equ	0xFFC
  2908                           pclath	equ	0xFFA
  2909                           tblptru	equ	0xFF8
  2910                           prodh	equ	0xFF4
  2911                           prodl	equ	0xFF3
  2912                           intcon	equ	0xFF2
  2913                           intcon2	equ	0xFF1
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           postinc1	equ	0xFE6
  2917                           postdec1	equ	0xFE5
  2918                           fsr1h	equ	0xFE2
  2919                           fsr1l	equ	0xFE1
  2920                           bsr	equ	0xFE0
  2921                           indf2	equ	0xFDF
  2922                           postinc2	equ	0xFDE
  2923                           postdec2	equ	0xFDD
  2924                           plusw2	equ	0xFDB
  2925                           fsr2h	equ	0xFDA
  2926                           fsr2l	equ	0xFD9
  2927                           status	equ	0xFD8
  2928                           
  2929 ;; *************** function _malloc *****************
  2930 ;; Defined at:
  2931 ;;		line 25 in file "kernel/memory.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  a_size          2   50[BANK0 ] unsigned int 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  l_offset        2   58[BANK0 ] unsigned int 
  2936 ;;  l_previous      2   56[BANK0 ] PTR struct block_s
  2937 ;;		 -> s_heap(512), NULL(0), 
  2938 ;;  l_free          2   60[BANK0 ] PTR struct block_s
  2939 ;;		 -> s_heap(512), NULL(0), 
  2940 ;;  l_block         2   62[BANK0 ] PTR struct block_s
  2941 ;;		 -> s_heap(512), NULL(0), 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  2   50[BANK0 ] PTR void 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2951 ;;      Params:         0       2       0       0       0       0       0
  2952 ;;      Locals:         0       8       0       0       0       0       0
  2953 ;;      Temps:          0       4       0       0       0       0       0
  2954 ;;      Totals:         0      14       0       0       0       0       0
  2955 ;;Total ram usage:       14 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    6
  2958 ;; This function calls:
  2959 ;;		__find_free_block
  2960 ;;		__split_free_block
  2961 ;; This function is called by:
  2962 ;;		_linked_list_create
  2963 ;;		_linked_list_insert
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text19
  2968  00025E                     __ptext19:
  2969                           	opt stack 0
  2970  00025E                     _malloc:
  2971                           	opt stack 17
  2972                           
  2973                           ;memory.c: 26: if( a_size == 0 ) {
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;incstack = 0
  2977  00025E  0100               	movlb	0	; () banked
  2978  000260  51B2               	movf	malloc@a_size& (0+255),w,b
  2979  000262  0100               	movlb	0	; () banked
  2980  000264  11B3               	iorwf	(malloc@a_size+1)& (0+255),w,b
  2981  000266  A4D8               	btfss	status,2,c
  2982  000268  D007               	goto	i1l4402
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;memory.c: 27: return (0);
  2986  00026A  0E00               	movlw	0
  2987  00026C  0100               	movlb	0	; () banked
  2988  00026E  6FB2               	movwf	?_malloc& (0+255),b
  2989  000270  0E00               	movlw	0
  2990  000272  0100               	movlb	0	; () banked
  2991  000274  6FB3               	movwf	(?_malloc+1)& (0+255),b
  2992                           
  2993                           ; BSR set to: 0
  2994  000276  0012               	return	
  2995  000278                     i1l4402:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;memory.c: 28: }
  2999                           ;memory.c: 29: block_t* l_block = s_blocks;
  3000  000278  C0CE  F0BE         	movff	_s_blocks,malloc@l_block
  3001  00027C  C0CF  F0BF         	movff	_s_blocks+1,malloc@l_block+1
  3002                           
  3003                           ;memory.c: 31: if( l_block == (0) ) {
  3004  000280  0100               	movlb	0	; () banked
  3005  000282  51BE               	movf	malloc@l_block& (0+255),w,b
  3006  000284  0100               	movlb	0	; () banked
  3007  000286  11BF               	iorwf	(malloc@l_block+1)& (0+255),w,b
  3008  000288  A4D8               	btfss	status,2,c
  3009  00028A  D00B               	goto	i1l4406
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;memory.c: 32: s_blocks = (block_t*)s_heap;
  3013  00028C  0E09               	movlw	low _s_heap
  3014  00028E  0100               	movlb	0	; () banked
  3015  000290  6FCE               	movwf	_s_blocks& (0+255),b
  3016  000292  0E03               	movlw	high _s_heap
  3017  000294  0100               	movlb	0	; () banked
  3018  000296  6FCF               	movwf	(_s_blocks+1)& (0+255),b
  3019                           
  3020                           ;memory.c: 33: l_block = s_blocks;
  3021  000298  C0CE  F0BE         	movff	_s_blocks,malloc@l_block
  3022  00029C  C0CF  F0BF         	movff	_s_blocks+1,malloc@l_block+1
  3023                           
  3024                           ;memory.c: 34: } else {
  3025  0002A0  D0C7               	goto	i1l255
  3026  0002A2                     i1l4406:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;memory.c: 36: block_t* l_free = _find_free_block( a_size );
  3030  0002A2  C0B2  F0A8         	movff	malloc@a_size,__find_free_block@a_size
  3031  0002A6  C0B3  F0A9         	movff	malloc@a_size+1,__find_free_block@a_size+1
  3032  0002AA  EC04  F007         	call	__find_free_block	;wreg free
  3033  0002AE  C0A8  F0BC         	movff	?__find_free_block,malloc@l_free
  3034  0002B2  C0A9  F0BD         	movff	?__find_free_block+1,malloc@l_free+1
  3035                           
  3036                           ;memory.c: 37: if( l_free ) {
  3037  0002B6  0100               	movlb	0	; () banked
  3038  0002B8  51BC               	movf	malloc@l_free& (0+255),w,b
  3039  0002BA  0100               	movlb	0	; () banked
  3040  0002BC  11BD               	iorwf	(malloc@l_free+1)& (0+255),w,b
  3041  0002BE  B4D8               	btfsc	status,2,c
  3042  0002C0  D038               	goto	i1l4424
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;memory.c: 39: if( ( a_size + sizeof(block_t) ) < l_free->size ) {
  3046  0002C2  C0BC  FFD9         	movff	malloc@l_free,fsr2l
  3047  0002C6  C0BD  FFDA         	movff	malloc@l_free+1,fsr2h
  3048  0002CA  0E05               	movlw	5
  3049  0002CC  0100               	movlb	0	; () banked
  3050  0002CE  25B2               	addwf	malloc@a_size& (0+255),w,b
  3051  0002D0  0100               	movlb	0	; () banked
  3052  0002D2  6FB6               	movwf	(??_malloc+2)& (0+255),b
  3053  0002D4  0E00               	movlw	0
  3054  0002D6  0100               	movlb	0	; () banked
  3055  0002D8  21B3               	addwfc	(malloc@a_size+1)& (0+255),w,b
  3056  0002DA  0100               	movlb	0	; () banked
  3057  0002DC  6FB7               	movwf	(??_malloc+3)& (0+255),b
  3058  0002DE  50DE               	movf	postinc2,w,c
  3059  0002E0  0100               	movlb	0	; () banked
  3060  0002E2  5DB6               	subwf	(??_malloc+2)& (0+255),w,b
  3061  0002E4  50DE               	movf	postinc2,w,c
  3062  0002E6  0100               	movlb	0	; () banked
  3063  0002E8  59B7               	subwfb	(??_malloc+3)& (0+255),w,b
  3064  0002EA  B0D8               	btfsc	status,0,c
  3065  0002EC  D00A               	goto	i1l4414
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;memory.c: 41: _split_free_block( l_free, a_size );
  3069  0002EE  C0BC  F0A8         	movff	malloc@l_free,__split_free_block@a_block
  3070  0002F2  C0BD  F0A9         	movff	malloc@l_free+1,__split_free_block@a_block+1
  3071  0002F6  C0B2  F0AA         	movff	malloc@a_size,__split_free_block@a_resize
  3072  0002FA  C0B3  F0AB         	movff	malloc@a_size+1,__split_free_block@a_resize+1
  3073  0002FE  EC28  F003         	call	__split_free_block	;wreg free
  3074  000302                     i1l4414:
  3075                           
  3076                           ;memory.c: 42: }
  3077                           ;memory.c: 44: l_block = l_free;
  3078  000302  C0BC  F0BE         	movff	malloc@l_free,malloc@l_block
  3079  000306  C0BD  F0BF         	movff	malloc@l_free+1,malloc@l_block+1
  3080                           
  3081                           ;memory.c: 45: l_block->free_block = 0;
  3082  00030A  0100               	movlb	0	; () banked
  3083  00030C  EE20 F004          	lfsr	2,4
  3084  000310  51BE               	movf	malloc@l_block& (0+255),w,b
  3085  000312  26D9               	addwf	fsr2l,f,c
  3086  000314  51BF               	movf	(malloc@l_block+1)& (0+255),w,b
  3087  000316  22DA               	addwfc	fsr2h,f,c
  3088  000318  0E00               	movlw	0
  3089  00031A  6EDF               	movwf	indf2,c
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;memory.c: 46: return l_block + 1;
  3093  00031C  0E05               	movlw	5
  3094  00031E  0100               	movlb	0	; () banked
  3095  000320  25BE               	addwf	malloc@l_block& (0+255),w,b
  3096  000322  0100               	movlb	0	; () banked
  3097  000324  6FB2               	movwf	?_malloc& (0+255),b
  3098  000326  0E00               	movlw	0
  3099  000328  0100               	movlb	0	; () banked
  3100  00032A  21BF               	addwfc	(malloc@l_block+1)& (0+255),w,b
  3101  00032C  0100               	movlb	0	; () banked
  3102  00032E  6FB3               	movwf	(?_malloc+1)& (0+255),b
  3103                           
  3104                           ; BSR set to: 0
  3105  000330  0012               	return	
  3106  000332                     i1l4424:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;memory.c: 49: size_t l_offset = sizeof(block_t) + l_block->size;
  3110  000332  C0BE  FFD9         	movff	malloc@l_block,fsr2l
  3111  000336  C0BF  FFDA         	movff	malloc@l_block+1,fsr2h
  3112  00033A  CFDE F0B4          	movff	postinc2,??_malloc
  3113  00033E  CFDD F0B5          	movff	postdec2,??_malloc+1
  3114  000342  0E05               	movlw	5
  3115  000344  0100               	movlb	0	; () banked
  3116  000346  25B4               	addwf	??_malloc& (0+255),w,b
  3117  000348  0100               	movlb	0	; () banked
  3118  00034A  6FBA               	movwf	malloc@l_offset& (0+255),b
  3119  00034C  0E00               	movlw	0
  3120  00034E  0100               	movlb	0	; () banked
  3121  000350  21B5               	addwfc	(??_malloc+1)& (0+255),w,b
  3122  000352  0100               	movlb	0	; () banked
  3123  000354  6FBB               	movwf	(malloc@l_offset+1)& (0+255),b
  3124                           
  3125                           ;memory.c: 50: while( l_block->next != (0) ) {
  3126  000356  D02B               	goto	i1l259
  3127  000358                     i1l4426:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;memory.c: 51: l_offset += sizeof(block_t) + l_block->next->size;
  3131  000358  0100               	movlb	0	; () banked
  3132  00035A  EE20 F002          	lfsr	2,2
  3133  00035E  51BE               	movf	malloc@l_block& (0+255),w,b
  3134  000360  26D9               	addwf	fsr2l,f,c
  3135  000362  51BF               	movf	(malloc@l_block+1)& (0+255),w,b
  3136  000364  22DA               	addwfc	fsr2h,f,c
  3137  000366  CFDE F0B4          	movff	postinc2,??_malloc
  3138  00036A  CFDD F0B5          	movff	postdec2,??_malloc+1
  3139  00036E  C0B4  FFD9         	movff	??_malloc,fsr2l
  3140  000372  C0B5  FFDA         	movff	??_malloc+1,fsr2h
  3141  000376  CFDE F0B6          	movff	postinc2,??_malloc+2
  3142  00037A  CFDD F0B7          	movff	postdec2,??_malloc+3
  3143  00037E  0E05               	movlw	5
  3144  000380  0100               	movlb	0	; () banked
  3145  000382  27B6               	addwf	(??_malloc+2)& (0+255),f,b
  3146  000384  0E00               	movlw	0
  3147  000386  23B7               	addwfc	(??_malloc+3)& (0+255),f,b
  3148  000388  0100               	movlb	0	; () banked
  3149  00038A  51B6               	movf	(??_malloc+2)& (0+255),w,b
  3150  00038C  0100               	movlb	0	; () banked
  3151  00038E  27BA               	addwf	malloc@l_offset& (0+255),f,b
  3152  000390  0100               	movlb	0	; () banked
  3153  000392  51B7               	movf	(??_malloc+3)& (0+255),w,b
  3154  000394  0100               	movlb	0	; () banked
  3155  000396  23BB               	addwfc	(malloc@l_offset+1)& (0+255),f,b
  3156                           
  3157                           ;memory.c: 52: l_block = l_block->next;
  3158  000398  0100               	movlb	0	; () banked
  3159  00039A  EE20 F002          	lfsr	2,2
  3160  00039E  51BE               	movf	malloc@l_block& (0+255),w,b
  3161  0003A0  26D9               	addwf	fsr2l,f,c
  3162  0003A2  51BF               	movf	(malloc@l_block+1)& (0+255),w,b
  3163  0003A4  22DA               	addwfc	fsr2h,f,c
  3164  0003A6  CFDE F0BE          	movff	postinc2,malloc@l_block
  3165  0003AA  CFDD F0BF          	movff	postdec2,malloc@l_block+1
  3166  0003AE                     i1l259:
  3167                           
  3168                           ; BSR set to: 0
  3169  0003AE  0100               	movlb	0	; () banked
  3170  0003B0  EE20 F002          	lfsr	2,2
  3171  0003B4  51BE               	movf	malloc@l_block& (0+255),w,b
  3172  0003B6  26D9               	addwf	fsr2l,f,c
  3173  0003B8  51BF               	movf	(malloc@l_block+1)& (0+255),w,b
  3174  0003BA  22DA               	addwfc	fsr2h,f,c
  3175  0003BC  50DE               	movf	postinc2,w,c
  3176  0003BE  10DE               	iorwf	postinc2,w,c
  3177  0003C0  A4D8               	btfss	status,2,c
  3178  0003C2  D7CA               	goto	i1l4426
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;memory.c: 53: }
  3182                           ;memory.c: 55: if( ( sizeof(block_t) + l_offset + a_size ) >= 512 ) {
  3183                           
  3184                           ; BSR set to: 0
  3185  0003C4  0100               	movlb	0	; () banked
  3186  0003C6  51B2               	movf	malloc@a_size& (0+255),w,b
  3187  0003C8  0100               	movlb	0	; () banked
  3188  0003CA  25BA               	addwf	malloc@l_offset& (0+255),w,b
  3189  0003CC  0100               	movlb	0	; () banked
  3190  0003CE  6FB4               	movwf	??_malloc& (0+255),b
  3191  0003D0  0100               	movlb	0	; () banked
  3192  0003D2  51B3               	movf	(malloc@a_size+1)& (0+255),w,b
  3193  0003D4  0100               	movlb	0	; () banked
  3194  0003D6  21BB               	addwfc	(malloc@l_offset+1)& (0+255),w,b
  3195  0003D8  0100               	movlb	0	; () banked
  3196  0003DA  6FB5               	movwf	(??_malloc+1)& (0+255),b
  3197  0003DC  0E05               	movlw	5
  3198  0003DE  0100               	movlb	0	; () banked
  3199  0003E0  27B4               	addwf	??_malloc& (0+255),f,b
  3200  0003E2  0E00               	movlw	0
  3201  0003E4  23B5               	addwfc	(??_malloc+1)& (0+255),f,b
  3202  0003E6  0E02               	movlw	2
  3203  0003E8  0100               	movlb	0	; () banked
  3204  0003EA  5DB5               	subwf	(??_malloc+1)& (0+255),w,b
  3205  0003EC  A0D8               	btfss	status,0,c
  3206  0003EE  D007               	goto	i1l4434
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;memory.c: 57: return (0);
  3210  0003F0  0E00               	movlw	0
  3211  0003F2  0100               	movlb	0	; () banked
  3212  0003F4  6FB2               	movwf	?_malloc& (0+255),b
  3213  0003F6  0E00               	movlw	0
  3214  0003F8  0100               	movlb	0	; () banked
  3215  0003FA  6FB3               	movwf	(?_malloc+1)& (0+255),b
  3216                           
  3217                           ; BSR set to: 0
  3218  0003FC  0012               	return	
  3219  0003FE                     i1l4434:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;memory.c: 58: }
  3223                           ;memory.c: 60: block_t* l_previous = l_block;
  3224  0003FE  C0BE  F0B8         	movff	malloc@l_block,malloc@l_previous
  3225  000402  C0BF  F0B9         	movff	malloc@l_block+1,malloc@l_previous+1
  3226                           
  3227                           ;memory.c: 61: l_block = (block_t*)(&s_heap[l_offset]);
  3228  000406  0E09               	movlw	low _s_heap
  3229  000408  0100               	movlb	0	; () banked
  3230  00040A  25BA               	addwf	malloc@l_offset& (0+255),w,b
  3231  00040C  0100               	movlb	0	; () banked
  3232  00040E  6FBE               	movwf	malloc@l_block& (0+255),b
  3233  000410  0E03               	movlw	high _s_heap
  3234  000412  0100               	movlb	0	; () banked
  3235  000414  21BB               	addwfc	(malloc@l_offset+1)& (0+255),w,b
  3236  000416  0100               	movlb	0	; () banked
  3237  000418  6FBF               	movwf	(malloc@l_block+1)& (0+255),b
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;memory.c: 62: l_previous->next = l_block;
  3241  00041A  0100               	movlb	0	; () banked
  3242  00041C  EE20 F002          	lfsr	2,2
  3243  000420  51B8               	movf	malloc@l_previous& (0+255),w,b
  3244  000422  26D9               	addwf	fsr2l,f,c
  3245  000424  51B9               	movf	(malloc@l_previous+1)& (0+255),w,b
  3246  000426  22DA               	addwfc	fsr2h,f,c
  3247  000428  C0BE  FFDE         	movff	malloc@l_block,postinc2
  3248  00042C  C0BF  FFDD         	movff	malloc@l_block+1,postdec2
  3249  000430                     i1l255:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;memory.c: 63: }
  3253                           ;memory.c: 64: }
  3254                           ;memory.c: 66: l_block->size = a_size;
  3255  000430  C0BE  FFD9         	movff	malloc@l_block,fsr2l
  3256  000434  C0BF  FFDA         	movff	malloc@l_block+1,fsr2h
  3257  000438  C0B2  FFDE         	movff	malloc@a_size,postinc2
  3258  00043C  C0B3  FFDD         	movff	malloc@a_size+1,postdec2
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;memory.c: 67: l_block->free_block = 0;
  3262  000440  0100               	movlb	0	; () banked
  3263  000442  EE20 F004          	lfsr	2,4
  3264  000446  51BE               	movf	malloc@l_block& (0+255),w,b
  3265  000448  26D9               	addwf	fsr2l,f,c
  3266  00044A  51BF               	movf	(malloc@l_block+1)& (0+255),w,b
  3267  00044C  22DA               	addwfc	fsr2h,f,c
  3268  00044E  0E00               	movlw	0
  3269  000450  6EDF               	movwf	indf2,c
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;memory.c: 68: l_block->next = (0);
  3273  000452  0100               	movlb	0	; () banked
  3274  000454  EE20 F002          	lfsr	2,2
  3275  000458  51BE               	movf	malloc@l_block& (0+255),w,b
  3276  00045A  26D9               	addwf	fsr2l,f,c
  3277  00045C  51BF               	movf	(malloc@l_block+1)& (0+255),w,b
  3278  00045E  22DA               	addwfc	fsr2h,f,c
  3279  000460  0E00               	movlw	0
  3280  000462  6EDE               	movwf	postinc2,c
  3281  000464  0E00               	movlw	0
  3282  000466  6EDD               	movwf	postdec2,c
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;memory.c: 70: return l_block + 1;
  3286  000468  0E05               	movlw	5
  3287  00046A  0100               	movlb	0	; () banked
  3288  00046C  25BE               	addwf	malloc@l_block& (0+255),w,b
  3289  00046E  0100               	movlb	0	; () banked
  3290  000470  6FB2               	movwf	?_malloc& (0+255),b
  3291  000472  0E00               	movlw	0
  3292  000474  0100               	movlb	0	; () banked
  3293  000476  21BF               	addwfc	(malloc@l_block+1)& (0+255),w,b
  3294  000478  0100               	movlb	0	; () banked
  3295  00047A  6FB3               	movwf	(?_malloc+1)& (0+255),b
  3296  00047C  0012               	return	
  3297  00047E                     __end_of_malloc:
  3298                           	opt stack 0
  3299                           tosu	equ	0xFFF
  3300                           tosh	equ	0xFFE
  3301                           tosl	equ	0xFFD
  3302                           stkptr	equ	0xFFC
  3303                           pclath	equ	0xFFA
  3304                           tblptru	equ	0xFF8
  3305                           prodh	equ	0xFF4
  3306                           prodl	equ	0xFF3
  3307                           intcon	equ	0xFF2
  3308                           intcon2	equ	0xFF1
  3309                           postinc0	equ	0xFEE
  3310                           wreg	equ	0xFE8
  3311                           postinc1	equ	0xFE6
  3312                           postdec1	equ	0xFE5
  3313                           fsr1h	equ	0xFE2
  3314                           fsr1l	equ	0xFE1
  3315                           bsr	equ	0xFE0
  3316                           indf2	equ	0xFDF
  3317                           postinc2	equ	0xFDE
  3318                           postdec2	equ	0xFDD
  3319                           plusw2	equ	0xFDB
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function __split_free_block *****************
  3325 ;; Defined at:
  3326 ;;		line 104 in file "kernel/memory.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  a_block         2   40[BANK0 ] PTR struct block_s
  3329 ;;		 -> s_heap(512), NULL(0), 
  3330 ;;  a_resize        2   42[BANK0 ] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  l_new           2   48[BANK0 ] PTR struct block_s
  3333 ;;		 -> s_heap(512), NULL(0), 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3343 ;;      Params:         0       4       0       0       0       0       0
  3344 ;;      Locals:         0       2       0       0       0       0       0
  3345 ;;      Temps:          0       4       0       0       0       0       0
  3346 ;;      Totals:         0      10       0       0       0       0       0
  3347 ;;Total ram usage:       10 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    5
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_malloc
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text20
  3358  000650                     __ptext20:
  3359                           	opt stack 0
  3360  000650                     __split_free_block:
  3361                           	opt stack 17
  3362                           
  3363                           ;memory.c: 106: block_t* l_new = (block_t*)(((char*)a_block) + sizeof(block_t) + a_resiz
      +                          e);
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;incstack = 0
  3367  000650  0100               	movlb	0	; () banked
  3368  000652  51AA               	movf	__split_free_block@a_resize& (0+255),w,b
  3369  000654  0100               	movlb	0	; () banked
  3370  000656  25A8               	addwf	__split_free_block@a_block& (0+255),w,b
  3371  000658  0100               	movlb	0	; () banked
  3372  00065A  6FAC               	movwf	??__split_free_block& (0+255),b
  3373  00065C  0100               	movlb	0	; () banked
  3374  00065E  51AB               	movf	(__split_free_block@a_resize+1)& (0+255),w,b
  3375  000660  0100               	movlb	0	; () banked
  3376  000662  21A9               	addwfc	(__split_free_block@a_block+1)& (0+255),w,b
  3377  000664  0100               	movlb	0	; () banked
  3378  000666  6FAD               	movwf	(??__split_free_block+1)& (0+255),b
  3379  000668  0E05               	movlw	5
  3380  00066A  0100               	movlb	0	; () banked
  3381  00066C  25AC               	addwf	??__split_free_block& (0+255),w,b
  3382  00066E  0100               	movlb	0	; () banked
  3383  000670  6FB0               	movwf	__split_free_block@l_new& (0+255),b
  3384  000672  0E00               	movlw	0
  3385  000674  0100               	movlb	0	; () banked
  3386  000676  21AD               	addwfc	(??__split_free_block+1)& (0+255),w,b
  3387  000678  0100               	movlb	0	; () banked
  3388  00067A  6FB1               	movwf	(__split_free_block@l_new+1)& (0+255),b
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;memory.c: 108: l_new->size = a_block->size - ( a_resize + sizeof(block_t) );
  3392  00067C  C0A8  FFD9         	movff	__split_free_block@a_block,fsr2l
  3393  000680  C0A9  FFDA         	movff	__split_free_block@a_block+1,fsr2h
  3394  000684  CFDE F0AC          	movff	postinc2,??__split_free_block
  3395  000688  CFDD F0AD          	movff	postdec2,??__split_free_block+1
  3396  00068C  0E05               	movlw	5
  3397  00068E  0100               	movlb	0	; () banked
  3398  000690  25AA               	addwf	__split_free_block@a_resize& (0+255),w,b
  3399  000692  0100               	movlb	0	; () banked
  3400  000694  6FAE               	movwf	(??__split_free_block+2)& (0+255),b
  3401  000696  0E00               	movlw	0
  3402  000698  0100               	movlb	0	; () banked
  3403  00069A  21AB               	addwfc	(__split_free_block@a_resize+1)& (0+255),w,b
  3404  00069C  0100               	movlb	0	; () banked
  3405  00069E  6FAF               	movwf	(??__split_free_block+3)& (0+255),b
  3406  0006A0  0100               	movlb	0	; () banked
  3407  0006A2  1FAE               	comf	(??__split_free_block+2)& (0+255),f,b
  3408  0006A4  1FAF               	comf	(??__split_free_block+3)& (0+255),f,b
  3409  0006A6  4BAE               	infsnz	(??__split_free_block+2)& (0+255),f,b
  3410  0006A8  2BAF               	incf	(??__split_free_block+3)& (0+255),f,b
  3411  0006AA  0100               	movlb	0	; () banked
  3412  0006AC  51AC               	movf	??__split_free_block& (0+255),w,b
  3413  0006AE  0100               	movlb	0	; () banked
  3414  0006B0  27AE               	addwf	(??__split_free_block+2)& (0+255),f,b
  3415  0006B2  0100               	movlb	0	; () banked
  3416  0006B4  51AD               	movf	(??__split_free_block+1)& (0+255),w,b
  3417  0006B6  0100               	movlb	0	; () banked
  3418  0006B8  23AF               	addwfc	(??__split_free_block+3)& (0+255),f,b
  3419  0006BA  C0B0  FFD9         	movff	__split_free_block@l_new,fsr2l
  3420  0006BE  C0B1  FFDA         	movff	__split_free_block@l_new+1,fsr2h
  3421  0006C2  C0AE  FFDE         	movff	??__split_free_block+2,postinc2
  3422  0006C6  C0AF  FFDD         	movff	??__split_free_block+3,postdec2
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;memory.c: 110: l_new->free_block = 1;
  3426  0006CA  0100               	movlb	0	; () banked
  3427  0006CC  EE20 F004          	lfsr	2,4
  3428  0006D0  51B0               	movf	__split_free_block@l_new& (0+255),w,b
  3429  0006D2  26D9               	addwf	fsr2l,f,c
  3430  0006D4  51B1               	movf	(__split_free_block@l_new+1)& (0+255),w,b
  3431  0006D6  22DA               	addwfc	fsr2h,f,c
  3432  0006D8  0E01               	movlw	1
  3433  0006DA  6EDF               	movwf	indf2,c
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;memory.c: 113: l_new->next = a_block->next;
  3437  0006DC  0100               	movlb	0	; () banked
  3438  0006DE  EE20 F002          	lfsr	2,2
  3439  0006E2  51A8               	movf	__split_free_block@a_block& (0+255),w,b
  3440  0006E4  26D9               	addwf	fsr2l,f,c
  3441  0006E6  51A9               	movf	(__split_free_block@a_block+1)& (0+255),w,b
  3442  0006E8  22DA               	addwfc	fsr2h,f,c
  3443  0006EA  0100               	movlb	0	; () banked
  3444  0006EC  EE10 F002          	lfsr	1,2
  3445  0006F0  51B0               	movf	__split_free_block@l_new& (0+255),w,b
  3446  0006F2  26E1               	addwf	fsr1l,f,c
  3447  0006F4  51B1               	movf	(__split_free_block@l_new+1)& (0+255),w,b
  3448  0006F6  22E2               	addwfc	fsr1h,f,c
  3449  0006F8  CFDE FFE6          	movff	postinc2,postinc1
  3450  0006FC  CFDD FFE5          	movff	postdec2,postdec1
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;memory.c: 115: a_block->next = l_new;
  3454  000700  0100               	movlb	0	; () banked
  3455  000702  EE20 F002          	lfsr	2,2
  3456  000706  51A8               	movf	__split_free_block@a_block& (0+255),w,b
  3457  000708  26D9               	addwf	fsr2l,f,c
  3458  00070A  51A9               	movf	(__split_free_block@a_block+1)& (0+255),w,b
  3459  00070C  22DA               	addwfc	fsr2h,f,c
  3460  00070E  C0B0  FFDE         	movff	__split_free_block@l_new,postinc2
  3461  000712  C0B1  FFDD         	movff	__split_free_block@l_new+1,postdec2
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;memory.c: 117: a_block->size = a_resize;
  3465  000716  C0A8  FFD9         	movff	__split_free_block@a_block,fsr2l
  3466  00071A  C0A9  FFDA         	movff	__split_free_block@a_block+1,fsr2h
  3467  00071E  C0AA  FFDE         	movff	__split_free_block@a_resize,postinc2
  3468  000722  C0AB  FFDD         	movff	__split_free_block@a_resize+1,postdec2
  3469                           
  3470                           ; BSR set to: 0
  3471  000726  0012               	return		;funcret
  3472  000728                     __end_of__split_free_block:
  3473                           	opt stack 0
  3474                           tosu	equ	0xFFF
  3475                           tosh	equ	0xFFE
  3476                           tosl	equ	0xFFD
  3477                           stkptr	equ	0xFFC
  3478                           pclath	equ	0xFFA
  3479                           tblptru	equ	0xFF8
  3480                           prodh	equ	0xFF4
  3481                           prodl	equ	0xFF3
  3482                           intcon	equ	0xFF2
  3483                           intcon2	equ	0xFF1
  3484                           postinc0	equ	0xFEE
  3485                           wreg	equ	0xFE8
  3486                           postinc1	equ	0xFE6
  3487                           postdec1	equ	0xFE5
  3488                           fsr1h	equ	0xFE2
  3489                           fsr1l	equ	0xFE1
  3490                           bsr	equ	0xFE0
  3491                           indf2	equ	0xFDF
  3492                           postinc2	equ	0xFDE
  3493                           postdec2	equ	0xFDD
  3494                           plusw2	equ	0xFDB
  3495                           fsr2h	equ	0xFDA
  3496                           fsr2l	equ	0xFD9
  3497                           status	equ	0xFD8
  3498                           
  3499 ;; *************** function __find_free_block *****************
  3500 ;; Defined at:
  3501 ;;		line 93 in file "kernel/memory.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  a_size          2   40[BANK0 ] unsigned int 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  l_current       2   44[BANK0 ] PTR struct block_s
  3506 ;;		 -> s_heap(512), NULL(0), 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  2   40[BANK0 ] PTR struct block_s
  3509 ;; Registers used:
  3510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3516 ;;      Params:         0       2       0       0       0       0       0
  3517 ;;      Locals:         0       2       0       0       0       0       0
  3518 ;;      Temps:          0       2       0       0       0       0       0
  3519 ;;      Totals:         0       6       0       0       0       0       0
  3520 ;;Total ram usage:        6 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    5
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_malloc
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text21
  3531  000E08                     __ptext21:
  3532                           	opt stack 0
  3533  000E08                     __find_free_block:
  3534                           	opt stack 17
  3535                           
  3536                           ;memory.c: 94: block_t* l_current = s_blocks;
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;incstack = 0
  3540  000E08  C0CE  F0AC         	movff	_s_blocks,__find_free_block@l_current
  3541  000E0C  C0CF  F0AD         	movff	_s_blocks+1,__find_free_block@l_current+1
  3542                           
  3543                           ;memory.c: 96: while( l_current && ( l_current->free_block == 0 || l_current->size < a_s
      +                          ize ) ) {
  3544  000E10  D00B               	goto	i1l4326
  3545  000E12                     i1l4324:
  3546                           
  3547                           ;memory.c: 98: l_current = l_current->next;
  3548  000E12  0100               	movlb	0	; () banked
  3549  000E14  EE20 F002          	lfsr	2,2
  3550  000E18  51AC               	movf	__find_free_block@l_current& (0+255),w,b
  3551  000E1A  26D9               	addwf	fsr2l,f,c
  3552  000E1C  51AD               	movf	(__find_free_block@l_current+1)& (0+255),w,b
  3553  000E1E  22DA               	addwfc	fsr2h,f,c
  3554  000E20  CFDE F0AC          	movff	postinc2,__find_free_block@l_current
  3555  000E24  CFDD F0AD          	movff	postdec2,__find_free_block@l_current+1
  3556  000E28                     i1l4326:
  3557  000E28  0100               	movlb	0	; () banked
  3558  000E2A  51AC               	movf	__find_free_block@l_current& (0+255),w,b
  3559  000E2C  0100               	movlb	0	; () banked
  3560  000E2E  11AD               	iorwf	(__find_free_block@l_current+1)& (0+255),w,b
  3561  000E30  B4D8               	btfsc	status,2,c
  3562  000E32  D016               	goto	i1l4332
  3563                           
  3564                           ; BSR set to: 0
  3565  000E34  0100               	movlb	0	; () banked
  3566  000E36  EE20 F004          	lfsr	2,4
  3567  000E3A  51AC               	movf	__find_free_block@l_current& (0+255),w,b
  3568  000E3C  26D9               	addwf	fsr2l,f,c
  3569  000E3E  51AD               	movf	(__find_free_block@l_current+1)& (0+255),w,b
  3570  000E40  22DA               	addwfc	fsr2h,f,c
  3571  000E42  50DF               	movf	indf2,w,c
  3572  000E44  B4D8               	btfsc	status,2,c
  3573  000E46  D7E5               	goto	i1l4324
  3574                           
  3575                           ; BSR set to: 0
  3576  000E48  C0AC  FFD9         	movff	__find_free_block@l_current,fsr2l
  3577  000E4C  C0AD  FFDA         	movff	__find_free_block@l_current+1,fsr2h
  3578  000E50  0100               	movlb	0	; () banked
  3579  000E52  51A8               	movf	__find_free_block@a_size& (0+255),w,b
  3580  000E54  5CDE               	subwf	postinc2,w,c
  3581  000E56  0100               	movlb	0	; () banked
  3582  000E58  51A9               	movf	(__find_free_block@a_size+1)& (0+255),w,b
  3583  000E5A  58DE               	subwfb	postinc2,w,c
  3584  000E5C  A0D8               	btfss	status,0,c
  3585  000E5E  D7D9               	goto	i1l4324
  3586  000E60                     i1l4332:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;memory.c: 99: }
  3590                           ;memory.c: 101: return l_current;
  3591  000E60  C0AC  F0A8         	movff	__find_free_block@l_current,?__find_free_block
  3592  000E64  C0AD  F0A9         	movff	__find_free_block@l_current+1,?__find_free_block+1
  3593  000E68  0012               	return	
  3594  000E6A                     __end_of__find_free_block:
  3595                           	opt stack 0
  3596                           tosu	equ	0xFFF
  3597                           tosh	equ	0xFFE
  3598                           tosl	equ	0xFFD
  3599                           stkptr	equ	0xFFC
  3600                           pclath	equ	0xFFA
  3601                           tblptru	equ	0xFF8
  3602                           prodh	equ	0xFF4
  3603                           prodl	equ	0xFF3
  3604                           intcon	equ	0xFF2
  3605                           intcon2	equ	0xFF1
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           postinc1	equ	0xFE6
  3609                           postdec1	equ	0xFE5
  3610                           fsr1h	equ	0xFE2
  3611                           fsr1l	equ	0xFE1
  3612                           bsr	equ	0xFE0
  3613                           indf2	equ	0xFDF
  3614                           postinc2	equ	0xFDE
  3615                           postdec2	equ	0xFDD
  3616                           plusw2	equ	0xFDB
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _task_2_priority *****************
  3622 ;; Defined at:
  3623 ;;		line 59 in file "main.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  i               2   77[BANK2 ] unsigned int 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3637 ;;      Params:         0       0       0       0       0       0       0
  3638 ;;      Locals:         0       0       0       2       0       0       0
  3639 ;;      Temps:          0       1       0       0       0       0       0
  3640 ;;      Totals:         0       1       0       2       0       0       0
  3641 ;;Total ram usage:        3 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    9
  3644 ;; This function calls:
  3645 ;;		_semaphore_signal
  3646 ;;		_semaphore_wait
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text22
  3653  000D9E                     __ptext22:
  3654                           	opt stack 0
  3655  000D9E                     _task_2_priority:
  3656                           	opt stack 17
  3657                           
  3658                           ;main.c: 60: TRISDbits.RD1 = 0;
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;incstack = 0
  3662  000D9E  9295               	bcf	3989,1,c	;volatile
  3663                           
  3664                           ;main.c: 61: PORTDbits.RD1 = 0;
  3665  000DA0  9283               	bcf	3971,1,c	;volatile
  3666  000DA2                     l4690:
  3667                           
  3668                           ;main.c: 63: PORTDbits.RD1 = !LATDbits.LATD1;
  3669  000DA2  B28C               	btfsc	3980,1,c	;volatile
  3670  000DA4  D004               	goto	u429_20
  3671  000DA6  0100               	movlb	0	; () banked
  3672  000DA8  6BCD               	clrf	??_task_2_priority& (0+255),b
  3673  000DAA  2BCD               	incf	??_task_2_priority& (0+255),f,b
  3674  000DAC  D002               	goto	u430_28
  3675  000DAE                     u429_20:
  3676  000DAE  0100               	movlb	0	; () banked
  3677  000DB0  6BCD               	clrf	??_task_2_priority& (0+255),b
  3678  000DB2                     u430_28:
  3679  000DB2  0100               	movlb	0	; () banked
  3680  000DB4  47CD               	rlncf	??_task_2_priority& (0+255),f,b
  3681  000DB6  5083               	movf	3971,w,c	;volatile
  3682  000DB8  0100               	movlb	0	; () banked
  3683  000DBA  19CD               	xorwf	??_task_2_priority& (0+255),w,b
  3684  000DBC  0BFD               	andlw	-3
  3685  000DBE  19CD               	xorwf	??_task_2_priority& (0+255),w,b
  3686  000DC0  6E83               	movwf	3971,c	;volatile
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 64: for( uint16_t i = 0; i < 60000; i++ ) { __nop(); }
  3690  000DC2  0E00               	movlw	0
  3691  000DC4  0102               	movlb	2	; () banked
  3692  000DC6  6F4E               	movwf	(task_2_priority@i+1)& (0+255),b
  3693  000DC8  0E00               	movlw	0
  3694  000DCA  6F4D               	movwf	task_2_priority@i& (0+255),b
  3695  000DCC                     l4694:
  3696                           
  3697                           ; BSR set to: 2
  3698  000DCC  0E60               	movlw	96
  3699  000DCE  0102               	movlb	2	; () banked
  3700  000DD0  5D4D               	subwf	task_2_priority@i& (0+255),w,b
  3701  000DD2  0EEA               	movlw	234
  3702  000DD4  0102               	movlb	2	; () banked
  3703  000DD6  594E               	subwfb	(task_2_priority@i+1)& (0+255),w,b
  3704  000DD8  B0D8               	btfsc	status,0,c
  3705  000DDA  D005               	goto	l4702
  3706                           
  3707                           ; BSR set to: 2
  3708                           
  3709                           ; BSR set to: 2
  3710  000DDC  F000               	nop	
  3711  000DDE  0102               	movlb	2	; () banked
  3712  000DE0  4B4D               	infsnz	task_2_priority@i& (0+255),f,b
  3713  000DE2  2B4E               	incf	(task_2_priority@i+1)& (0+255),f,b
  3714  000DE4  D7F3               	goto	l4694
  3715  000DE6                     l4702:
  3716                           
  3717                           ; BSR set to: 2
  3718                           ;main.c: 65: semaphore_wait( &g_sem_2 );
  3719  000DE6  0ED4               	movlw	low _g_sem_2
  3720  000DE8  0100               	movlb	0	; () banked
  3721  000DEA  6FCA               	movwf	semaphore_wait@handle& (0+255),b
  3722  000DEC  0E00               	movlw	high _g_sem_2
  3723  000DEE  0100               	movlb	0	; () banked
  3724  000DF0  6FCB               	movwf	(semaphore_wait@handle+1)& (0+255),b
  3725  000DF2  ECC8  F007         	call	_semaphore_wait	;wreg free
  3726                           
  3727                           ;main.c: 66: semaphore_signal( &g_sem_1 );
  3728  000DF6  0ED0               	movlw	low _g_sem_1
  3729  000DF8  0102               	movlb	2	; () banked
  3730  000DFA  6F73               	movwf	semaphore_signal@handle& (0+255),b
  3731  000DFC  0E00               	movlw	high _g_sem_1
  3732  000DFE  0102               	movlb	2	; () banked
  3733  000E00  6F74               	movwf	(semaphore_signal@handle+1)& (0+255),b
  3734  000E02  EC10  F006         	call	_semaphore_signal	;wreg free
  3735  000E06  D7CD               	goto	l4690
  3736  000E08                     __end_of_task_2_priority:
  3737                           	opt stack 0
  3738                           tosu	equ	0xFFF
  3739                           tosh	equ	0xFFE
  3740                           tosl	equ	0xFFD
  3741                           stkptr	equ	0xFFC
  3742                           pclath	equ	0xFFA
  3743                           tblptru	equ	0xFF8
  3744                           prodh	equ	0xFF4
  3745                           prodl	equ	0xFF3
  3746                           intcon	equ	0xFF2
  3747                           intcon2	equ	0xFF1
  3748                           postinc0	equ	0xFEE
  3749                           wreg	equ	0xFE8
  3750                           postinc1	equ	0xFE6
  3751                           postdec1	equ	0xFE5
  3752                           fsr1h	equ	0xFE2
  3753                           fsr1l	equ	0xFE1
  3754                           bsr	equ	0xFE0
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           plusw2	equ	0xFDB
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function _semaphore_signal *****************
  3764 ;; Defined at:
  3765 ;;		line 20 in file "kernel/semaphore.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  handle          2  115[BANK2 ] PTR struct semaphore_s
  3768 ;;		 -> g_sem_2(4), g_sem_1(4), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  l_task          2  118[BANK2 ] PTR struct task_s
  3771 ;;		 -> s_heap(512), idle(41), dispatcher(128), NULL(0), 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3781 ;;      Params:         0       0       0       2       0       0       0
  3782 ;;      Locals:         0       0       0       2       0       0       0
  3783 ;;      Temps:          0       0       0       1       0       0       0
  3784 ;;      Totals:         0       0       0       5       0       0       0
  3785 ;;Total ram usage:        5 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    8
  3788 ;; This function calls:
  3789 ;;		_dispatcher_change_context
  3790 ;;		_linked_list_get_first
  3791 ;;		_linked_list_get_size
  3792 ;;		_linked_list_remove_first
  3793 ;;		i1_task_ready
  3794 ;; This function is called by:
  3795 ;;		_task_2_priority
  3796 ;;		_task_3_priority
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text23
  3801  000C20                     __ptext23:
  3802                           	opt stack 0
  3803  000C20                     _semaphore_signal:
  3804                           	opt stack 17
  3805                           
  3806                           ;semaphore.c: 22: if( ++handle->value <= 0 && linked_list_get_size( handle->queue ) > 0 
      +                          ) {
  3807                           
  3808                           ;incstack = 0
  3809  000C20  C273  FFD9         	movff	semaphore_signal@handle,fsr2l
  3810  000C24  C274  FFDA         	movff	semaphore_signal@handle+1,fsr2h
  3811  000C28  2ADF               	incf	indf2,f,c
  3812  000C2A  50DF               	movf	indf2,w,c
  3813  000C2C  0A80               	xorlw	128
  3814  000C2E  0F7F               	addlw	-129
  3815  000C30  B0D8               	btfsc	status,0,c
  3816  000C32  0012               	return	
  3817  000C34  0102               	movlb	2	; () banked
  3818  000C36  EE20 F001          	lfsr	2,1
  3819  000C3A  5173               	movf	semaphore_signal@handle& (0+255),w,b
  3820  000C3C  26D9               	addwf	fsr2l,f,c
  3821  000C3E  5174               	movf	(semaphore_signal@handle+1)& (0+255),w,b
  3822  000C40  22DA               	addwfc	fsr2h,f,c
  3823  000C42  CFDE F24F          	movff	postinc2,linked_list_get_size@a_head
  3824  000C46  CFDD F250          	movff	postdec2,linked_list_get_size@a_head+1
  3825  000C4A  EC7F  F008         	call	_linked_list_get_size	;wreg free
  3826  000C4E  0900               	iorlw	0
  3827  000C50  B4D8               	btfsc	status,2,c
  3828  000C52  0012               	return	
  3829                           
  3830                           ;semaphore.c: 24: task_t* l_task = (task_t*)linked_list_get_first( handle->queue );
  3831  000C54  0102               	movlb	2	; () banked
  3832  000C56  EE20 F001          	lfsr	2,1
  3833  000C5A  5173               	movf	semaphore_signal@handle& (0+255),w,b
  3834  000C5C  26D9               	addwf	fsr2l,f,c
  3835  000C5E  5174               	movf	(semaphore_signal@handle+1)& (0+255),w,b
  3836  000C60  22DA               	addwfc	fsr2h,f,c
  3837  000C62  CFDE F24F          	movff	postinc2,linked_list_get_first@a_head
  3838  000C66  CFDD F250          	movff	postdec2,linked_list_get_first@a_head+1
  3839  000C6A  EC90  F008         	call	_linked_list_get_first	;wreg free
  3840  000C6E  C24F  F276         	movff	?_linked_list_get_first,semaphore_signal@l_task
  3841  000C72  C250  F277         	movff	?_linked_list_get_first+1,semaphore_signal@l_task+1
  3842                           
  3843                           ;semaphore.c: 26: linked_list_remove_first( handle->queue );
  3844  000C76  0102               	movlb	2	; () banked
  3845  000C78  EE20 F001          	lfsr	2,1
  3846  000C7C  5173               	movf	semaphore_signal@handle& (0+255),w,b
  3847  000C7E  26D9               	addwf	fsr2l,f,c
  3848  000C80  5174               	movf	(semaphore_signal@handle+1)& (0+255),w,b
  3849  000C82  22DA               	addwfc	fsr2h,f,c
  3850  000C84  CFDE F259          	movff	postinc2,linked_list_remove_first@a_head
  3851  000C88  CFDD F25A          	movff	postdec2,linked_list_remove_first@a_head+1
  3852  000C8C  EC1F  F005         	call	_linked_list_remove_first	;wreg free
  3853                           
  3854                           ;semaphore.c: 28: task_ready( l_task );
  3855  000C90  C276  F24F         	movff	semaphore_signal@l_task,i1task_ready@handle
  3856  000C94  C277  F250         	movff	semaphore_signal@l_task+1,i1task_ready@handle+1
  3857  000C98  ECC1  F008         	call	i1_task_ready	;wreg free
  3858                           
  3859                           ;semaphore.c: 30: dispatcher_change_context( task_state_ready );
  3860  000C9C  0E00               	movlw	0
  3861  000C9E  EC3F  F002         	call	_dispatcher_change_context
  3862  000CA2  0012               	return	
  3863  000CA4                     __end_of_semaphore_signal:
  3864                           	opt stack 0
  3865                           tosu	equ	0xFFF
  3866                           tosh	equ	0xFFE
  3867                           tosl	equ	0xFFD
  3868                           stkptr	equ	0xFFC
  3869                           pclath	equ	0xFFA
  3870                           tblptru	equ	0xFF8
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           intcon	equ	0xFF2
  3874                           intcon2	equ	0xFF1
  3875                           postinc0	equ	0xFEE
  3876                           wreg	equ	0xFE8
  3877                           postinc1	equ	0xFE6
  3878                           postdec1	equ	0xFE5
  3879                           fsr1h	equ	0xFE2
  3880                           fsr1l	equ	0xFE1
  3881                           bsr	equ	0xFE0
  3882                           indf2	equ	0xFDF
  3883                           postinc2	equ	0xFDE
  3884                           postdec2	equ	0xFDD
  3885                           plusw2	equ	0xFDB
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function i1_task_ready *****************
  3891 ;; Defined at:
  3892 ;;		line 24 in file "kernel/task.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  handle          2   79[BANK2 ] PTR struct task_s
  3895 ;;		 -> s_heap(512), dispatcher.tasks(123), idle(41), dispatcher(128), 
  3896 ;;		 -> NULL(0), 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3908 ;;      Params:         0       0       0       2       0       0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0
  3911 ;;      Totals:         0       0       0       2       0       0       0
  3912 ;;Total ram usage:        2 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    5
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_semaphore_signal
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text24
  3923  001182                     __ptext24:
  3924                           	opt stack 0
  3925  001182                     i1_task_ready:
  3926                           	opt stack 19
  3927                           
  3928                           ;task.c: 25: handle->state = task_state_ready;
  3929                           
  3930                           ;incstack = 0
  3931  001182  0102               	movlb	2	; () banked
  3932  001184  EE20 F004          	lfsr	2,4
  3933  001188  514F               	movf	i1task_ready@handle& (0+255),w,b
  3934  00118A  26D9               	addwf	fsr2l,f,c
  3935  00118C  5150               	movf	(i1task_ready@handle+1)& (0+255),w,b
  3936  00118E  22DA               	addwfc	fsr2h,f,c
  3937  001190  0E00               	movlw	0
  3938  001192  6EDF               	movwf	indf2,c
  3939                           
  3940                           ; BSR set to: 2
  3941  001194  0012               	return		;funcret
  3942  001196                     __end_ofi1_task_ready:
  3943                           	opt stack 0
  3944                           tosu	equ	0xFFF
  3945                           tosh	equ	0xFFE
  3946                           tosl	equ	0xFFD
  3947                           stkptr	equ	0xFFC
  3948                           pclath	equ	0xFFA
  3949                           tblptru	equ	0xFF8
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           intcon2	equ	0xFF1
  3954                           postinc0	equ	0xFEE
  3955                           wreg	equ	0xFE8
  3956                           postinc1	equ	0xFE6
  3957                           postdec1	equ	0xFE5
  3958                           fsr1h	equ	0xFE2
  3959                           fsr1l	equ	0xFE1
  3960                           bsr	equ	0xFE0
  3961                           indf2	equ	0xFDF
  3962                           postinc2	equ	0xFDE
  3963                           postdec2	equ	0xFDD
  3964                           plusw2	equ	0xFDB
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969 ;; *************** function _linked_list_remove_first *****************
  3970 ;; Defined at:
  3971 ;;		line 108 in file "kernel/linked_list.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  a_head          2   89[BANK2 ] PTR struct linked_list_s
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  l_iter_delet    2   95[BANK2 ] PTR struct linked_list_s
  3976 ;;		 -> s_heap(512), NULL(0), 
  3977 ;;  l_iter_new_f    2   93[BANK2 ] PTR struct linked_list_s
  3978 ;;		 -> s_heap(512), NULL(0), 
  3979 ;;  l_head_data     2   97[BANK2 ] PTR struct linked_list_h
  3980 ;;		 -> s_heap(512), idle(41), dispatcher(128), NULL(0), 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      char 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3990 ;;      Params:         0       0       0       2       0       0       0
  3991 ;;      Locals:         0       0       0       6       0       0       0
  3992 ;;      Temps:          0       0       0       2       0       0       0
  3993 ;;      Totals:         0       0       0      10       0       0       0
  3994 ;;Total ram usage:       10 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    7
  3997 ;; This function calls:
  3998 ;;		_free
  3999 ;; This function is called by:
  4000 ;;		_semaphore_signal
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text25
  4005  000A3E                     __ptext25:
  4006                           	opt stack 0
  4007  000A3E                     _linked_list_remove_first:
  4008                           	opt stack 17
  4009                           
  4010                           ;linked_list.c: 109: linked_list_head_data_t* l_head_data = (linked_list_head_data_t*)(a
      +                          _head->data);
  4011                           
  4012                           ; BSR set to: 2
  4013                           ;incstack = 0
  4014  000A3E  0102               	movlb	2	; () banked
  4015  000A40  EE20 F002          	lfsr	2,2
  4016  000A44  5159               	movf	linked_list_remove_first@a_head& (0+255),w,b
  4017  000A46  26D9               	addwf	fsr2l,f,c
  4018  000A48  515A               	movf	(linked_list_remove_first@a_head+1)& (0+255),w,b
  4019  000A4A  22DA               	addwfc	fsr2h,f,c
  4020  000A4C  CFDE F261          	movff	postinc2,linked_list_remove_first@l_head_data
  4021  000A50  CFDD F262          	movff	postdec2,linked_list_remove_first@l_head_data+1
  4022                           
  4023                           ; BSR set to: 2
  4024                           ;linked_list.c: 111: if( l_head_data->size == 0 ) {
  4025  000A54  C261  FFD9         	movff	linked_list_remove_first@l_head_data,fsr2l
  4026  000A58  C262  FFDA         	movff	linked_list_remove_first@l_head_data+1,fsr2h
  4027  000A5C  50DF               	movf	indf2,w,c
  4028  000A5E  B4D8               	btfsc	status,2,c
  4029  000A60  0012               	return	
  4030                           
  4031                           ; BSR set to: 2
  4032                           
  4033                           ; BSR set to: 2
  4034                           
  4035                           ; BSR set to: 2
  4036                           ;linked_list.c: 113: } else if( l_head_data->size == 1 ) {
  4037                           
  4038                           ; BSR set to: 2
  4039                           ;linked_list.c: 112: return -2;
  4040                           ;	Return value of _linked_list_remove_first is never used
  4041  000A62  C261  FFD9         	movff	linked_list_remove_first@l_head_data,fsr2l
  4042  000A66  C262  FFDA         	movff	linked_list_remove_first@l_head_data+1,fsr2h
  4043  000A6A  04DE               	decf	postinc2,w,c
  4044  000A6C  A4D8               	btfss	status,2,c
  4045  000A6E  D01B               	goto	i1l4576
  4046                           
  4047                           ; BSR set to: 2
  4048                           ;linked_list.c: 115: a_head->next = ((void*)0);
  4049  000A70  C259  FFD9         	movff	linked_list_remove_first@a_head,fsr2l
  4050  000A74  C25A  FFDA         	movff	linked_list_remove_first@a_head+1,fsr2h
  4051  000A78  CFDE F255          	movff	postinc2,free@a_pointer
  4052  000A7C  CFDD F256          	movff	postdec2,free@a_pointer+1
  4053  000A80  ECE5  F007         	call	_free	;wreg free
  4054                           
  4055                           ;linked_list.c: 116: l_head_data->size--;
  4056  000A84  C261  FFD9         	movff	linked_list_remove_first@l_head_data,fsr2l
  4057  000A88  C262  FFDA         	movff	linked_list_remove_first@l_head_data+1,fsr2h
  4058  000A8C  06DF               	decf	indf2,f,c
  4059                           
  4060                           ;linked_list.c: 117: l_head_data->last = ((void*)0);
  4061  000A8E  0102               	movlb	2	; () banked
  4062  000A90  EE20 F001          	lfsr	2,1
  4063  000A94  5161               	movf	linked_list_remove_first@l_head_data& (0+255),w,b
  4064  000A96  26D9               	addwf	fsr2l,f,c
  4065  000A98  5162               	movf	(linked_list_remove_first@l_head_data+1)& (0+255),w,b
  4066  000A9A  22DA               	addwfc	fsr2h,f,c
  4067  000A9C  0E00               	movlw	0
  4068  000A9E  6EDE               	movwf	postinc2,c
  4069  000AA0  0E00               	movlw	0
  4070  000AA2  6EDD               	movwf	postdec2,c
  4071                           
  4072                           ;linked_list.c: 118: } else {
  4073  000AA4  0012               	return	
  4074  000AA6                     i1l4576:
  4075                           
  4076                           ; BSR set to: 2
  4077                           ;linked_list.c: 119: linked_list_t* l_iter_delet = a_head->next;
  4078  000AA6  C259  FFD9         	movff	linked_list_remove_first@a_head,fsr2l
  4079  000AAA  C25A  FFDA         	movff	linked_list_remove_first@a_head+1,fsr2h
  4080  000AAE  CFDE F25F          	movff	postinc2,linked_list_remove_first@l_iter_delet
  4081  000AB2  CFDD F260          	movff	postdec2,linked_list_remove_first@l_iter_delet+1
  4082                           
  4083                           ; BSR set to: 2
  4084                           ;linked_list.c: 121: a_head->next = l_iter_new_first;
  4085  000AB6  C259  FFD9         	movff	linked_list_remove_first@a_head,fsr2l
  4086  000ABA  C25A  FFDA         	movff	linked_list_remove_first@a_head+1,fsr2h
  4087  000ABE  CFDE F25B          	movff	postinc2,??_linked_list_remove_first
  4088  000AC2  CFDD F25C          	movff	postdec2,??_linked_list_remove_first+1
  4089  000AC6  C25B  FFD9         	movff	??_linked_list_remove_first,fsr2l
  4090  000ACA  C25C  FFDA         	movff	??_linked_list_remove_first+1,fsr2h
  4091  000ACE  CFDE F25D          	movff	postinc2,linked_list_remove_first@l_iter_new_first
  4092  000AD2  CFDD F25E          	movff	postdec2,linked_list_remove_first@l_iter_new_first+1
  4093                           
  4094                           ; BSR set to: 2
  4095                           ;linked_list.c: 122: l_head_data->size--;
  4096  000AD6  C261  FFD9         	movff	linked_list_remove_first@l_head_data,fsr2l
  4097  000ADA  C262  FFDA         	movff	linked_list_remove_first@l_head_data+1,fsr2h
  4098  000ADE  06DF               	decf	indf2,f,c
  4099                           
  4100                           ; BSR set to: 2
  4101                           ;linked_list.c: 123: free(l_iter_delet);
  4102  000AE0  C25F  F255         	movff	linked_list_remove_first@l_iter_delet,free@a_pointer
  4103  000AE4  C260  F256         	movff	linked_list_remove_first@l_iter_delet+1,free@a_pointer+1
  4104  000AE8  ECE5  F007         	call	_free	;wreg free
  4105  000AEC  0012               	return	
  4106  000AEE                     __end_of_linked_list_remove_first:
  4107                           	opt stack 0
  4108                           tosu	equ	0xFFF
  4109                           tosh	equ	0xFFE
  4110                           tosl	equ	0xFFD
  4111                           stkptr	equ	0xFFC
  4112                           pclath	equ	0xFFA
  4113                           tblptru	equ	0xFF8
  4114                           prodh	equ	0xFF4
  4115                           prodl	equ	0xFF3
  4116                           intcon	equ	0xFF2
  4117                           intcon2	equ	0xFF1
  4118                           postinc0	equ	0xFEE
  4119                           wreg	equ	0xFE8
  4120                           postinc1	equ	0xFE6
  4121                           postdec1	equ	0xFE5
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           bsr	equ	0xFE0
  4125                           indf2	equ	0xFDF
  4126                           postinc2	equ	0xFDE
  4127                           postdec2	equ	0xFDD
  4128                           plusw2	equ	0xFDB
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _free *****************
  4134 ;; Defined at:
  4135 ;;		line 73 in file "kernel/memory.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  a_pointer       2   85[BANK2 ] PTR void 
  4138 ;;		 -> s_heap(512), NULL(0), 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  l_block         2   87[BANK2 ] PTR struct block_s
  4141 ;;		 -> s_heap(512), NULL(0), 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       2       0       0       0
  4152 ;;      Locals:         0       0       0       2       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         0       0       0       4       0       0       0
  4155 ;;Total ram usage:        4 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    6
  4158 ;; This function calls:
  4159 ;;		__merge_free_blocks
  4160 ;; This function is called by:
  4161 ;;		_linked_list_remove_first
  4162 ;;		_linked_list_remove_last
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text26
  4167  000FCA                     __ptext26:
  4168                           	opt stack 0
  4169  000FCA                     _free:
  4170                           	opt stack 17
  4171                           
  4172                           ;memory.c: 75: if( a_pointer == (0) ) {
  4173                           
  4174                           ;incstack = 0
  4175  000FCA  0102               	movlb	2	; () banked
  4176  000FCC  5155               	movf	free@a_pointer& (0+255),w,b
  4177  000FCE  0102               	movlb	2	; () banked
  4178  000FD0  1156               	iorwf	(free@a_pointer+1)& (0+255),w,b
  4179  000FD2  B4D8               	btfsc	status,2,c
  4180  000FD4  0012               	return	
  4181                           
  4182                           ; BSR set to: 2
  4183                           ;memory.c: 77: }
  4184                           ;memory.c: 79: block_t* l_block = ((block_t*) a_pointer ) - 1;
  4185                           
  4186                           ; BSR set to: 2
  4187                           
  4188                           ; BSR set to: 2
  4189                           ;memory.c: 76: return;
  4190  000FD6  0EFB               	movlw	251
  4191  000FD8  0102               	movlb	2	; () banked
  4192  000FDA  2555               	addwf	free@a_pointer& (0+255),w,b
  4193  000FDC  0102               	movlb	2	; () banked
  4194  000FDE  6F57               	movwf	free@l_block& (0+255),b
  4195  000FE0  0EFF               	movlw	255
  4196  000FE2  0102               	movlb	2	; () banked
  4197  000FE4  2156               	addwfc	(free@a_pointer+1)& (0+255),w,b
  4198  000FE6  0102               	movlb	2	; () banked
  4199  000FE8  6F58               	movwf	(free@l_block+1)& (0+255),b
  4200                           
  4201                           ; BSR set to: 2
  4202                           ;memory.c: 82: l_block->free_block = 1;
  4203  000FEA  0102               	movlb	2	; () banked
  4204  000FEC  EE20 F004          	lfsr	2,4
  4205  000FF0  5157               	movf	free@l_block& (0+255),w,b
  4206  000FF2  26D9               	addwf	fsr2l,f,c
  4207  000FF4  5158               	movf	(free@l_block+1)& (0+255),w,b
  4208  000FF6  22DA               	addwfc	fsr2h,f,c
  4209  000FF8  0E01               	movlw	1
  4210  000FFA  6EDF               	movwf	indf2,c
  4211                           
  4212                           ; BSR set to: 2
  4213                           ;memory.c: 84: _merge_free_blocks();
  4214  000FFC  EC94  F003         	call	__merge_free_blocks	;wreg free
  4215  001000  0012               	return		;funcret
  4216  001002                     __end_of_free:
  4217                           	opt stack 0
  4218                           tosu	equ	0xFFF
  4219                           tosh	equ	0xFFE
  4220                           tosl	equ	0xFFD
  4221                           stkptr	equ	0xFFC
  4222                           pclath	equ	0xFFA
  4223                           tblptru	equ	0xFF8
  4224                           prodh	equ	0xFF4
  4225                           prodl	equ	0xFF3
  4226                           intcon	equ	0xFF2
  4227                           intcon2	equ	0xFF1
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           postinc1	equ	0xFE6
  4231                           postdec1	equ	0xFE5
  4232                           fsr1h	equ	0xFE2
  4233                           fsr1l	equ	0xFE1
  4234                           bsr	equ	0xFE0
  4235                           indf2	equ	0xFDF
  4236                           postinc2	equ	0xFDE
  4237                           postdec2	equ	0xFDD
  4238                           plusw2	equ	0xFDB
  4239                           fsr2h	equ	0xFDA
  4240                           fsr2l	equ	0xFD9
  4241                           status	equ	0xFD8
  4242                           
  4243 ;; *************** function __merge_free_blocks *****************
  4244 ;; Defined at:
  4245 ;;		line 120 in file "kernel/memory.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  l_next          2   81[BANK2 ] PTR struct block_s
  4250 ;;		 -> s_heap(512), NULL(0), 
  4251 ;;  l_curr          2   83[BANK2 ] PTR struct block_s
  4252 ;;		 -> s_heap(512), NULL(0), 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4262 ;;      Params:         0       0       0       0       0       0       0
  4263 ;;      Locals:         0       0       0       4       0       0       0
  4264 ;;      Temps:          0       0       0       2       0       0       0
  4265 ;;      Totals:         0       0       0       6       0       0       0
  4266 ;;Total ram usage:        6 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    5
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_free
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text27
  4277  000728                     __ptext27:
  4278                           	opt stack 0
  4279  000728                     __merge_free_blocks:
  4280                           	opt stack 17
  4281                           
  4282                           ;memory.c: 123: block_t* l_curr = s_blocks;
  4283                           
  4284                           ;incstack = 0
  4285  000728  C0CE  F253         	movff	_s_blocks,__merge_free_blocks@l_curr
  4286  00072C  C0CF  F254         	movff	_s_blocks+1,__merge_free_blocks@l_curr+1
  4287                           
  4288                           ;memory.c: 126: while( l_curr ) {
  4289  000730  D05F               	goto	i1l4366
  4290  000732                     i1l4350:
  4291                           
  4292                           ;memory.c: 128: block_t* l_next = l_curr->next;
  4293  000732  0102               	movlb	2	; () banked
  4294  000734  EE20 F002          	lfsr	2,2
  4295  000738  5153               	movf	__merge_free_blocks@l_curr& (0+255),w,b
  4296  00073A  26D9               	addwf	fsr2l,f,c
  4297  00073C  5154               	movf	(__merge_free_blocks@l_curr+1)& (0+255),w,b
  4298  00073E  22DA               	addwfc	fsr2h,f,c
  4299  000740  CFDE F251          	movff	postinc2,__merge_free_blocks@l_next
  4300  000744  CFDD F252          	movff	postdec2,__merge_free_blocks@l_next+1
  4301                           
  4302                           ; BSR set to: 2
  4303                           ;memory.c: 130: if( l_curr && l_curr->free_block && l_next && l_next->free_block ) {
  4304  000748  0102               	movlb	2	; () banked
  4305  00074A  5153               	movf	__merge_free_blocks@l_curr& (0+255),w,b
  4306  00074C  0102               	movlb	2	; () banked
  4307  00074E  1154               	iorwf	(__merge_free_blocks@l_curr+1)& (0+255),w,b
  4308  000750  B4D8               	btfsc	status,2,c
  4309  000752  D043               	goto	i1l4364
  4310                           
  4311                           ; BSR set to: 2
  4312  000754  0102               	movlb	2	; () banked
  4313  000756  EE20 F004          	lfsr	2,4
  4314  00075A  5153               	movf	__merge_free_blocks@l_curr& (0+255),w,b
  4315  00075C  26D9               	addwf	fsr2l,f,c
  4316  00075E  5154               	movf	(__merge_free_blocks@l_curr+1)& (0+255),w,b
  4317  000760  22DA               	addwfc	fsr2h,f,c
  4318  000762  50DF               	movf	indf2,w,c
  4319  000764  B4D8               	btfsc	status,2,c
  4320  000766  D039               	goto	i1l4364
  4321                           
  4322                           ; BSR set to: 2
  4323  000768  0102               	movlb	2	; () banked
  4324  00076A  5151               	movf	__merge_free_blocks@l_next& (0+255),w,b
  4325  00076C  0102               	movlb	2	; () banked
  4326  00076E  1152               	iorwf	(__merge_free_blocks@l_next+1)& (0+255),w,b
  4327  000770  B4D8               	btfsc	status,2,c
  4328  000772  D033               	goto	i1l4364
  4329                           
  4330                           ; BSR set to: 2
  4331  000774  0102               	movlb	2	; () banked
  4332  000776  EE20 F004          	lfsr	2,4
  4333  00077A  5151               	movf	__merge_free_blocks@l_next& (0+255),w,b
  4334  00077C  26D9               	addwf	fsr2l,f,c
  4335  00077E  5152               	movf	(__merge_free_blocks@l_next+1)& (0+255),w,b
  4336  000780  22DA               	addwfc	fsr2h,f,c
  4337  000782  50DF               	movf	indf2,w,c
  4338  000784  B4D8               	btfsc	status,2,c
  4339  000786  D029               	goto	i1l4364
  4340                           
  4341                           ; BSR set to: 2
  4342                           ;memory.c: 132: l_curr->size += sizeof(block_t) + l_next->size;
  4343  000788  C251  FFD9         	movff	__merge_free_blocks@l_next,fsr2l
  4344  00078C  C252  FFDA         	movff	__merge_free_blocks@l_next+1,fsr2h
  4345  000790  CFDE F24F          	movff	postinc2,??__merge_free_blocks
  4346  000794  CFDD F250          	movff	postdec2,??__merge_free_blocks+1
  4347  000798  0E05               	movlw	5
  4348  00079A  0102               	movlb	2	; () banked
  4349  00079C  274F               	addwf	??__merge_free_blocks& (0+255),f,b
  4350  00079E  0E00               	movlw	0
  4351  0007A0  2350               	addwfc	(??__merge_free_blocks+1)& (0+255),f,b
  4352  0007A2  C253  FFD9         	movff	__merge_free_blocks@l_curr,fsr2l
  4353  0007A6  C254  FFDA         	movff	__merge_free_blocks@l_curr+1,fsr2h
  4354  0007AA  0102               	movlb	2	; () banked
  4355  0007AC  514F               	movf	??__merge_free_blocks& (0+255),w,b
  4356  0007AE  26DE               	addwf	postinc2,f,c
  4357  0007B0  5150               	movf	(??__merge_free_blocks+1)& (0+255),w,b
  4358  0007B2  22DD               	addwfc	postdec2,f,c
  4359                           
  4360                           ; BSR set to: 2
  4361                           ;memory.c: 134: l_curr->next = l_next->next;
  4362  0007B4  0102               	movlb	2	; () banked
  4363  0007B6  EE20 F002          	lfsr	2,2
  4364  0007BA  5151               	movf	__merge_free_blocks@l_next& (0+255),w,b
  4365  0007BC  26D9               	addwf	fsr2l,f,c
  4366  0007BE  5152               	movf	(__merge_free_blocks@l_next+1)& (0+255),w,b
  4367  0007C0  22DA               	addwfc	fsr2h,f,c
  4368  0007C2  0102               	movlb	2	; () banked
  4369  0007C4  EE10 F002          	lfsr	1,2
  4370  0007C8  5153               	movf	__merge_free_blocks@l_curr& (0+255),w,b
  4371  0007CA  26E1               	addwf	fsr1l,f,c
  4372  0007CC  5154               	movf	(__merge_free_blocks@l_curr+1)& (0+255),w,b
  4373  0007CE  22E2               	addwfc	fsr1h,f,c
  4374  0007D0  CFDE FFE6          	movff	postinc2,postinc1
  4375  0007D4  CFDD FFE5          	movff	postdec2,postdec1
  4376                           
  4377                           ;memory.c: 137: } else {
  4378  0007D8  D00B               	goto	i1l4366
  4379  0007DA                     i1l4364:
  4380                           
  4381                           ; BSR set to: 2
  4382                           ;memory.c: 139: l_curr = l_curr->next;
  4383  0007DA  0102               	movlb	2	; () banked
  4384  0007DC  EE20 F002          	lfsr	2,2
  4385  0007E0  5153               	movf	__merge_free_blocks@l_curr& (0+255),w,b
  4386  0007E2  26D9               	addwf	fsr2l,f,c
  4387  0007E4  5154               	movf	(__merge_free_blocks@l_curr+1)& (0+255),w,b
  4388  0007E6  22DA               	addwfc	fsr2h,f,c
  4389  0007E8  CFDE F253          	movff	postinc2,__merge_free_blocks@l_curr
  4390  0007EC  CFDD F254          	movff	postdec2,__merge_free_blocks@l_curr+1
  4391  0007F0                     i1l4366:
  4392  0007F0  0102               	movlb	2	; () banked
  4393  0007F2  5153               	movf	__merge_free_blocks@l_curr& (0+255),w,b
  4394  0007F4  0102               	movlb	2	; () banked
  4395  0007F6  1154               	iorwf	(__merge_free_blocks@l_curr+1)& (0+255),w,b
  4396  0007F8  B4D8               	btfsc	status,2,c
  4397  0007FA  0012               	return	
  4398  0007FC  D79A               	goto	i1l4350
  4399  0007FE                     __end_of__merge_free_blocks:
  4400                           	opt stack 0
  4401                           tosu	equ	0xFFF
  4402                           tosh	equ	0xFFE
  4403                           tosl	equ	0xFFD
  4404                           stkptr	equ	0xFFC
  4405                           pclath	equ	0xFFA
  4406                           tblptru	equ	0xFF8
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           intcon2	equ	0xFF1
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           postinc1	equ	0xFE6
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           bsr	equ	0xFE0
  4418                           indf2	equ	0xFDF
  4419                           postinc2	equ	0xFDE
  4420                           postdec2	equ	0xFDD
  4421                           plusw2	equ	0xFDB
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _linked_list_get_size *****************
  4427 ;; Defined at:
  4428 ;;		line 162 in file "kernel/linked_list.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  a_head          2   79[BANK2 ] PTR struct linked_list_s
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  l_head_data     2   81[BANK2 ] PTR struct linked_list_h
  4433 ;;		 -> s_heap(512), idle(41), dispatcher(128), NULL(0), 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      unsigned char 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4443 ;;      Params:         0       0       0       2       0       0       0
  4444 ;;      Locals:         0       0       0       2       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0
  4446 ;;      Totals:         0       0       0       4       0       0       0
  4447 ;;Total ram usage:        4 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    5
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_semaphore_signal
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text28
  4458  0010FE                     __ptext28:
  4459                           	opt stack 0
  4460  0010FE                     _linked_list_get_size:
  4461                           	opt stack 19
  4462                           
  4463                           ;linked_list.c: 163: linked_list_head_data_t* l_head_data = (linked_list_head_data_t*)(a
      +                          _head->data);
  4464                           
  4465                           ; BSR set to: 2
  4466                           ;incstack = 0
  4467  0010FE  0102               	movlb	2	; () banked
  4468  001100  EE20 F002          	lfsr	2,2
  4469  001104  514F               	movf	linked_list_get_size@a_head& (0+255),w,b
  4470  001106  26D9               	addwf	fsr2l,f,c
  4471  001108  5150               	movf	(linked_list_get_size@a_head+1)& (0+255),w,b
  4472  00110A  22DA               	addwfc	fsr2h,f,c
  4473  00110C  CFDE F251          	movff	postinc2,linked_list_get_size@l_head_data
  4474  001110  CFDD F252          	movff	postdec2,linked_list_get_size@l_head_data+1
  4475                           
  4476                           ; BSR set to: 2
  4477                           ;linked_list.c: 164: return l_head_data->size;
  4478  001114  C251  FFD9         	movff	linked_list_get_size@l_head_data,fsr2l
  4479  001118  C252  FFDA         	movff	linked_list_get_size@l_head_data+1,fsr2h
  4480  00111C  50DF               	movf	indf2,w,c
  4481  00111E  0012               	return	
  4482  001120                     __end_of_linked_list_get_size:
  4483                           	opt stack 0
  4484                           tosu	equ	0xFFF
  4485                           tosh	equ	0xFFE
  4486                           tosl	equ	0xFFD
  4487                           stkptr	equ	0xFFC
  4488                           pclath	equ	0xFFA
  4489                           tblptru	equ	0xFF8
  4490                           prodh	equ	0xFF4
  4491                           prodl	equ	0xFF3
  4492                           intcon	equ	0xFF2
  4493                           intcon2	equ	0xFF1
  4494                           postinc0	equ	0xFEE
  4495                           wreg	equ	0xFE8
  4496                           postinc1	equ	0xFE6
  4497                           postdec1	equ	0xFE5
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           bsr	equ	0xFE0
  4501                           indf2	equ	0xFDF
  4502                           postinc2	equ	0xFDE
  4503                           postdec2	equ	0xFDD
  4504                           plusw2	equ	0xFDB
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _linked_list_get_first *****************
  4510 ;; Defined at:
  4511 ;;		line 158 in file "kernel/linked_list.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  a_head          2   79[BANK2 ] PTR struct linked_list_s
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  2   79[BANK2 ] PTR void 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4525 ;;      Params:         0       0       0       2       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0
  4528 ;;      Totals:         0       0       0       2       0       0       0
  4529 ;;Total ram usage:        2 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    5
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_semaphore_signal
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text29
  4540  001120                     __ptext29:
  4541                           	opt stack 0
  4542  001120                     _linked_list_get_first:
  4543                           	opt stack 19
  4544                           
  4545                           ;linked_list.c: 159: return a_head->next->data;
  4546                           
  4547                           ; BSR set to: 2
  4548                           ;incstack = 0
  4549  001120  C24F  FFD9         	movff	linked_list_get_first@a_head,fsr2l
  4550  001124  C250  FFDA         	movff	linked_list_get_first@a_head+1,fsr2h
  4551  001128  EE10 F002          	lfsr	1,2
  4552  00112C  50DE               	movf	postinc2,w,c
  4553  00112E  26E1               	addwf	fsr1l,f,c
  4554  001130  50DD               	movf	postdec2,w,c
  4555  001132  22E2               	addwfc	fsr1h,f,c
  4556  001134  CFE6 F24F          	movff	postinc1,?_linked_list_get_first
  4557  001138  CFE5 F250          	movff	postdec1,?_linked_list_get_first+1
  4558  00113C  0012               	return	
  4559  00113E                     __end_of_linked_list_get_first:
  4560                           	opt stack 0
  4561                           tosu	equ	0xFFF
  4562                           tosh	equ	0xFFE
  4563                           tosl	equ	0xFFD
  4564                           stkptr	equ	0xFFC
  4565                           pclath	equ	0xFFA
  4566                           tblptru	equ	0xFF8
  4567                           prodh	equ	0xFF4
  4568                           prodl	equ	0xFF3
  4569                           intcon	equ	0xFF2
  4570                           intcon2	equ	0xFF1
  4571                           postinc0	equ	0xFEE
  4572                           wreg	equ	0xFE8
  4573                           postinc1	equ	0xFE6
  4574                           postdec1	equ	0xFE5
  4575                           fsr1h	equ	0xFE2
  4576                           fsr1l	equ	0xFE1
  4577                           bsr	equ	0xFE0
  4578                           indf2	equ	0xFDF
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           plusw2	equ	0xFDB
  4582                           fsr2h	equ	0xFDA
  4583                           fsr2l	equ	0xFD9
  4584                           status	equ	0xFD8
  4585                           
  4586 ;; *************** function _task_3_priority *****************
  4587 ;; Defined at:
  4588 ;;		line 70 in file "main.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  i               2  121[BANK2 ] unsigned int 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4602 ;;      Params:         0       0       0       0       0       0       0
  4603 ;;      Locals:         0       0       0       2       0       0       0
  4604 ;;      Temps:          0       0       0       1       0       0       0
  4605 ;;      Totals:         0       0       0       3       0       0       0
  4606 ;;Total ram usage:        3 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    9
  4609 ;; This function calls:
  4610 ;;		_semaphore_signal
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text30
  4617  000E6A                     __ptext30:
  4618                           	opt stack 0
  4619  000E6A                     _task_3_priority:
  4620                           	opt stack 17
  4621                           
  4622                           ;main.c: 71: TRISDbits.RD2 = 0;
  4623                           
  4624                           ;incstack = 0
  4625  000E6A  9495               	bcf	3989,2,c	;volatile
  4626                           
  4627                           ;main.c: 72: PORTDbits.RD2 = 0;
  4628  000E6C  9483               	bcf	3971,2,c	;volatile
  4629  000E6E                     l4706:
  4630                           
  4631                           ;main.c: 74: PORTDbits.RD2 = !LATDbits.LATD2;
  4632  000E6E  B48C               	btfsc	3980,2,c	;volatile
  4633  000E70  D004               	goto	u433_20
  4634  000E72  0102               	movlb	2	; () banked
  4635  000E74  6B78               	clrf	??_task_3_priority& (0+255),b
  4636  000E76  2B78               	incf	??_task_3_priority& (0+255),f,b
  4637  000E78  D002               	goto	u434_28
  4638  000E7A                     u433_20:
  4639  000E7A  0102               	movlb	2	; () banked
  4640  000E7C  6B78               	clrf	??_task_3_priority& (0+255),b
  4641  000E7E                     u434_28:
  4642  000E7E  0102               	movlb	2	; () banked
  4643  000E80  4778               	rlncf	??_task_3_priority& (0+255),f,b
  4644  000E82  4778               	rlncf	??_task_3_priority& (0+255),f,b
  4645  000E84  5083               	movf	3971,w,c	;volatile
  4646  000E86  0102               	movlb	2	; () banked
  4647  000E88  1978               	xorwf	??_task_3_priority& (0+255),w,b
  4648  000E8A  0BFB               	andlw	-5
  4649  000E8C  1978               	xorwf	??_task_3_priority& (0+255),w,b
  4650  000E8E  6E83               	movwf	3971,c	;volatile
  4651                           
  4652                           ; BSR set to: 2
  4653                           ;main.c: 75: for( uint16_t i = 0; i < 60000; i++ ) { __nop(); }
  4654  000E90  0E00               	movlw	0
  4655  000E92  0102               	movlb	2	; () banked
  4656  000E94  6F7A               	movwf	(task_3_priority@i+1)& (0+255),b
  4657  000E96  0E00               	movlw	0
  4658  000E98  6F79               	movwf	task_3_priority@i& (0+255),b
  4659  000E9A                     l4710:
  4660                           
  4661                           ; BSR set to: 2
  4662  000E9A  0E60               	movlw	96
  4663  000E9C  0102               	movlb	2	; () banked
  4664  000E9E  5D79               	subwf	task_3_priority@i& (0+255),w,b
  4665  000EA0  0EEA               	movlw	234
  4666  000EA2  0102               	movlb	2	; () banked
  4667  000EA4  597A               	subwfb	(task_3_priority@i+1)& (0+255),w,b
  4668  000EA6  B0D8               	btfsc	status,0,c
  4669  000EA8  D005               	goto	l4718
  4670                           
  4671                           ; BSR set to: 2
  4672                           
  4673                           ; BSR set to: 2
  4674  000EAA  F000               	nop	
  4675  000EAC  0102               	movlb	2	; () banked
  4676  000EAE  4B79               	infsnz	task_3_priority@i& (0+255),f,b
  4677  000EB0  2B7A               	incf	(task_3_priority@i+1)& (0+255),f,b
  4678  000EB2  D7F3               	goto	l4710
  4679  000EB4                     l4718:
  4680                           
  4681                           ; BSR set to: 2
  4682                           ;main.c: 76: semaphore_signal( &g_sem_2 );
  4683  000EB4  0ED4               	movlw	low _g_sem_2
  4684  000EB6  0102               	movlb	2	; () banked
  4685  000EB8  6F73               	movwf	semaphore_signal@handle& (0+255),b
  4686  000EBA  0E00               	movlw	high _g_sem_2
  4687  000EBC  0102               	movlb	2	; () banked
  4688  000EBE  6F74               	movwf	(semaphore_signal@handle+1)& (0+255),b
  4689  000EC0  EC10  F006         	call	_semaphore_signal	;wreg free
  4690  000EC4  D7D4               	goto	l4706
  4691  000EC6                     __end_of_task_3_priority:
  4692                           	opt stack 0
  4693                           tosu	equ	0xFFF
  4694                           tosh	equ	0xFFE
  4695                           tosl	equ	0xFFD
  4696                           stkptr	equ	0xFFC
  4697                           pclath	equ	0xFFA
  4698                           tblptru	equ	0xFF8
  4699                           prodh	equ	0xFF4
  4700                           prodl	equ	0xFF3
  4701                           intcon	equ	0xFF2
  4702                           intcon2	equ	0xFF1
  4703                           postinc0	equ	0xFEE
  4704                           wreg	equ	0xFE8
  4705                           postinc1	equ	0xFE6
  4706                           postdec1	equ	0xFE5
  4707                           fsr1h	equ	0xFE2
  4708                           fsr1l	equ	0xFE1
  4709                           bsr	equ	0xFE0
  4710                           indf2	equ	0xFDF
  4711                           postinc2	equ	0xFDE
  4712                           postdec2	equ	0xFDD
  4713                           plusw2	equ	0xFDB
  4714                           fsr2h	equ	0xFDA
  4715                           fsr2l	equ	0xFD9
  4716                           status	equ	0xFD8
  4717                           
  4718 ;; *************** function _task_idle_callback *****************
  4719 ;; Defined at:
  4720 ;;		line 12 in file "kernel/dispatcher.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		None
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4734 ;;      Params:         0       0       0       0       0       0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0
  4737 ;;      Totals:         0       0       0       0       0       0       0
  4738 ;;Total ram usage:        0 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    5
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_dispatcher_init
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text31
  4749  0011E8                     __ptext31:
  4750                           	opt stack 0
  4751  0011E8                     _task_idle_callback:
  4752                           	opt stack 21
  4753  0011E8                     l163:
  4754  0011E8  F000               	nop		;# 
  4755  0011EA  D7FE               	goto	l163
  4756  0011EC                     __end_of_task_idle_callback:
  4757                           	opt stack 0
  4758                           tosu	equ	0xFFF
  4759                           tosh	equ	0xFFE
  4760                           tosl	equ	0xFFD
  4761                           stkptr	equ	0xFFC
  4762                           pclath	equ	0xFFA
  4763                           tblptru	equ	0xFF8
  4764                           prodh	equ	0xFF4
  4765                           prodl	equ	0xFF3
  4766                           intcon	equ	0xFF2
  4767                           intcon2	equ	0xFF1
  4768                           postinc0	equ	0xFEE
  4769                           wreg	equ	0xFE8
  4770                           postinc1	equ	0xFE6
  4771                           postdec1	equ	0xFE5
  4772                           fsr1h	equ	0xFE2
  4773                           fsr1l	equ	0xFE1
  4774                           bsr	equ	0xFE0
  4775                           indf2	equ	0xFDF
  4776                           postinc2	equ	0xFDE
  4777                           postdec2	equ	0xFDD
  4778                           plusw2	equ	0xFDB
  4779                           fsr2h	equ	0xFDA
  4780                           fsr2l	equ	0xFD9
  4781                           status	equ	0xFD8
  4782                           
  4783 ;; *************** function _task_block *****************
  4784 ;; Defined at:
  4785 ;;		line 32 in file "kernel/task.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  handle          2  123[BANK2 ] PTR struct task_s
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		None
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4799 ;;      Params:         0       0       0       2       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0
  4802 ;;      Totals:         0       0       0       2       0       0       0
  4803 ;;Total ram usage:        2 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    5
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		Interrupt level 1
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text32
  4814  0011EC                     __ptext32:
  4815                           	opt stack 0
  4816  0011EC                     _task_block:
  4817                           	opt stack 21
  4818                           
  4819                           ;incstack = 0
  4820  0011EC  0012               	return		;funcret
  4821  0011EE                     __end_of_task_block:
  4822                           	opt stack 0
  4823                           tosu	equ	0xFFF
  4824                           tosh	equ	0xFFE
  4825                           tosl	equ	0xFFD
  4826                           stkptr	equ	0xFFC
  4827                           pclath	equ	0xFFA
  4828                           tblptru	equ	0xFF8
  4829                           prodh	equ	0xFF4
  4830                           prodl	equ	0xFF3
  4831                           intcon	equ	0xFF2
  4832                           intcon2	equ	0xFF1
  4833                           postinc0	equ	0xFEE
  4834                           wreg	equ	0xFE8
  4835                           postinc1	equ	0xFE6
  4836                           postdec1	equ	0xFE5
  4837                           fsr1h	equ	0xFE2
  4838                           fsr1l	equ	0xFE1
  4839                           bsr	equ	0xFE0
  4840                           indf2	equ	0xFDF
  4841                           postinc2	equ	0xFDE
  4842                           postdec2	equ	0xFDD
  4843                           plusw2	equ	0xFDB
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _global_isr *****************
  4849 ;; Defined at:
  4850 ;;		line 21 in file "kernel/interrutps.h"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  i               1   48[COMRAM] unsigned char 
  4855 ;;  i               1   41[COMRAM] unsigned char 
  4856 ;;  n_context       2   53[COMRAM] PTR struct task_context_
  4857 ;;		 -> dispatcher.context(34), idle.context(34), idle(41), dispatcher(128), 
  4858 ;;  n_stack         2   49[COMRAM] PTR struct task_context_
  4859 ;;		 -> dispatcher.stack(31), idle.stack(31), dispatcher.context.stack(31), idle.context.stack(31), 
  4860 ;;		 -> global_isr@n_context(2), 
  4861 ;;  n_task          2   44[COMRAM] PTR struct task_s
  4862 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  4863 ;;  p_context       2   51[COMRAM] PTR struct task_context_
  4864 ;;		 -> dispatcher.context(34), idle.context(34), idle(41), dispatcher(128), 
  4865 ;;  p_stack         2   46[COMRAM] PTR struct task_context_
  4866 ;;		 -> dispatcher.stack(31), idle.stack(31), dispatcher.context.stack(31), idle.context.stack(31), 
  4867 ;;		 -> global_isr@p_context(2), 
  4868 ;;  p_task          2   42[COMRAM] PTR struct task_s
  4869 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4879 ;;      Params:         0       0       0       0       0       0       0
  4880 ;;      Locals:        14       0       0       0       0       0       0
  4881 ;;      Temps:         21       0       0       0       0       0       0
  4882 ;;      Totals:        35       0       0       0       0       0       0
  4883 ;;Total ram usage:       35 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    4
  4886 ;; This function calls:
  4887 ;;		_timer0_isr
  4888 ;; This function is called by:
  4889 ;;		Interrupt level 2
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	intcode
  4894  000008                     __pintcode:
  4895                           	opt stack 0
  4896  000008                     _global_isr:
  4897                           	opt stack 17
  4898                           
  4899                           ;incstack = 0
  4900  000008  823D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4901  00000A  CFFA F01C          	movff	pclath,??_global_isr+7
  4902  00000E  CFFB F01D          	movff	pclatu,??_global_isr+8
  4903  000012  ED0D  F000         	call	int_func,f	;refresh shadow registers
  4904                           tosu	equ	0xFFF
  4905                           tosh	equ	0xFFE
  4906                           tosl	equ	0xFFD
  4907                           stkptr	equ	0xFFC
  4908                           pclatu	equ	0xFFB
  4909                           pclath	equ	0xFFA
  4910                           tblptru	equ	0xFF8
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           intcon2	equ	0xFF1
  4915                           postinc0	equ	0xFEE
  4916                           wreg	equ	0xFE8
  4917                           postinc1	equ	0xFE6
  4918                           postdec1	equ	0xFE5
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           bsr	equ	0xFE0
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           plusw2	equ	0xFDB
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930                           	psect	intcode_body
  4931  00001A                     __pintcode_body:
  4932                           	opt stack 17
  4933  00001A                     int_func:
  4934                           	opt stack 17
  4935  00001A  0006               	pop		; remove dummy address from shadow register refresh
  4936  00001C  CFE9 F01E          	movff	fsr0l,??_global_isr+9
  4937  000020  CFEA F01F          	movff	fsr0h,??_global_isr+10
  4938  000024  CFE1 F020          	movff	fsr1l,??_global_isr+11
  4939  000028  CFE2 F021          	movff	fsr1h,??_global_isr+12
  4940  00002C  CFD9 F022          	movff	fsr2l,??_global_isr+13
  4941  000030  CFDA F023          	movff	fsr2h,??_global_isr+14
  4942  000034  CFF3 F024          	movff	prodl,??_global_isr+15
  4943  000038  CFF4 F025          	movff	prodh,??_global_isr+16
  4944  00003C  CFF6 F026          	movff	tblptrl,??_global_isr+17
  4945  000040  CFF7 F027          	movff	tblptrh,??_global_isr+18
  4946  000044  CFF8 F028          	movff	tblptru,??_global_isr+19
  4947  000048  CFF5 F029          	movff	tablat,??_global_isr+20
  4948                           
  4949                           ;interrutps.h: 22: _WREG = WREG;
  4950  00004C  6E3A               	movwf	__WREG,c
  4951                           
  4952                           ;interrutps.h: 23: _BSR = BSR;
  4953  00004E  CFE0 F038          	movff	bsr,__BSR	;volatile
  4954                           
  4955                           ;interrutps.h: 24: _STATUS = STATUS;
  4956  000052  CFD8 F039          	movff	status,__STATUS	;volatile
  4957                           
  4958                           ;interrutps.h: 26: if( INTCONbits.TMR0IE && INTCONbits.TMR0IF ) {
  4959  000056  BAF2               	btfsc	intcon,5,c	;volatile
  4960  000058  A4F2               	btfss	intcon,2,c	;volatile
  4961  00005A  D0DE               	goto	i2l113
  4962                           
  4963                           ;interrutps.h: 29: task_t* p_task = (dispatcher.running);
  4964                           
  4965                           ;interrutps.h: 28: do {
  4966  00005C  C17C  F02B         	movff	_dispatcher+124,global_isr@p_task
  4967  000060  C17D  F02C         	movff	_dispatcher+125,global_isr@p_task+1
  4968                           
  4969                           ;interrutps.h: 30: if( p_task == ((void*)0) ) { break; }
  4970  000064  502B               	movf	global_isr@p_task,w,c
  4971  000066  102C               	iorwf	global_isr@p_task+1,w,c
  4972  000068  B4D8               	btfsc	status,2,c
  4973  00006A  D05C               	goto	i2l4756
  4974                           
  4975                           ;interrutps.h: 31: task_context_t* p_context = &(p_task->context);
  4976  00006C  0E07               	movlw	7
  4977  00006E  242B               	addwf	global_isr@p_task,w,c
  4978  000070  6E34               	movwf	global_isr@p_context,c
  4979  000072  0E00               	movlw	0
  4980  000074  202C               	addwfc	global_isr@p_task+1,w,c
  4981  000076  6E35               	movwf	global_isr@p_context+1,c
  4982                           
  4983                           ;interrutps.h: 32: p_context->work = _WREG;
  4984  000078  C034  FFD9         	movff	global_isr@p_context,fsr2l
  4985  00007C  C035  FFDA         	movff	global_isr@p_context+1,fsr2h
  4986  000080  C03A  FFDF         	movff	__WREG,indf2
  4987                           
  4988                           ;interrutps.h: 33: p_context->bsr = _BSR;
  4989  000084  EE20 F001          	lfsr	2,1
  4990  000088  5034               	movf	global_isr@p_context,w,c
  4991  00008A  26D9               	addwf	fsr2l,f,c
  4992  00008C  5035               	movf	global_isr@p_context+1,w,c
  4993  00008E  22DA               	addwfc	fsr2h,f,c
  4994  000090  C038  FFDF         	movff	__BSR,indf2
  4995                           
  4996                           ;interrutps.h: 34: p_context->status = _STATUS;
  4997  000094  EE20 F002          	lfsr	2,2
  4998  000098  5034               	movf	global_isr@p_context,w,c
  4999  00009A  26D9               	addwf	fsr2l,f,c
  5000  00009C  5035               	movf	global_isr@p_context+1,w,c
  5001  00009E  22DA               	addwfc	fsr2h,f,c
  5002  0000A0  C039  FFDF         	movff	__STATUS,indf2
  5003                           
  5004                           ;interrutps.h: 35: task_context_stack_t* p_stack = &p_context->stack;
  5005  0000A4  0E03               	movlw	3
  5006  0000A6  2434               	addwf	global_isr@p_context,w,c
  5007  0000A8  6E2F               	movwf	global_isr@p_stack,c
  5008  0000AA  0E00               	movlw	0
  5009  0000AC  2035               	addwfc	global_isr@p_context+1,w,c
  5010  0000AE  6E30               	movwf	global_isr@p_stack+1,c
  5011                           
  5012                           ;interrutps.h: 36: while( (STKPTR & 0b11111) > 0 ) {
  5013  0000B0  D033               	goto	i2l4754
  5014  0000B2                     i2l4750:
  5015                           
  5016                           ;interrutps.h: 37: uint8_t i = p_stack->size++;
  5017  0000B2  EE20 F01E          	lfsr	2,30
  5018  0000B6  502F               	movf	global_isr@p_stack,w,c
  5019  0000B8  26D9               	addwf	fsr2l,f,c
  5020  0000BA  5030               	movf	global_isr@p_stack+1,w,c
  5021  0000BC  22DA               	addwfc	fsr2h,f,c
  5022  0000BE  50DF               	movf	indf2,w,c
  5023  0000C0  6E2A               	movwf	global_isr@i,c
  5024  0000C2  EE20 F01E          	lfsr	2,30
  5025  0000C6  502F               	movf	global_isr@p_stack,w,c
  5026  0000C8  26D9               	addwf	fsr2l,f,c
  5027  0000CA  5030               	movf	global_isr@p_stack+1,w,c
  5028  0000CC  22DA               	addwfc	fsr2h,f,c
  5029  0000CE  2ADF               	incf	indf2,f,c
  5030                           
  5031                           ;interrutps.h: 38: p_stack->values[i] = (TOSU << 16) | (TOSH << 8) | TOSL;
  5032  0000D0  50FE               	movf	tosh,w,c	;volatile
  5033  0000D2  6E16               	movwf	(??_global_isr+1)& (0+255),c
  5034  0000D4  6A15               	clrf	??_global_isr& (0+255),c
  5035  0000D6  50FF               	movf	tosu,w,c	;volatile
  5036  0000D8  6E17               	movwf	(??_global_isr+2)& (0+255),c
  5037  0000DA  6A18               	clrf	(??_global_isr+3)& (0+255),c
  5038  0000DC  5015               	movf	??_global_isr,w,c
  5039  0000DE  1217               	iorwf	??_global_isr+2,f,c
  5040  0000E0  5016               	movf	??_global_isr+1,w,c
  5041  0000E2  1218               	iorwf	??_global_isr+3,f,c
  5042  0000E4  50FD               	movf	tosl,w,c	;volatile
  5043  0000E6  1217               	iorwf	??_global_isr+2,f,c
  5044  0000E8  0E00               	movlw	0
  5045  0000EA  1218               	iorwf	??_global_isr+3,f,c
  5046  0000EC  C017  F019         	movff	??_global_isr+2,??_global_isr+4
  5047  0000F0  C018  F01A         	movff	??_global_isr+3,??_global_isr+5
  5048  0000F4  6A1B               	clrf	(??_global_isr+6)& (0+255),c
  5049  0000F6  BE1A               	btfsc	(??_global_isr+5)& (0+255),7,c
  5050  0000F8  681B               	setf	(??_global_isr+6)& (0+255),c
  5051  0000FA  502A               	movf	global_isr@i,w,c
  5052  0000FC  0D03               	mullw	3
  5053  0000FE  50F3               	movf	prodl,w,c
  5054  000100  242F               	addwf	global_isr@p_stack,w,c
  5055  000102  6ED9               	movwf	fsr2l,c
  5056  000104  50F4               	movf	prodh,w,c
  5057  000106  2030               	addwfc	global_isr@p_stack+1,w,c
  5058  000108  6EDA               	movwf	fsr2h,c
  5059  00010A  C019  FFDE         	movff	??_global_isr+4,postinc2
  5060  00010E  C01A  FFDE         	movff	??_global_isr+5,postinc2
  5061  000112  C01B  FFDE         	movff	??_global_isr+6,postinc2
  5062  000116  0006               	pop		;# 
  5063  000118                     i2l4754:
  5064  000118  CFFC F015          	movff	stkptr,??_global_isr	;volatile
  5065  00011C  0E1F               	movlw	31
  5066  00011E  1615               	andwf	??_global_isr,f,c
  5067  000120  A4D8               	btfss	status,2,c
  5068  000122  D7C7               	goto	i2l4750
  5069  000124                     i2l4756:
  5070                           
  5071                           ;interrutps.h: 40: }
  5072                           ;interrutps.h: 41: }while(0);
  5073                           ;interrutps.h: 43: timer0_isr();
  5074  000124  EC6D  F008         	call	_timer0_isr	;wreg free
  5075                           
  5076                           ;interrutps.h: 46: task_t* n_task = (dispatcher.running);
  5077                           
  5078                           ;interrutps.h: 45: do {
  5079  000128  C17C  F02D         	movff	_dispatcher+124,global_isr@n_task
  5080  00012C  C17D  F02E         	movff	_dispatcher+125,global_isr@n_task+1
  5081                           
  5082                           ;interrutps.h: 47: if( n_task == ((void*)0) ) { break; }
  5083  000130  502D               	movf	global_isr@n_task,w,c
  5084  000132  102E               	iorwf	global_isr@n_task+1,w,c
  5085  000134  B4D8               	btfsc	status,2,c
  5086  000136  D070               	goto	i2l113
  5087                           
  5088                           ;interrutps.h: 48: task_context_t* n_context = &(n_task->context);
  5089  000138  0E07               	movlw	7
  5090  00013A  242D               	addwf	global_isr@n_task,w,c
  5091  00013C  6E36               	movwf	global_isr@n_context,c
  5092  00013E  0E00               	movlw	0
  5093  000140  202E               	addwfc	global_isr@n_task+1,w,c
  5094  000142  6E37               	movwf	global_isr@n_context+1,c
  5095                           
  5096                           ;interrutps.h: 49: _WREG = n_context->work;
  5097  000144  C036  FFD9         	movff	global_isr@n_context,fsr2l
  5098  000148  C037  FFDA         	movff	global_isr@n_context+1,fsr2h
  5099  00014C  50DF               	movf	indf2,w,c
  5100  00014E  6E3A               	movwf	__WREG,c
  5101                           
  5102                           ;interrutps.h: 50: _BSR = n_context->bsr;
  5103  000150  EE20 F001          	lfsr	2,1
  5104  000154  5036               	movf	global_isr@n_context,w,c
  5105  000156  26D9               	addwf	fsr2l,f,c
  5106  000158  5037               	movf	global_isr@n_context+1,w,c
  5107  00015A  22DA               	addwfc	fsr2h,f,c
  5108  00015C  50DF               	movf	indf2,w,c
  5109  00015E  6E38               	movwf	__BSR,c
  5110                           
  5111                           ;interrutps.h: 51: _STATUS = n_context->status;
  5112  000160  EE20 F002          	lfsr	2,2
  5113  000164  5036               	movf	global_isr@n_context,w,c
  5114  000166  26D9               	addwf	fsr2l,f,c
  5115  000168  5037               	movf	global_isr@n_context+1,w,c
  5116  00016A  22DA               	addwfc	fsr2h,f,c
  5117  00016C  50DF               	movf	indf2,w,c
  5118  00016E  6E39               	movwf	__STATUS,c
  5119                           
  5120                           ;interrutps.h: 52: task_context_stack_t* n_stack = &n_context->stack;
  5121  000170  0E03               	movlw	3
  5122  000172  2436               	addwf	global_isr@n_context,w,c
  5123  000174  6E32               	movwf	global_isr@n_stack,c
  5124  000176  0E00               	movlw	0
  5125  000178  2037               	addwfc	global_isr@n_context+1,w,c
  5126  00017A  6E33               	movwf	global_isr@n_stack+1,c
  5127                           
  5128                           ;interrutps.h: 53: while( n_stack->size > 0 ) {
  5129  00017C  D044               	goto	i2l4782
  5130  00017E                     i2l4774:
  5131                           
  5132                           ;interrutps.h: 54: uint8_t i = --n_stack->size;
  5133  00017E  EE20 F01E          	lfsr	2,30
  5134  000182  5032               	movf	global_isr@n_stack,w,c
  5135  000184  26D9               	addwf	fsr2l,f,c
  5136  000186  5033               	movf	global_isr@n_stack+1,w,c
  5137  000188  22DA               	addwfc	fsr2h,f,c
  5138  00018A  06DF               	decf	indf2,f,c
  5139  00018C  50DF               	movf	indf2,w,c
  5140  00018E  6E31               	movwf	global_isr@i_609,c
  5141  000190  0005               	push		;# 
  5142                           
  5143                           ;interrutps.h: 56: TOSU = n_stack->values[i] >> 16;
  5144  000192  0E10               	movlw	16
  5145  000194  6E15               	movwf	??_global_isr& (0+255),c
  5146  000196  5031               	movf	global_isr@i_609,w,c
  5147  000198  0D03               	mullw	3
  5148  00019A  50F3               	movf	prodl,w,c
  5149  00019C  2432               	addwf	global_isr@n_stack,w,c
  5150  00019E  6ED9               	movwf	fsr2l,c
  5151  0001A0  50F4               	movf	prodh,w,c
  5152  0001A2  2033               	addwfc	global_isr@n_stack+1,w,c
  5153  0001A4  6EDA               	movwf	fsr2h,c
  5154  0001A6  CFDE F016          	movff	postinc2,??_global_isr+1
  5155  0001AA  CFDE F017          	movff	postinc2,??_global_isr+2
  5156  0001AE  CFDE F018          	movff	postinc2,??_global_isr+3
  5157  0001B2  2815               	incf	??_global_isr,w,c
  5158  0001B4  6E19               	movwf	(??_global_isr+4)& (0+255),c
  5159  0001B6  D004               	goto	i2u442_40
  5160  0001B8                     i2u442_45:
  5161  0001B8  90D8               	bcf	status,0,c
  5162  0001BA  3218               	rrcf	??_global_isr+3,f,c
  5163  0001BC  3217               	rrcf	??_global_isr+2,f,c
  5164  0001BE  3216               	rrcf	??_global_isr+1,f,c
  5165  0001C0                     i2u442_40:
  5166  0001C0  2E19               	decfsz	(??_global_isr+4)& (0+255),f,c
  5167  0001C2  D7FA               	goto	i2u442_45
  5168  0001C4  5016               	movf	??_global_isr+1,w,c
  5169  0001C6  6EFF               	movwf	tosu,c	;volatile
  5170                           
  5171                           ;interrutps.h: 57: TOSH = n_stack->values[i] >> 8;
  5172  0001C8  5031               	movf	global_isr@i_609,w,c
  5173  0001CA  0D03               	mullw	3
  5174  0001CC  50F3               	movf	prodl,w,c
  5175  0001CE  2432               	addwf	global_isr@n_stack,w,c
  5176  0001D0  6ED9               	movwf	fsr2l,c
  5177  0001D2  50F4               	movf	prodh,w,c
  5178  0001D4  2033               	addwfc	global_isr@n_stack+1,w,c
  5179  0001D6  6EDA               	movwf	fsr2h,c
  5180  0001D8  CFDE F015          	movff	postinc2,??_global_isr
  5181  0001DC  CFDE F016          	movff	postinc2,??_global_isr+1
  5182  0001E0  CFDE F017          	movff	postinc2,??_global_isr+2
  5183  0001E4  C016  F015         	movff	??_global_isr+1,??_global_isr
  5184  0001E8  C017  F016         	movff	??_global_isr+2,??_global_isr+1
  5185  0001EC  6A17               	clrf	??_global_isr+2,c
  5186  0001EE  5015               	movf	??_global_isr,w,c
  5187  0001F0  6EFE               	movwf	tosh,c	;volatile
  5188                           
  5189                           ;interrutps.h: 58: TOSL = n_stack->values[i] >> 0;
  5190  0001F2  5031               	movf	global_isr@i_609,w,c
  5191  0001F4  0D03               	mullw	3
  5192  0001F6  50F3               	movf	prodl,w,c
  5193  0001F8  2432               	addwf	global_isr@n_stack,w,c
  5194  0001FA  6ED9               	movwf	fsr2l,c
  5195  0001FC  50F4               	movf	prodh,w,c
  5196  0001FE  2033               	addwfc	global_isr@n_stack+1,w,c
  5197  000200  6EDA               	movwf	fsr2h,c
  5198  000202  50DF               	movf	indf2,w,c
  5199  000204  6EFD               	movwf	tosl,c	;volatile
  5200  000206                     i2l4782:
  5201  000206  EE20 F01E          	lfsr	2,30
  5202  00020A  5032               	movf	global_isr@n_stack,w,c
  5203  00020C  26D9               	addwf	fsr2l,f,c
  5204  00020E  5033               	movf	global_isr@n_stack+1,w,c
  5205  000210  22DA               	addwfc	fsr2h,f,c
  5206  000212  50DF               	movf	indf2,w,c
  5207  000214  A4D8               	btfss	status,2,c
  5208  000216  D7B3               	goto	i2l4774
  5209  000218                     i2l113:
  5210                           
  5211                           ;interrutps.h: 61: }
  5212                           ;interrutps.h: 62: } while(0);
  5213                           ;interrutps.h: 63: }
  5214                           ;interrutps.h: 64: BSR = _BSR;
  5215  000218  C038  FFE0         	movff	__BSR,bsr	;volatile
  5216                           
  5217                           ;interrutps.h: 65: STATUS = _STATUS;
  5218  00021C  C039  FFD8         	movff	__STATUS,status	;volatile
  5219                           
  5220                           ;interrutps.h: 66: WREG = _WREG;
  5221  000220  503A               	movf	__WREG,w,c
  5222  000222  C029  FFF5         	movff	??_global_isr+20,tablat
  5223  000226  C028  FFF8         	movff	??_global_isr+19,tblptru
  5224  00022A  C027  FFF7         	movff	??_global_isr+18,tblptrh
  5225  00022E  C026  FFF6         	movff	??_global_isr+17,tblptrl
  5226  000232  C025  FFF4         	movff	??_global_isr+16,prodh
  5227  000236  C024  FFF3         	movff	??_global_isr+15,prodl
  5228  00023A  C023  FFDA         	movff	??_global_isr+14,fsr2h
  5229  00023E  C022  FFD9         	movff	??_global_isr+13,fsr2l
  5230  000242  C021  FFE2         	movff	??_global_isr+12,fsr1h
  5231  000246  C020  FFE1         	movff	??_global_isr+11,fsr1l
  5232  00024A  C01F  FFEA         	movff	??_global_isr+10,fsr0h
  5233  00024E  C01E  FFE9         	movff	??_global_isr+9,fsr0l
  5234  000252  C01D  FFFB         	movff	??_global_isr+8,pclatu
  5235  000256  C01C  FFFA         	movff	??_global_isr+7,pclath
  5236  00025A  923D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5237  00025C  0011               	retfie		f
  5238  00025E                     __end_of_global_isr:
  5239                           	opt stack 0
  5240                           tosu	equ	0xFFF
  5241                           tosh	equ	0xFFE
  5242                           tosl	equ	0xFFD
  5243                           stkptr	equ	0xFFC
  5244                           pclatu	equ	0xFFB
  5245                           pclath	equ	0xFFA
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           intcon2	equ	0xFF1
  5254                           postinc0	equ	0xFEE
  5255                           fsr0h	equ	0xFEA
  5256                           fsr0l	equ	0xFE9
  5257                           wreg	equ	0xFE8
  5258                           postinc1	equ	0xFE6
  5259                           postdec1	equ	0xFE5
  5260                           fsr1h	equ	0xFE2
  5261                           fsr1l	equ	0xFE1
  5262                           bsr	equ	0xFE0
  5263                           indf2	equ	0xFDF
  5264                           postinc2	equ	0xFDE
  5265                           postdec2	equ	0xFDD
  5266                           plusw2	equ	0xFDB
  5267                           fsr2h	equ	0xFDA
  5268                           fsr2l	equ	0xFD9
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function _timer0_isr *****************
  5272 ;; Defined at:
  5273 ;;		line 51 in file "kernel/timers.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5287 ;;      Params:         0       0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    3
  5294 ;; This function calls:
  5295 ;;		Absolute function
  5296 ;;		_dispatcher_change_context_isr
  5297 ;;		i2_timer0_reset
  5298 ;; This function is called by:
  5299 ;;		_global_isr
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text34
  5304  0010DA                     __ptext34:
  5305                           	opt stack 0
  5306  0010DA                     _timer0_isr:
  5307                           	opt stack 17
  5308                           
  5309                           ;timers.c: 52: timer0_reset();
  5310                           
  5311                           ;incstack = 0
  5312  0010DA  ECEA  F008         	call	i2_timer0_reset	;wreg free
  5313                           
  5314                           ;timers.c: 54: if( _timer0_callback ) {
  5315  0010DE  503B               	movf	__timer0_callback,w,c
  5316  0010E0  103C               	iorwf	__timer0_callback+1,w,c
  5317  0010E2  B4D8               	btfsc	status,2,c
  5318  0010E4  0012               	return	
  5319                           
  5320                           ;timers.c: 55: _timer0_callback();
  5321  0010E6  D801               	call	i2u421_48
  5322  0010E8  0012               	return	
  5323  0010EA                     i2u421_48:
  5324  0010EA  0005               	push	
  5325  0010EC  6EFA               	movwf	pclath,c
  5326  0010EE  503B               	movf	__timer0_callback,w,c
  5327  0010F0  6EFD               	movwf	tosl,c
  5328  0010F2  503C               	movf	__timer0_callback+1,w,c
  5329  0010F4  6EFE               	movwf	tosh,c
  5330  0010F6  50F8               	movf	tblptru,w,c
  5331  0010F8  6EFF               	movwf	tosu,c
  5332  0010FA  50FA               	movf	pclath,w,c
  5333  0010FC  0012               	return		;indir
  5334  0010FE                     __end_of_timer0_isr:
  5335                           	opt stack 0
  5336                           tosu	equ	0xFFF
  5337                           tosh	equ	0xFFE
  5338                           tosl	equ	0xFFD
  5339                           stkptr	equ	0xFFC
  5340                           pclatu	equ	0xFFB
  5341                           pclath	equ	0xFFA
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           intcon	equ	0xFF2
  5349                           intcon2	equ	0xFF1
  5350                           postinc0	equ	0xFEE
  5351                           fsr0h	equ	0xFEA
  5352                           fsr0l	equ	0xFE9
  5353                           wreg	equ	0xFE8
  5354                           postinc1	equ	0xFE6
  5355                           postdec1	equ	0xFE5
  5356                           fsr1h	equ	0xFE2
  5357                           fsr1l	equ	0xFE1
  5358                           bsr	equ	0xFE0
  5359                           indf2	equ	0xFDF
  5360                           postinc2	equ	0xFDE
  5361                           postdec2	equ	0xFDD
  5362                           plusw2	equ	0xFDB
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function i2_timer0_reset *****************
  5368 ;; Defined at:
  5369 ;;		line 8 in file "kernel/timers.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		None
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5383 ;;      Params:         0       0       0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_timer0_isr
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text35
  5397  0011D4                     __ptext35:
  5398                           	opt stack 0
  5399  0011D4                     i2_timer0_reset:
  5400                           	opt stack 19
  5401                           
  5402                           ;timers.c: 10: INTCONbits.TMR0IF = 0;
  5403                           
  5404                           ;incstack = 0
  5405  0011D4  94F2               	bcf	intcon,2,c	;volatile
  5406                           
  5407                           ;timers.c: 12: TMR0 = _timer0_delay_us;
  5408  0011D6  C1A9  FFD6         	movff	__timer0_delay_us,4054	;volatile
  5409  0011DA  C1AA  FFD7         	movff	__timer0_delay_us+1,4055	;volatile
  5410  0011DE  0012               	return		;funcret
  5411  0011E0                     __end_ofi2_timer0_reset:
  5412                           	opt stack 0
  5413                           tosu	equ	0xFFF
  5414                           tosh	equ	0xFFE
  5415                           tosl	equ	0xFFD
  5416                           stkptr	equ	0xFFC
  5417                           pclatu	equ	0xFFB
  5418                           pclath	equ	0xFFA
  5419                           tblptru	equ	0xFF8
  5420                           tblptrh	equ	0xFF7
  5421                           tblptrl	equ	0xFF6
  5422                           tablat	equ	0xFF5
  5423                           prodh	equ	0xFF4
  5424                           prodl	equ	0xFF3
  5425                           intcon	equ	0xFF2
  5426                           intcon2	equ	0xFF1
  5427                           postinc0	equ	0xFEE
  5428                           fsr0h	equ	0xFEA
  5429                           fsr0l	equ	0xFE9
  5430                           wreg	equ	0xFE8
  5431                           postinc1	equ	0xFE6
  5432                           postdec1	equ	0xFE5
  5433                           fsr1h	equ	0xFE2
  5434                           fsr1l	equ	0xFE1
  5435                           bsr	equ	0xFE0
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           postdec2	equ	0xFDD
  5439                           plusw2	equ	0xFDB
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444 ;; *************** function _dispatcher_change_context_isr *****************
  5445 ;; Defined at:
  5446 ;;		line 52 in file "kernel/dispatcher.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;		None
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  next            2   18[COMRAM] PTR struct task_s
  5451 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5461 ;;      Params:         0       0       0       0       0       0       0
  5462 ;;      Locals:         2       0       0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0
  5464 ;;      Totals:         2       0       0       0       0       0       0
  5465 ;;Total ram usage:        2 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    2
  5468 ;; This function calls:
  5469 ;;		i2_scheduler_priority
  5470 ;;		i2_task_ready
  5471 ;;		i2_task_running
  5472 ;; This function is called by:
  5473 ;;		_dispatcher_start
  5474 ;;		_timer0_isr
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text36
  5479  000EC6                     __ptext36:
  5480                           	opt stack 0
  5481  000EC6                     _dispatcher_change_context_isr:
  5482                           	opt stack 17
  5483                           
  5484                           ;dispatcher.c: 54: task_t* next = dispatcher.callback();
  5485                           
  5486                           ;incstack = 0
  5487  000EC6  EE21  F07E         	lfsr	2,_dispatcher+126
  5488  000ECA  D801               	call	i2u407_48
  5489  000ECC  D00A               	goto	i2u407_49
  5490  000ECE                     i2u407_48:
  5491  000ECE  0005               	push	
  5492  000ED0  6EFA               	movwf	pclath,c
  5493  000ED2  50DE               	movf	postinc2,w,c
  5494  000ED4  6EFD               	movwf	tosl,c
  5495  000ED6  50DE               	movf	postinc2,w,c
  5496  000ED8  6EFE               	movwf	tosh,c
  5497  000EDA  50F8               	movf	tblptru,w,c
  5498  000EDC  6EFF               	movwf	tosu,c
  5499  000EDE  50FA               	movf	pclath,w,c
  5500  000EE0  0012               	return		;indir
  5501  000EE2                     i2u407_49:
  5502  000EE2  C007  F013         	movff	?i2_scheduler_priority,dispatcher_change_context_isr@next
  5503  000EE6  C008  F014         	movff	?i2_scheduler_priority+1,dispatcher_change_context_isr@next+1
  5504                           
  5505                           ;dispatcher.c: 56: task_ready( dispatcher.running );
  5506  000EEA  C17C  F001         	movff	_dispatcher+124,i2task_ready@handle
  5507  000EEE  C17D  F002         	movff	_dispatcher+125,i2task_ready@handle+1
  5508  000EF2  ECD4  F008         	call	i2_task_ready	;wreg free
  5509                           
  5510                           ;dispatcher.c: 58: dispatcher.running = next;
  5511  000EF6  C013  F17C         	movff	dispatcher_change_context_isr@next,_dispatcher+124
  5512  000EFA  C014  F17D         	movff	dispatcher_change_context_isr@next+1,_dispatcher+125
  5513                           
  5514                           ;dispatcher.c: 60: task_running( dispatcher.running );
  5515  000EFE  C17C  F001         	movff	_dispatcher+124,i2task_running@handle
  5516  000F02  C17D  F002         	movff	_dispatcher+125,i2task_running@handle+1
  5517  000F06  ECCB  F008         	call	i2_task_running	;wreg free
  5518  000F0A  0012               	return		;funcret
  5519  000F0C                     __end_of_dispatcher_change_context_isr:
  5520                           	opt stack 0
  5521                           tosu	equ	0xFFF
  5522                           tosh	equ	0xFFE
  5523                           tosl	equ	0xFFD
  5524                           stkptr	equ	0xFFC
  5525                           pclatu	equ	0xFFB
  5526                           pclath	equ	0xFFA
  5527                           tblptru	equ	0xFF8
  5528                           tblptrh	equ	0xFF7
  5529                           tblptrl	equ	0xFF6
  5530                           tablat	equ	0xFF5
  5531                           prodh	equ	0xFF4
  5532                           prodl	equ	0xFF3
  5533                           intcon	equ	0xFF2
  5534                           intcon2	equ	0xFF1
  5535                           postinc0	equ	0xFEE
  5536                           fsr0h	equ	0xFEA
  5537                           fsr0l	equ	0xFE9
  5538                           wreg	equ	0xFE8
  5539                           postinc1	equ	0xFE6
  5540                           postdec1	equ	0xFE5
  5541                           fsr1h	equ	0xFE2
  5542                           fsr1l	equ	0xFE1
  5543                           bsr	equ	0xFE0
  5544                           indf2	equ	0xFDF
  5545                           postinc2	equ	0xFDE
  5546                           postdec2	equ	0xFDD
  5547                           plusw2	equ	0xFDB
  5548                           fsr2h	equ	0xFDA
  5549                           fsr2l	equ	0xFD9
  5550                           status	equ	0xFD8
  5551                           
  5552 ;; *************** function i2_task_running *****************
  5553 ;; Defined at:
  5554 ;;		line 28 in file "kernel/task.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  handle          2    0[COMRAM] PTR struct task_s
  5557 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5569 ;;      Params:         2       0       0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0
  5572 ;;      Totals:         2       0       0       0       0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_dispatcher_change_context_isr
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text37
  5583  001196                     __ptext37:
  5584                           	opt stack 0
  5585  001196                     i2_task_running:
  5586                           	opt stack 18
  5587                           
  5588                           ;task.c: 29: handle->state = task_state_running;
  5589                           
  5590                           ;incstack = 0
  5591  001196  EE20 F004          	lfsr	2,4
  5592  00119A  5001               	movf	i2task_running@handle,w,c
  5593  00119C  26D9               	addwf	fsr2l,f,c
  5594  00119E  5002               	movf	i2task_running@handle+1,w,c
  5595  0011A0  22DA               	addwfc	fsr2h,f,c
  5596  0011A2  0E01               	movlw	1
  5597  0011A4  6EDF               	movwf	indf2,c
  5598  0011A6  0012               	return		;funcret
  5599  0011A8                     __end_ofi2_task_running:
  5600                           	opt stack 0
  5601                           tosu	equ	0xFFF
  5602                           tosh	equ	0xFFE
  5603                           tosl	equ	0xFFD
  5604                           stkptr	equ	0xFFC
  5605                           pclatu	equ	0xFFB
  5606                           pclath	equ	0xFFA
  5607                           tblptru	equ	0xFF8
  5608                           tblptrh	equ	0xFF7
  5609                           tblptrl	equ	0xFF6
  5610                           tablat	equ	0xFF5
  5611                           prodh	equ	0xFF4
  5612                           prodl	equ	0xFF3
  5613                           intcon	equ	0xFF2
  5614                           intcon2	equ	0xFF1
  5615                           postinc0	equ	0xFEE
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           postinc1	equ	0xFE6
  5620                           postdec1	equ	0xFE5
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           bsr	equ	0xFE0
  5624                           indf2	equ	0xFDF
  5625                           postinc2	equ	0xFDE
  5626                           postdec2	equ	0xFDD
  5627                           plusw2	equ	0xFDB
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function i2_task_ready *****************
  5633 ;; Defined at:
  5634 ;;		line 24 in file "kernel/task.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  handle          2    0[COMRAM] PTR struct task_s
  5637 ;;		 -> s_heap(512), dispatcher.tasks(123), idle(41), dispatcher(128), 
  5638 ;;		 -> NULL(0), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5650 ;;      Params:         2       0       0       0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0
  5653 ;;      Totals:         2       0       0       0       0       0       0
  5654 ;;Total ram usage:        2 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_dispatcher_change_context_isr
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text38
  5664  0011A8                     __ptext38:
  5665                           	opt stack 0
  5666  0011A8                     i2_task_ready:
  5667                           	opt stack 18
  5668                           
  5669                           ;task.c: 25: handle->state = task_state_ready;
  5670                           
  5671                           ;incstack = 0
  5672  0011A8  EE20 F004          	lfsr	2,4
  5673  0011AC  5001               	movf	i2task_ready@handle,w,c
  5674  0011AE  26D9               	addwf	fsr2l,f,c
  5675  0011B0  5002               	movf	i2task_ready@handle+1,w,c
  5676  0011B2  22DA               	addwfc	fsr2h,f,c
  5677  0011B4  0E00               	movlw	0
  5678  0011B6  6EDF               	movwf	indf2,c
  5679  0011B8  0012               	return		;funcret
  5680  0011BA                     __end_ofi2_task_ready:
  5681                           	opt stack 0
  5682                           tosu	equ	0xFFF
  5683                           tosh	equ	0xFFE
  5684                           tosl	equ	0xFFD
  5685                           stkptr	equ	0xFFC
  5686                           pclatu	equ	0xFFB
  5687                           pclath	equ	0xFFA
  5688                           tblptru	equ	0xFF8
  5689                           tblptrh	equ	0xFF7
  5690                           tblptrl	equ	0xFF6
  5691                           tablat	equ	0xFF5
  5692                           prodh	equ	0xFF4
  5693                           prodl	equ	0xFF3
  5694                           intcon	equ	0xFF2
  5695                           intcon2	equ	0xFF1
  5696                           postinc0	equ	0xFEE
  5697                           fsr0h	equ	0xFEA
  5698                           fsr0l	equ	0xFE9
  5699                           wreg	equ	0xFE8
  5700                           postinc1	equ	0xFE6
  5701                           postdec1	equ	0xFE5
  5702                           fsr1h	equ	0xFE2
  5703                           fsr1l	equ	0xFE1
  5704                           bsr	equ	0xFE0
  5705                           indf2	equ	0xFDF
  5706                           postinc2	equ	0xFDE
  5707                           postdec2	equ	0xFDD
  5708                           plusw2	equ	0xFDB
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function i2_scheduler_priority *****************
  5714 ;; Defined at:
  5715 ;;		line 5 in file "kernel/scheduler.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  scheduler_pr    2   16[COMRAM] PTR struct task_s
  5720 ;;		 -> dispatcher.tasks(123), dispatcher(128), 
  5721 ;;  scheduler_pr    2   14[COMRAM] int 
  5722 ;;  scheduler_pr    2   12[COMRAM] PTR struct task_s
  5723 ;;		 -> dispatcher.tasks(123), idle(41), dispatcher(128), 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2    6[COMRAM] PTR struct task_s
  5726 ;; Registers used:
  5727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5733 ;;      Params:         2       0       0       0       0       0       0
  5734 ;;      Locals:         6       0       0       0       0       0       0
  5735 ;;      Temps:          4       0       0       0       0       0       0
  5736 ;;      Totals:        12       0       0       0       0       0       0
  5737 ;;Total ram usage:       12 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    1
  5740 ;; This function calls:
  5741 ;;		i2___wmul
  5742 ;; This function is called by:
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text39
  5747  000AEE                     __ptext39:
  5748                           	opt stack 0
  5749  000AEE                     i2_scheduler_priority:
  5750                           	opt stack 17
  5751                           
  5752                           ;scheduler.c: 7: task_t* highest = &idle;
  5753                           
  5754                           ;incstack = 0
  5755  000AEE  0E80               	movlw	low _idle
  5756  000AF0  6E0D               	movwf	i2scheduler_priority@highest,c
  5757  000AF2  0E01               	movlw	high _idle
  5758  000AF4  6E0E               	movwf	i2scheduler_priority@highest+1,c
  5759                           
  5760                           ;scheduler.c: 9: for( int i = 0; i < dispatcher.size; i++ ) {
  5761  000AF6  0E00               	movlw	0
  5762  000AF8  6E10               	movwf	i2scheduler_priority@i+1,c
  5763  000AFA  0E00               	movlw	0
  5764  000AFC  6E0F               	movwf	i2scheduler_priority@i,c
  5765  000AFE  D031               	goto	i2l1788
  5766  000B00                     i2l1778:
  5767                           
  5768                           ;scheduler.c: 11: task_t* current = &dispatcher.tasks[i];
  5769  000B00  C00F  F001         	movff	i2scheduler_priority@i,i2___wmul@multiplier
  5770  000B04  C010  F002         	movff	i2scheduler_priority@i+1,i2___wmul@multiplier+1
  5771  000B08  0E00               	movlw	0
  5772  000B0A  6E04               	movwf	i2___wmul@multiplicand+1,c
  5773  000B0C  0E29               	movlw	41
  5774  000B0E  6E03               	movwf	i2___wmul@multiplicand,c
  5775  000B10  EC48  F008         	call	i2___wmul	;wreg free
  5776  000B14  0E00               	movlw	low _dispatcher
  5777  000B16  2401               	addwf	?i2___wmul,w,c
  5778  000B18  6E11               	movwf	i2scheduler_priority@current,c
  5779  000B1A  0E01               	movlw	high _dispatcher
  5780  000B1C  2002               	addwfc	?i2___wmul+1,w,c
  5781  000B1E  6E12               	movwf	i2scheduler_priority@current+1,c
  5782                           
  5783                           ;scheduler.c: 13: if( ( current->state == task_state_ready ) && ( highest->priority < cu
      +                          rrent->priority ) ) {
  5784  000B20  EE20 F004          	lfsr	2,4
  5785  000B24  5011               	movf	i2scheduler_priority@current,w,c
  5786  000B26  26D9               	addwf	fsr2l,f,c
  5787  000B28  5012               	movf	i2scheduler_priority@current+1,w,c
  5788  000B2A  22DA               	addwfc	fsr2h,f,c
  5789  000B2C  50DF               	movf	indf2,w,c
  5790  000B2E  A4D8               	btfss	status,2,c
  5791  000B30  D016               	goto	i2l1786
  5792  000B32  EE20 F002          	lfsr	2,2
  5793  000B36  5011               	movf	i2scheduler_priority@current,w,c
  5794  000B38  26D9               	addwf	fsr2l,f,c
  5795  000B3A  5012               	movf	i2scheduler_priority@current+1,w,c
  5796  000B3C  22DA               	addwfc	fsr2h,f,c
  5797  000B3E  EE10 F002          	lfsr	1,2
  5798  000B42  500D               	movf	i2scheduler_priority@highest,w,c
  5799  000B44  26E1               	addwf	fsr1l,f,c
  5800  000B46  500E               	movf	i2scheduler_priority@highest+1,w,c
  5801  000B48  22E2               	addwfc	fsr1h,f,c
  5802  000B4A  50DE               	movf	postinc2,w,c
  5803  000B4C  5CE6               	subwf	postinc1,w,c
  5804  000B4E  50DE               	movf	postinc2,w,c
  5805  000B50  58E6               	subwfb	postinc1,w,c
  5806  000B52  B0D8               	btfsc	status,0,c
  5807  000B54  D004               	goto	i2l1786
  5808                           
  5809                           ;scheduler.c: 14: highest = current;
  5810  000B56  C011  F00D         	movff	i2scheduler_priority@current,i2scheduler_priority@highest
  5811  000B5A  C012  F00E         	movff	i2scheduler_priority@current+1,i2scheduler_priority@highest+1
  5812  000B5E                     i2l1786:
  5813  000B5E  4A0F               	infsnz	i2scheduler_priority@i,f,c
  5814  000B60  2A10               	incf	i2scheduler_priority@i+1,f,c
  5815  000B62                     i2l1788:
  5816  000B62  0101               	movlb	1	; () banked
  5817  000B64  517B               	movf	(_dispatcher+123)& (0+255),w,b
  5818  000B66  6E09               	movwf	??i2_scheduler_priority& (0+255),c
  5819  000B68  6A0A               	clrf	(??i2_scheduler_priority+1)& (0+255),c
  5820  000B6A  5009               	movf	??i2_scheduler_priority,w,c
  5821  000B6C  5C0F               	subwf	i2scheduler_priority@i,w,c
  5822  000B6E  5010               	movf	i2scheduler_priority@i+1,w,c
  5823  000B70  0A80               	xorlw	128
  5824  000B72  6E0B               	movwf	(??i2_scheduler_priority+2)& (0+255),c
  5825  000B74  500A               	movf	??i2_scheduler_priority+1,w,c
  5826  000B76  0A80               	xorlw	128
  5827  000B78  580B               	subwfb	(??i2_scheduler_priority+2)& (0+255),w,c
  5828  000B7A  A0D8               	btfss	status,0,c
  5829  000B7C  D7C1               	goto	i2l1778
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;scheduler.c: 15: }
  5833                           ;scheduler.c: 16: }
  5834                           ;scheduler.c: 18: return highest;
  5835                           
  5836                           ; BSR set to: 1
  5837  000B7E  C00D  F007         	movff	i2scheduler_priority@highest,?i2_scheduler_priority
  5838  000B82  C00E  F008         	movff	i2scheduler_priority@highest+1,?i2_scheduler_priority+1
  5839  000B86  0012               	return	
  5840  000B88                     __end_ofi2_scheduler_priority:
  5841                           	opt stack 0
  5842                           tosu	equ	0xFFF
  5843                           tosh	equ	0xFFE
  5844                           tosl	equ	0xFFD
  5845                           stkptr	equ	0xFFC
  5846                           pclatu	equ	0xFFB
  5847                           pclath	equ	0xFFA
  5848                           tblptru	equ	0xFF8
  5849                           tblptrh	equ	0xFF7
  5850                           tblptrl	equ	0xFF6
  5851                           tablat	equ	0xFF5
  5852                           prodh	equ	0xFF4
  5853                           prodl	equ	0xFF3
  5854                           intcon	equ	0xFF2
  5855                           intcon2	equ	0xFF1
  5856                           postinc0	equ	0xFEE
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           postinc1	equ	0xFE6
  5861                           postdec1	equ	0xFE5
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           bsr	equ	0xFE0
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           plusw2	equ	0xFDB
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873 ;; *************** function i2___wmul *****************
  5874 ;; Defined at:
  5875 ;;		line 15 in file "/home/bruno/Programs/microchip/xc8/v1.37/sources/common/Umul16.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  multiplier      2    0[COMRAM] unsigned int 
  5878 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  __wmul          2    4[COMRAM] unsigned int 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  2    0[COMRAM] unsigned int 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0, prodl, prodh
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5890 ;;      Params:         4       0       0       0       0       0       0
  5891 ;;      Locals:         2       0       0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0
  5893 ;;      Totals:         6       0       0       0       0       0       0
  5894 ;;Total ram usage:        6 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		i2_scheduler_priority
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text40
  5904  001090                     __ptext40:
  5905                           	opt stack 0
  5906  001090                     i2___wmul:
  5907                           	opt stack 17
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;incstack = 0
  5911  001090  5001               	movf	i2___wmul@multiplier,w,c
  5912  001092  0203               	mulwf	i2___wmul@multiplicand,c
  5913  001094  CFF3 F005          	movff	prodl,i2___wmul@product
  5914  001098  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5915  00109C  5001               	movf	i2___wmul@multiplier,w,c
  5916  00109E  0204               	mulwf	i2___wmul@multiplicand+1,c
  5917  0010A0  50F3               	movf	prodl,w,c
  5918  0010A2  2606               	addwf	i2___wmul@product+1,f,c
  5919  0010A4  5002               	movf	i2___wmul@multiplier+1,w,c
  5920  0010A6  0203               	mulwf	i2___wmul@multiplicand,c
  5921  0010A8  50F3               	movf	prodl,w,c
  5922  0010AA  2606               	addwf	i2___wmul@product+1,f,c
  5923  0010AC  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5924  0010B0  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5925  0010B4  0012               	return	
  5926  0010B6                     __end_ofi2___wmul:
  5927                           	opt stack 0
  5928  0000                     tosu	equ	0xFFF
  5929                           tosh	equ	0xFFE
  5930                           tosl	equ	0xFFD
  5931                           stkptr	equ	0xFFC
  5932                           pclatu	equ	0xFFB
  5933                           pclath	equ	0xFFA
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           intcon2	equ	0xFF1
  5942                           postinc0	equ	0xFEE
  5943                           fsr0h	equ	0xFEA
  5944                           fsr0l	equ	0xFE9
  5945                           wreg	equ	0xFE8
  5946                           postinc1	equ	0xFE6
  5947                           postdec1	equ	0xFE5
  5948                           fsr1h	equ	0xFE2
  5949                           fsr1l	equ	0xFE1
  5950                           bsr	equ	0xFE0
  5951                           indf2	equ	0xFDF
  5952                           postinc2	equ	0xFDE
  5953                           postdec2	equ	0xFDD
  5954                           plusw2	equ	0xFDB
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           tosu	equ	0xFFF
  5959                           tosh	equ	0xFFE
  5960                           tosl	equ	0xFFD
  5961                           stkptr	equ	0xFFC
  5962                           pclatu	equ	0xFFB
  5963                           pclath	equ	0xFFA
  5964                           tblptru	equ	0xFF8
  5965                           tblptrh	equ	0xFF7
  5966                           tblptrl	equ	0xFF6
  5967                           tablat	equ	0xFF5
  5968                           prodh	equ	0xFF4
  5969                           prodl	equ	0xFF3
  5970                           intcon	equ	0xFF2
  5971                           intcon2	equ	0xFF1
  5972                           postinc0	equ	0xFEE
  5973                           fsr0h	equ	0xFEA
  5974                           fsr0l	equ	0xFE9
  5975                           wreg	equ	0xFE8
  5976                           postinc1	equ	0xFE6
  5977                           postdec1	equ	0xFE5
  5978                           fsr1h	equ	0xFE2
  5979                           fsr1l	equ	0xFE1
  5980                           bsr	equ	0xFE0
  5981                           indf2	equ	0xFDF
  5982                           postinc2	equ	0xFDE
  5983                           postdec2	equ	0xFDD
  5984                           plusw2	equ	0xFDB
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989                           	psect	text41
  5990  000000                     __ptext41:
  5991                           	opt stack 0
  5992                           tosu	equ	0xFFF
  5993                           tosh	equ	0xFFE
  5994                           tosl	equ	0xFFD
  5995                           stkptr	equ	0xFFC
  5996                           pclatu	equ	0xFFB
  5997                           pclath	equ	0xFFA
  5998                           tblptru	equ	0xFF8
  5999                           tblptrh	equ	0xFF7
  6000                           tblptrl	equ	0xFF6
  6001                           tablat	equ	0xFF5
  6002                           prodh	equ	0xFF4
  6003                           prodl	equ	0xFF3
  6004                           intcon	equ	0xFF2
  6005                           intcon2	equ	0xFF1
  6006                           postinc0	equ	0xFEE
  6007                           fsr0h	equ	0xFEA
  6008                           fsr0l	equ	0xFE9
  6009                           wreg	equ	0xFE8
  6010                           postinc1	equ	0xFE6
  6011                           postdec1	equ	0xFE5
  6012                           fsr1h	equ	0xFE2
  6013                           fsr1l	equ	0xFE1
  6014                           bsr	equ	0xFE0
  6015                           indf2	equ	0xFDF
  6016                           postinc2	equ	0xFDE
  6017                           postdec2	equ	0xFDD
  6018                           plusw2	equ	0xFDB
  6019                           fsr2h	equ	0xFDA
  6020                           fsr2l	equ	0xFD9
  6021                           status	equ	0xFD8
  6022                           
  6023                           	psect	rparam
  6024  0000                     tosu	equ	0xFFF
  6025                           tosh	equ	0xFFE
  6026                           tosl	equ	0xFFD
  6027                           stkptr	equ	0xFFC
  6028                           pclatu	equ	0xFFB
  6029                           pclath	equ	0xFFA
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           prodh	equ	0xFF4
  6035                           prodl	equ	0xFF3
  6036                           intcon	equ	0xFF2
  6037                           intcon2	equ	0xFF1
  6038                           postinc0	equ	0xFEE
  6039                           fsr0h	equ	0xFEA
  6040                           fsr0l	equ	0xFE9
  6041                           wreg	equ	0xFE8
  6042                           postinc1	equ	0xFE6
  6043                           postdec1	equ	0xFE5
  6044                           fsr1h	equ	0xFE2
  6045                           fsr1l	equ	0xFE1
  6046                           bsr	equ	0xFE0
  6047                           indf2	equ	0xFDF
  6048                           postinc2	equ	0xFDE
  6049                           postdec2	equ	0xFDD
  6050                           plusw2	equ	0xFDB
  6051                           fsr2h	equ	0xFDA
  6052                           fsr2l	equ	0xFD9
  6053                           status	equ	0xFD8
  6054                           
  6055                           	psect	temp
  6056  00003D                     btemp:
  6057                           	opt stack 0
  6058  00003D                     	ds	1
  6059  0000                     int$flags	set	btemp
  6060                           tosu	equ	0xFFF
  6061                           tosh	equ	0xFFE
  6062                           tosl	equ	0xFFD
  6063                           stkptr	equ	0xFFC
  6064                           pclatu	equ	0xFFB
  6065                           pclath	equ	0xFFA
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           prodh	equ	0xFF4
  6071                           prodl	equ	0xFF3
  6072                           intcon	equ	0xFF2
  6073                           intcon2	equ	0xFF1
  6074                           postinc0	equ	0xFEE
  6075                           fsr0h	equ	0xFEA
  6076                           fsr0l	equ	0xFE9
  6077                           wreg	equ	0xFE8
  6078                           postinc1	equ	0xFE6
  6079                           postdec1	equ	0xFE5
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           bsr	equ	0xFE0
  6083                           indf2	equ	0xFDF
  6084                           postinc2	equ	0xFDE
  6085                           postdec2	equ	0xFDD
  6086                           plusw2	equ	0xFDB
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         694
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      60
    BANK0           128     78      88
    BANK1           256      0     171
    BANK2           256    131     131
    BANK3           256      9       9
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ?i2_scheduler_priority.callback	PTR FTN()void  size(2) Largest target is 0
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    s_heap.next.data	PTR void  size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    s_heap.next.next	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.last.data	PTR void  size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    s_heap.last.next	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    idle.last.data	PTR void  size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    idle.last.next	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    dispatcher.last.data	PTR void  size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    dispatcher.last.next	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    dispatcher.last	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    idle.last	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.data.last	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.data	PTR void  size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    s_heap.next	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.last	PTR struct linked_list_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.next.next	PTR struct block_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.next	PTR struct block_s size(2) Largest target is 0
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_heap.callback	PTR FTN()void  size(2) Largest target is 0
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    dispatcher.callback	PTR FTN()void  size(2) Largest target is 0
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    sp_S477dispatcher_s$callback	PTR struct task_s size(2) Largest target is 129
		 -> idle(BANK1[41]), dispatcher(BANK1[128]), 

    ?__find_free_block.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    ?_malloc.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    ?_scheduler_round_robin.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    ?_scheduler_priority.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    ?_dispatcher_add_task.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    semaphore_signal@l_task	PTR struct task_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    semaphore_signal@handle.queue	PTR struct linked_list_s size(2) Largest target is 0

    semaphore_signal@handle	PTR struct semaphore_s size(2) Largest target is 4
		 -> g_sem_2(BANK0[4]), g_sem_1(BANK0[4]), 

    semaphore_wait@handle.queue	PTR struct linked_list_s size(2) Largest target is 0

    semaphore_wait@handle	PTR struct semaphore_s size(2) Largest target is 4
		 -> g_sem_2(BANK0[4]), g_sem_1(BANK0[4]), 

    semaphore_init@handle.queue	PTR struct linked_list_s size(2) Largest target is 0

    semaphore_init@handle	PTR struct semaphore_s size(2) Largest target is 4
		 -> g_sem_2(BANK0[4]), g_sem_1(BANK0[4]), 

    linked_list_get_size@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_size@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_size@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_size@a_head	PTR struct linked_list_s size(2) Largest target is 0

    linked_list_get_size@l_head_data	PTR struct linked_list_head_data_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    sp__linked_list_get_first	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_first@a_head.next.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_first@a_head.next.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_first@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_first@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_first@a_head	PTR struct linked_list_s size(2) Largest target is 0

    sp__linked_list_get_last	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_last@l_head_data.last.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_last@l_head_data.last.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_last@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_last@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_last@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_by_index@iterator_ptr.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_by_index@iterator_ptr.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    sp__linked_list_get_by_index	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_by_index@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_get_by_index@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_get_by_index@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@l_iter_new_first.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_first@l_iter_new_first.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@a_head.next.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_first@a_head.next.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@l_iter_new_first	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@l_iter_delet.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_first@l_iter_delet.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@l_iter_delet	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_first@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_first@a_head	PTR struct linked_list_s size(2) Largest target is 0

    linked_list_remove_first@l_head_data	PTR struct linked_list_head_data_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_last@l_head_data.last.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_last@l_head_data.last.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_last@l_iter_curr.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_last@l_iter_curr.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_last@a_head.next.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_last@a_head.next.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_last@l_iter_prev.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_last@l_iter_prev.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_last@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_remove_last@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_remove_last@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@l_head_data.last.next.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_insert@l_head_data.last.next.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@l_head_data.last.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_insert@l_head_data.last.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@a_head.next.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_insert@a_head.next.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_insert@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@a_head	PTR struct linked_list_s size(2) Largest target is 0

    linked_list_insert@l_head_data	PTR struct linked_list_head_data_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_insert@a_data	PTR void  size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    linked_list_insert@l_node.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_insert@l_node.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_insert@l_node	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_create@a_head.data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    S21linked_list_s$data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    linked_list_create@a_head.data	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), idle(BANK1[41]), dispatcher(BANK1[128]), NULL(NULL[0]), 

    S21linked_list_s$next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_create@a_head.next	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    S1097linked_list_head_data_s$last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_create@l_head_data.last	PTR struct linked_list_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_create@l_head_data	PTR struct linked_list_head_data_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    linked_list_create@a_head	PTR PTR struct linked_list_s size(2) Largest target is 4
		 -> g_sem_2(BANK0[4]), g_sem_1(BANK0[4]), 

    _merge_free_blocks@l_curr.next.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _merge_free_blocks@l_next.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _merge_free_blocks@l_next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _merge_free_blocks@l_curr.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _merge_free_blocks@l_curr	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _split_free_block@a_block.next.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _split_free_block@l_new.next.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _split_free_block@a_block.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _split_free_block@l_new.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _split_free_block@a_block	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _split_free_block@l_new	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    sp___find_free_block.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _find_free_block@l_current.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    _find_free_block@l_current	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    free@l_block.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    free@l_block	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    free@a_pointer	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_previous.next.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_previous.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_previous	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_block.next.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    sp__malloc.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_free.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    sp___find_free_block	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_free	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    S1004block_s$next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_block.next	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    s_blocks	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    malloc@l_block	PTR struct block_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), NULL(NULL[0]), 

    task_block@handle.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    task_running@handle.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    task_running@handle	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    task_ready@handle.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    task_ready@handle	PTR struct task_s size(2) Largest target is 512
		 -> s_heap(BIGRAM[512]), dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 
		 -> NULL(NULL[0]), 

    task_create@callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_3_priority(), task_2_priority(), task_1_priority(), 

    task_create@handle.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    task_create@handle	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), dispatcher(BANK1[128]), 

    sp__scheduler_round_robin.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    sp__scheduler_round_robin	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher.tasks.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    scheduler_round_robin@next.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    sp__scheduler_priority.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    sp__scheduler_priority	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    scheduler_priority@current.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    scheduler_priority@current	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), dispatcher(BANK1[128]), 

    scheduler_priority@highest.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    scheduler_priority@highest	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context@stack_817	PTR struct task_context_stack_s size(2) Largest target is 2
		 -> dispatcher.stack(BANK1[31]), idle.stack(BANK1[31]), dispatcher.context.stack(BANK1[31]), idle.context.stack(BANK1[31]), 
		 -> dispatcher_change_context@context_810(BANK2[2]), 

    dispatcher_change_context@context_810	PTR struct task_context_s size(2) Largest target is 129
		 -> dispatcher.context(BANK1[34]), idle.context(BANK1[34]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context@task_798.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    dispatcher_change_context@task_798	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context@next.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    dispatcher_change_context@next	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context@stack	PTR struct task_context_stack_s size(2) Largest target is 2
		 -> dispatcher.stack(BANK1[31]), idle.stack(BANK1[31]), dispatcher.context.stack(BANK1[31]), idle.context.stack(BANK1[31]), 
		 -> dispatcher_change_context@context(BANK2[2]), 

    dispatcher_change_context@context	PTR struct task_context_s size(2) Largest target is 129
		 -> dispatcher.context(BANK1[34]), idle.context(BANK1[34]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context@task.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    dispatcher_change_context@task	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context_isr@next.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    sp__dispatcher.callback	PTR struct task_s size(2) Largest target is 129
		 -> idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher_change_context_isr@next	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    sp__dispatcher_add_task.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    sp__dispatcher_add_task	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), dispatcher(BANK1[128]), 

    dispatcher_add_task@task	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), dispatcher(BANK1[128]), 

    dispatcher.running.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    idle.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    global_isr@n_stack	PTR struct task_context_stack_s size(2) Largest target is 2
		 -> dispatcher.stack(BANK1[31]), idle.stack(BANK1[31]), dispatcher.context.stack(BANK1[31]), idle.context.stack(BANK1[31]), 
		 -> global_isr@n_context(COMRAM[2]), 

    global_isr@n_context	PTR struct task_context_s size(2) Largest target is 129
		 -> dispatcher.context(BANK1[34]), idle.context(BANK1[34]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    global_isr@n_task.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    global_isr@n_task	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    global_isr@p_stack	PTR struct task_context_stack_s size(2) Largest target is 2
		 -> dispatcher.stack(BANK1[31]), idle.stack(BANK1[31]), dispatcher.context.stack(BANK1[31]), idle.context.stack(BANK1[31]), 
		 -> global_isr@p_context(COMRAM[2]), 

    global_isr@p_context	PTR struct task_context_s size(2) Largest target is 129
		 -> dispatcher.context(BANK1[34]), idle.context(BANK1[34]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    S470task_s$callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    global_isr@p_task.callback	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle_callback(), task_3_priority(), task_2_priority(), task_1_priority(), 

    global_isr@p_task	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    S477dispatcher_s$callback	PTR FTN()PTR struct task_s size(2) Largest target is 3
		 -> scheduler_priority(), 

    dispatcher.callback	PTR FTN()PTR struct task_s size(2) Largest target is 3
		 -> scheduler_priority(), 

    S477dispatcher_s$running	PTR struct task_s size(2) Largest target is 129
		 -> idle(BANK1[41]), dispatcher(BANK1[128]), 

    dispatcher.running	PTR struct task_s size(2) Largest target is 129
		 -> dispatcher.tasks(BANK1[123]), idle(BANK1[41]), dispatcher(BANK1[128]), 

    timer0_init@callback	PTR FTN()void  size(2) Largest target is 1
		 -> dispatcher_change_context_isr(), 

    _timer0_callback	PTR FTN()void  size(2) Largest target is 1
		 -> dispatcher_change_context_isr(), Absolute function(), 

    g_sem_2.queue	PTR struct linked_list_s size(2) Largest target is 0

    S24semaphore_s$queue	PTR struct linked_list_s size(2) Largest target is 0

    g_sem_1.queue	PTR struct linked_list_s size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_1_priority in COMRAM

    None.

Critical Paths under _task_2_priority in COMRAM

    None.

Critical Paths under _task_3_priority in COMRAM

    None.

Critical Paths under _task_idle_callback in COMRAM

    None.

Critical Paths under _task_block in COMRAM

    None.

Critical Paths under _global_isr in COMRAM

    _timer0_isr->_dispatcher_change_context_isr
    _dispatcher_change_context_isr->i2_scheduler_priority
    i2_scheduler_priority->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_1_priority in BANK0

    _semaphore_wait->_linked_list_insert
    _linked_list_insert->_malloc
    _semaphore_init->_linked_list_create
    _malloc->__split_free_block

Critical Paths under _task_2_priority in BANK0

    _task_2_priority->_semaphore_wait
    _semaphore_wait->_linked_list_insert
    _linked_list_insert->_malloc
    _malloc->__split_free_block

Critical Paths under _task_3_priority in BANK0

    None.

Critical Paths under _task_idle_callback in BANK0

    None.

Critical Paths under _task_block in BANK0

    None.

Critical Paths under _global_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_1_priority in BANK1

    None.

Critical Paths under _task_2_priority in BANK1

    None.

Critical Paths under _task_3_priority in BANK1

    None.

Critical Paths under _task_idle_callback in BANK1

    None.

Critical Paths under _task_block in BANK1

    None.

Critical Paths under _global_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_task_create
    _task_create->_dispatcher_add_task
    _dispatcher_start->_timer0_init

Critical Paths under _task_1_priority in BANK2

    _dispatcher_change_context->_scheduler_priority
    _scheduler_priority->___wmul

Critical Paths under _task_2_priority in BANK2

    _semaphore_signal->_dispatcher_change_context
    _linked_list_remove_first->_free
    _free->__merge_free_blocks
    _dispatcher_change_context->_scheduler_priority
    _scheduler_priority->___wmul

Critical Paths under _task_3_priority in BANK2

    _task_3_priority->_semaphore_signal
    _semaphore_signal->_dispatcher_change_context
    _linked_list_remove_first->_free
    _free->__merge_free_blocks
    _dispatcher_change_context->_scheduler_priority
    _scheduler_priority->___wmul

Critical Paths under _task_idle_callback in BANK2

    None.

Critical Paths under _task_block in BANK2

    None.

Critical Paths under _global_isr in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_task_create

Critical Paths under _task_1_priority in BANK3

    None.

Critical Paths under _task_2_priority in BANK3

    None.

Critical Paths under _task_3_priority in BANK3

    None.

Critical Paths under _task_idle_callback in BANK3

    None.

Critical Paths under _task_block in BANK3

    None.

Critical Paths under _global_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_1_priority in BANK4

    None.

Critical Paths under _task_2_priority in BANK4

    None.

Critical Paths under _task_3_priority in BANK4

    None.

Critical Paths under _task_idle_callback in BANK4

    None.

Critical Paths under _task_block in BANK4

    None.

Critical Paths under _global_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_1_priority in BANK5

    None.

Critical Paths under _task_2_priority in BANK5

    None.

Critical Paths under _task_3_priority in BANK5

    None.

Critical Paths under _task_idle_callback in BANK5

    None.

Critical Paths under _task_block in BANK5

    None.

Critical Paths under _global_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2290
                          _nojo_init
                         _nojo_start
                        _task_create
 ---------------------------------------------------------------------------------
 (1) _task_create                                         11     5      6    2020
                                            129 BANK2      2     2      0
                                              0 BANK3      9     3      6
                _dispatcher_add_task
                         _task_ready
 ---------------------------------------------------------------------------------
 (2) _task_ready                                           2     0      2     273
                                            125 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _dispatcher_add_task                                  4     2      2      34
                                            125 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (1) _nojo_start                                           0     0      0     270
                   _dispatcher_start
 ---------------------------------------------------------------------------------
 (2) _dispatcher_start                                     0     0      0     270
                        _timer0_init
 ---------------------------------------------------------------------------------
 (3) _timer0_init                                          4     0      4     270
                                            125 BANK2      4     0      4
                       _timer0_reset
 ---------------------------------------------------------------------------------
 (4) _timer0_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nojo_init                                            0     0      0       0
                    _dispatcher_init
 ---------------------------------------------------------------------------------
 (2) _dispatcher_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1_priority                                      3     3      0   20122
                                             37 BANK0      3     3      0
                     _semaphore_init
                     _semaphore_wait
 ---------------------------------------------------------------------------------
 (6) _semaphore_wait                                       3     1      2   12824
                                             74 BANK0      3     1      2
          _dispatcher_change_context
                 _linked_list_insert
 ---------------------------------------------------------------------------------
 (7) _linked_list_insert                                  10     6      4    6725
                                             64 BANK0     10     6      4
                             _malloc
 ---------------------------------------------------------------------------------
 (7) _dispatcher_change_context                           18    18      0    5557
                                             97 BANK2     18    18      0
                 _scheduler_priority *
                       _task_running
 ---------------------------------------------------------------------------------
 (8) _task_running                                         2     0      2     364
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (8) _scheduler_priority                                  12    10      2    2922
                                             85 BANK2     12    10      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4    2208
                                             79 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (6) _semaphore_init                                       3     0      3    7082
                                             30 BANK0      3     0      3
                 _linked_list_create
 ---------------------------------------------------------------------------------
 (7) _linked_list_create                                   6     4      2    6085
                                             24 BANK0      6     4      2
                             _malloc
 ---------------------------------------------------------------------------------
 (8) _malloc                                              14    12      2    5184
                                             50 BANK0     14    12      2
                   __find_free_block
                  __split_free_block
 ---------------------------------------------------------------------------------
 (9) __split_free_block                                   10     6      4    1433
                                             40 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (9) __find_free_block                                     6     4      2     748
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2_priority                                      3     3      0   23404
                                             77 BANK0      1     1      0
                                             77 BANK2      2     2      0
                   _semaphore_signal
                     _semaphore_wait
 ---------------------------------------------------------------------------------
 (6) _semaphore_wait                                       3     1      2   12824
                                             74 BANK0      3     1      2
          _dispatcher_change_context
                 _linked_list_insert
 ---------------------------------------------------------------------------------
 (7) _linked_list_insert                                  10     6      4    6725
                                             64 BANK0     10     6      4
                             _malloc
 ---------------------------------------------------------------------------------
 (8) _malloc                                              14    12      2    5184
                                             50 BANK0     14    12      2
                   __find_free_block
                  __split_free_block
 ---------------------------------------------------------------------------------
 (9) __split_free_block                                   10     6      4    1433
                                             40 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (9) __find_free_block                                     6     4      2     748
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _semaphore_signal                                     5     3      2   10364
                                            115 BANK2      5     3      2
          _dispatcher_change_context
              _linked_list_get_first
               _linked_list_get_size
           _linked_list_remove_first
                       i1_task_ready
 ---------------------------------------------------------------------------------
 (7) i1_task_ready                                         2     0      2     178
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (7) _linked_list_remove_first                            10     8      2    3155
                                             89 BANK2     10     8      2
                               _free
 ---------------------------------------------------------------------------------
 (8) _free                                                 4     2      2    2038
                                             85 BANK2      4     2      2
                 __merge_free_blocks
 ---------------------------------------------------------------------------------
 (9) __merge_free_blocks                                   6     6      0    1020
                                             79 BANK2      6     6      0
 ---------------------------------------------------------------------------------
 (7) _linked_list_get_size                                 4     2      2     379
                                             79 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (7) _linked_list_get_first                                2     0      2     271
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (7) _dispatcher_change_context                           18    18      0    5557
                                             97 BANK2     18    18      0
                 _scheduler_priority *
                       _task_running
 ---------------------------------------------------------------------------------
 (8) _task_running                                         2     0      2     364
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (8) _scheduler_priority                                  12    10      2    2922
                                             85 BANK2     12    10      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4    2208
                                             79 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_3_priority                                      3     3      0   10580
                                            120 BANK2      3     3      0
                   _semaphore_signal
 ---------------------------------------------------------------------------------
 (6) _semaphore_signal                                     5     3      2   10364
                                            115 BANK2      5     3      2
          _dispatcher_change_context
              _linked_list_get_first
               _linked_list_get_size
           _linked_list_remove_first
                       i1_task_ready
 ---------------------------------------------------------------------------------
 (7) i1_task_ready                                         2     0      2     178
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (7) _linked_list_remove_first                            10     8      2    3155
                                             89 BANK2     10     8      2
                               _free
 ---------------------------------------------------------------------------------
 (8) _free                                                 4     2      2    2038
                                             85 BANK2      4     2      2
                 __merge_free_blocks
 ---------------------------------------------------------------------------------
 (9) __merge_free_blocks                                   6     6      0    1020
                                             79 BANK2      6     6      0
 ---------------------------------------------------------------------------------
 (7) _linked_list_get_size                                 4     2      2     379
                                             79 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (7) _linked_list_get_first                                2     0      2     271
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (7) _dispatcher_change_context                           18    18      0    5557
                                             97 BANK2     18    18      0
                 _scheduler_priority *
                       _task_running
 ---------------------------------------------------------------------------------
 (8) _task_running                                         2     0      2     364
                                             79 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (8) _scheduler_priority                                  12    10      2    2922
                                             85 BANK2     12    10      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4    2208
                                             79 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle_callback                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_block                                           2     0      2       0
                                            123 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _global_isr                                         35    35      0    3038
                                             20 COMRAM    35    35      0
                         _timer0_isr
 ---------------------------------------------------------------------------------
 (11) _timer0_isr                                          0     0      0     572
                   Absolute function *
      _dispatcher_change_context_isr *
                     i2_timer0_reset
 ---------------------------------------------------------------------------------
 (12) i2_timer0_reset                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _dispatcher_change_context_isr                       2     2      0     572
                                             18 COMRAM     2     2      0
               i2_scheduler_priority *
                       i2_task_ready
                     i2_task_running
 ---------------------------------------------------------------------------------
 (13) i2_task_running                                      2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_task_ready                                        2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_scheduler_priority                               12    10      2     368
                                              6 COMRAM    12    10      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nojo_init
     _dispatcher_init
   _nojo_start
     _dispatcher_start
       _timer0_init
         _timer0_reset
   _task_create
     _dispatcher_add_task
     _task_ready

 _task_1_priority (ROOT)
   _semaphore_init
     _linked_list_create
       _malloc
         __find_free_block
         __split_free_block
   _semaphore_wait
     _dispatcher_change_context
       _scheduler_priority *
         ___wmul
       _task_running *
     _linked_list_insert
       _malloc
         __find_free_block
         __split_free_block

 _task_2_priority (ROOT)
   _semaphore_signal
     _dispatcher_change_context
       _scheduler_priority *
         ___wmul
       _task_running *
     _linked_list_get_first
     _linked_list_get_size
     _linked_list_remove_first
       _free
         __merge_free_blocks
     i1_task_ready
   _semaphore_wait
     _dispatcher_change_context
       _scheduler_priority *
         ___wmul
       _task_running *
     _linked_list_insert
       _malloc
         __find_free_block
         __split_free_block

 _task_3_priority (ROOT)
   _semaphore_signal
     _dispatcher_change_context
       _scheduler_priority *
         ___wmul
       _task_running *
     _linked_list_get_first
     _linked_list_get_size
     _linked_list_remove_first
       _free
         __merge_free_blocks
     i1_task_ready

 _task_idle_callback (ROOT)

 _task_block (ROOT)

 _global_isr (ROOT)
   _timer0_isr
     Absolute function(Fake) *
     _dispatcher_change_context_isr *
       i2_scheduler_priority *
         i2___wmul
       i2_task_ready *
       i2_task_running *
     i2_timer0_reset *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     200      17       33.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      9       9      11        3.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100     83      83       9       51.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AB       7       66.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4E      58       5       68.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      3C       1       47.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CB      15        0.0%
DATA                 0      0     3CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Nov  2 16:07:01 2016

               ?_linked_list_remove_first 0259                   ??_linked_list_get_first 0251  
                                      l51 0D9A                       ___wmul@multiplicand 0251  
                             free@l_block 0257                                       l163 11E8  
                                     _BSR 000FE0                                       _TOS 000FFD  
                linked_list_create@a_head 0098                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                    __end_ofi2_task_ready 11BA            ?_dispatcher_change_context_isr 0001  
              __end_of_linked_list_create 0C20                __end_of_linked_list_insert 0A3E  
                            __CFG_WDT$OFF 000000                                      l4710 0E9A  
                                    l4702 0DE6                                      l4706 0E6E  
                                    l4718 0EB4                                      l4690 0DA2  
                                    l4674 0CD4                                      l4694 0DCC  
                                    l4686 0D14                                      l4678 0CFA  
               __split_free_block@a_block 00A8                                      _TMR0 000FD6  
                                    _TOSH 000FFE                                      _TOSL 000FFD  
                                    _WREG 000FE8                                      _TOSU 000FFF  
                                    __BSR 0038                             free@a_pointer 0255  
              __find_free_block@l_current 00AC                          global_isr@n_task 002D  
                                    _idle 0180                                      _free 0FCA  
                                    _main 0D26                          global_isr@p_task 002B  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 003D  
                  ??i2_scheduler_priority 0009                                      pclat 000FFA  
                          malloc@l_offset 00BA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0016  
                            ___param_bank 000010                      semaphore_init@handle 009E  
                       ??_task_1_priority 00A5                          ?_dispatcher_init 0001  
                          i2_task_running 1196                         ??_task_2_priority 00CD  
                                   ?_free 0255                                     ?_main 0001  
                                   i1l255 0430                                     i2l113 0218  
                                   i1l259 03AE                                     i1l195 064C  
                       ??_task_3_priority 0278                               global_isr@i 002A  
                          i2_timer0_reset 11D4                                     __WREG 003A  
               __size_of_semaphore_signal 0084                         global_isr@n_stack 0032  
                       global_isr@p_stack 002F                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi2___wmul 10B6  
                                   plusw2 000FDB               __size_of__merge_free_blocks 00D6  
                                   status 000FD8                   __size_of_semaphore_init 0026  
                 __size_of_semaphore_wait 003A                           __initialization 0F50  
    linked_list_remove_first@l_iter_delet 025F                    __end_ofi2_task_running 11A8  
                            __end_of_free 1002                              __end_of_main 0D9E  
            __end_of_linked_list_get_size 1120                       scheduler_priority@i 025D  
                     task_create@callback 0304                                    ??_free 0257  
                                  ??_main 0283                    __end_ofi2_timer0_reset 11E0  
                           __activetblptr 000002                         ?_dispatcher_start 0001  
                     _dispatcher_add_task 10B6                        ??_dispatcher_start 0281  
     dispatcher_change_context@task_state 0262                __end_of_scheduler_priority 08C4  
                                  i1l4402 0278                                    i1l4332 0E60  
                                  i1l4324 0E12                                    i1l4350 0732  
                                  i1l4326 0E28                                    i1l4414 0302  
                                  i1l4406 02A2                                    i1l4424 0332  
                                  i1l4520 0638                                    i1l4434 03FE  
                                  i1l4426 0358                                    i1l4364 07DA  
                                  i1l4380 081C                                    i1l4516 05FE  
                                  i1l4366 07F0                                    i1l4390 0890  
                                  i1l4490 053A                                    i1l4388 088A  
                                  i1l4492 0540                                    i1l4486 04F2  
                                  i1l4576 0AA6                                    i2l1786 0B5E  
                                  i2l1778 0B00                                    i2l1788 0B62  
                                  i2l4750 00B2                                    i2l4754 0118  
                                  i2l4756 0124                                    i2l4774 017E  
                                  i2l4782 0206                                    u430_28 0DB2  
                                  u433_20 0E7A                                    u425_20 0CE0  
                                  u434_28 0E7E                                    u426_28 0CE4  
                                  u429_20 0DAE                     __size_ofi1_task_ready 0014  
                                  _STATUS 000FD8                                    _STKPTR 000FFC  
                            ?_task_create 0300                          task_block@handle 027B  
                    ?_dispatcher_add_task 027D                       task_create@priority 0302  
                    semaphore_wait@handle 00CA                           ?i2_task_running 0001  
                                  ___wmul 1002                              ?_timer0_init 027D  
                                  _malloc 025E                                    _s_heap 0309  
                                  clear_0 0F58                                    clear_1 0F6A  
                                  clear_2 0F76                     __size_ofi2_task_ready 0012  
                         ?i2_timer0_reset 0001                      i2task_running@handle 0001  
                            i1_task_ready 1182                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
               __size_of__find_free_block 0062            linked_list_remove_first@a_head 0259  
             i2scheduler_priority@highest 000D                          malloc@l_previous 00B8  
             i2scheduler_priority@current 0011                        _task_idle_callback 11E8  
                              __accesstop 0080                   __end_of__initialization 0F82  
                         __CFG_PBADEN$OFF 000000                             ___rparam_used 000001  
                            malloc@a_size 00B2                     ??_dispatcher_add_task 027F  
                            malloc@l_free 00BC                       ?_task_idle_callback 0001  
                            i2_task_ready 11A8                            __pcstackCOMRAM 0001  
          __size_of_linked_list_get_first 001E             __end_of_linked_list_get_first 113E  
                               ?i2___wmul 0001                           __CFG_OSC$INTIO7 000000  
                    ??_task_idle_callback 027B                          _semaphore_signal 0C20  
                              __pbssBANK0 00CE                                __pbssBANK1 0100  
                    _linked_list_get_size 10FE                           _task_1_priority 0CA4  
                              __pnvCOMRAM 003B                            _semaphore_init 106A  
                          _semaphore_wait 0F90                        _linked_list_create 0B88  
                         _task_2_priority 0D9E           ??_dispatcher_change_context_isr 0013  
              ?_dispatcher_change_context 0001                        _linked_list_insert 0988  
                         _task_3_priority 0E6A                                   ?___wmul 024F  
                     ?_linked_list_create 0098                                   ?_malloc 00B2  
                      __size_of_nojo_init 000E                       ?_linked_list_insert 00C0  
                              ??i2___wmul 0005                   __split_free_block@l_new 00B0  
                              _dispatcher 0100                      ??_linked_list_create 009A  
                   ?_linked_list_get_size 024F                      ??_linked_list_insert 00C4  
                              _global_isr 0008                    __end_of_semaphore_init 1090  
                  __end_of_semaphore_wait 0FCA                linked_list_get_size@a_head 024F  
        dispatcher_change_context@context 026F                                   __STATUS 0039  
                _linked_list_remove_first 0A3E           linked_list_get_size@l_head_data 0251  
             linked_list_get_first@a_head 024F                                   __Hparam 0000  
           __size_ofi2_scheduler_priority 009A                                   __Lparam 0000  
                    __size_of_task_create 00C4                             ?_task_running 024F  
                     global_isr@n_context 0036             linked_list_create@l_head_data 009C  
                         __size_of___wmul 0036                       global_isr@p_context 0034  
                         __size_of_malloc 0220                                   __pcinit 0F50  
                                 __ramtop 0600                                   _g_sem_1 00D0  
                                 _g_sem_2 00D4                      __size_of_timer0_init 0032  
                           ?_timer0_reset 0001                                   __ptext0 0D26  
                                 __ptext1 08C4                                   __ptext2 115A  
                                 __ptext3 10B6                                   __ptext4 11E0  
                                 __ptext5 113E                                   __ptext6 1038  
                                 __ptext7 11C8                                   __ptext8 11BA  
                                 __ptext9 0F0C                                 _T0CONbits 000FD5  
                       __split_free_block 0650                  __size_of_dispatcher_init 0044  
                      ?__split_free_block 00A8                   __end_of_task_1_priority 0D26  
                        task_1_priority@i 00A6                          __find_free_block 0E08  
                          __pintcode_body 001A                __end_of__merge_free_blocks 07FE  
                    end_of_initialization 0F82                   __end_of_task_2_priority 0E08  
                       __end_of_nojo_init 11C8                           ?_semaphore_init 009E  
                         ?_semaphore_wait 00CA                       ??__split_free_block 00AC  
                           __Lmediumconst 0000                                   int_func 001A  
                 __end_of_task_3_priority 0EC6                       i2___wmul@multiplier 0001  
               __size_of_dispatcher_start 001C                          ??i2_task_running 0003  
                              _nojo_start 11E0                                _task_block 11EC  
                          ??_task_running 0251                                _task_ready 115A  
                      _scheduler_priority 07FE                          task_2_priority@i 024D  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _timer0_isr 10DA                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                        ??i2_timer0_reset 0001               semaphore_init@initial_value 00A0  
                     ?_scheduler_priority 0255                            ??_timer0_reset 027D  
           linked_list_insert@l_head_data 00C6                                 _PORTDbits 000F83  
               __end_of__split_free_block 0728                                 _TRISDbits 000F95  
                        task_3_priority@i 0279                    ??_linked_list_get_size 0251  
                    ??_scheduler_priority 0257                               ?_global_isr 0001  
                         global_isr@i_609 0031                             malloc@l_block 00BE  
                        task_ready@handle 027D                  __end_of_semaphore_signal 0CA4  
                       task_create@handle 0281                            __end_of___wmul 1038  
                          __end_of_malloc 047E                          i2___wmul@product 0005  
                     start_initialization 0F50                         __size_ofi2___wmul 0026  
                        ?_task_1_priority 0001               __end_of_dispatcher_add_task 10DA  
                        ?_task_2_priority 0001                         ??_dispatcher_init 027D  
                        ?_task_3_priority 0001            dispatcher_change_context@i_820 0266  
      dispatcher_change_context@stack_817 026D                  linked_list_insert@a_data 00C2  
                linked_list_insert@a_head 00C0                               ?_nojo_start 0001  
                             ?_task_block 027B                               ?_task_ready 027D  
                linked_list_insert@l_node 00C8            dispatcher_change_context@stack 026B  
             ??_dispatcher_change_context 0261                               ?_timer0_isr 0001  
                                ??___wmul 0253                                  ??_malloc 00B4  
              __size_of__split_free_block 00D8                       __size_of_global_isr 0256  
                   _linked_list_get_first 1120                               __pbssBIGRAM 0309  
            _scheduler_priority$intlevel1 0804                               __pbssCOMRAM 0038  
             __size_of_task_idle_callback 0004                             __pcstackBANK0 0080  
                           __pcstackBANK2 0200                             __pcstackBANK3 0300  
                    __end_of_task_running 1182                ??_linked_list_remove_first 025B  
                    __end_of_timer0_reset 11D4                          _dispatcher_start 113E  
                               __pnvBANK1 01A9                             task_create@id 0300  
                               __pintcode 0008                  __end_of__find_free_block 0E6A  
              __split_free_block@a_resize 00AA              __end_ofi2_scheduler_priority 0B88  
               _dispatcher_change_context 047E                       __size_of_nojo_start 0008  
                     __size_of_task_block 0002                       __size_of_task_ready 0014  
              dispatcher_change_context@i 0265                          ??_semaphore_init 0038  
                        ??_semaphore_wait 00CC                       __size_of_timer0_isr 0024  
             __size_of_linked_list_create 0098                        i1task_ready@handle 024F  
             __size_of_linked_list_insert 00B6                            ___wmul@product 0253  
                           ??_task_create 0306                                  _LATDbits 000F8C  
     linked_list_remove_first@l_head_data 0261                                 _nojo_init 11BA  
                                i1u410_28 055A                                  i1u410_29 056E  
                                i2u421_48 10EA                                  i2u407_48 0ECE  
                                i2u407_49 0EE2                                  i2u442_40 01C0  
                                i2u442_45 01B8                        __merge_free_blocks 0728  
                           ??_timer0_init 0281                 __merge_free_blocks@l_curr 0253  
               __merge_free_blocks@l_next 0251                       ?__merge_free_blocks 0001  
                  ?_linked_list_get_first 024F                         ___wmul@multiplier 024F  
                                i2___wmul 1090      dispatcher_change_context@context_810 0271  
                           ?i1_task_ready 024F                               _INTCON2bits 000FF1  
               scheduler_priority@highest 025B                              ??_global_isr 0015  
                    ??__merge_free_blocks 024F                 scheduler_priority@current 025F  
       dispatcher_change_context@task_798 0269                                ?_nojo_init 0001  
                                __Hrparam 0000                             ?i2_task_ready 0001  
           dispatcher_change_context@next 0263             dispatcher_change_context@task 0267  
                                __Lrparam 0000                         ?_semaphore_signal 0273  
                     __end_of_task_create 0988                     i2___wmul@multiplicand 0003  
                      ??_semaphore_signal 0275                     __size_of_task_running 0014  
                      __end_of_global_isr 025E                           _dispatcher_init 0F0C  
                     __end_of_timer0_init 106A                        task_running@handle 024F  
                  semaphore_signal@handle 0273                            ??i1_task_ready 0251  
                 dispatcher_add_task@task 027F                    semaphore_signal@l_task 0276  
        __end_of_linked_list_remove_first 0AEE                                  __ptext10 0CA4  
                                __ptext11 0F90                                  __ptext20 0650  
                                __ptext12 0988                                  __ptext21 0E08  
                                __ptext13 047E                                  __ptext30 0E6A  
                                __ptext22 0D9E                                  __ptext14 116E  
                                __ptext31 11E8                                  __ptext23 0C20  
                                __ptext15 07FE                                  __ptext40 1090  
                                __ptext32 11EC                                  __ptext24 1182  
                                __ptext16 1002                                  __ptext41 0000  
                                __ptext25 0A3E                                  __ptext17 106A  
                                __ptext34 10DA                                  __ptext26 0FCA  
                                __ptext18 0B88                                  __ptext35 11D4  
                                __ptext27 0728                                  __ptext19 025E  
                                __ptext36 0EC6                                  __ptext28 10FE  
                                __ptext37 1196                                  __ptext29 1120  
                                __ptext38 11A8                                  __ptext39 0AEE  
                   __size_of_timer0_reset 000C             __size_of_linked_list_get_size 0022  
             __size_of_scheduler_priority 00C6                             __size_of_free 0038  
                           __size_of_main 0078                                  _s_blocks 00CE  
                            ??_nojo_start 0281                              ??_task_block 027D  
                          ??i2_task_ready 0003                              ??_task_ready 027F  
                    i2_scheduler_priority 0AEE  linked_list_remove_first@l_iter_new_first 025D  
                            _task_running 116E                              ??_timer0_isr 0015  
                                int$flags 003D                       timer0_init@callback 027F  
                      i2task_ready@handle 0001                   __size_ofi2_task_running 0012  
                     timer0_init@delay_us 027D                  __end_of_dispatcher_start 115A  
   __end_of_dispatcher_change_context_isr 0F0C    __size_of_dispatcher_change_context_isr 0046  
           _dispatcher_change_context_isr 0EC6                              _timer0_reset 11C8  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                 __size_ofi2_timer0_reset 000C                        __end_of_nojo_start 11E8  
                      __end_of_task_block 11EE                        __end_of_task_ready 116E  
                 __find_free_block@a_size 00A8         dispatcher_change_context_isr@next 0013  
                                intlevel1 0000                                  intlevel2 0000  
                      __end_of_timer0_isr 10FE        __size_of_dispatcher_change_context 01D2  
                             _task_create 08C4                  __size_of_task_1_priority 0082  
                             ??_nojo_init 027D                     ?i2_scheduler_priority 0007  
                              _OSCCONbits 000FD3              __size_of_dispatcher_add_task 0024  
                __size_of_task_2_priority 006A                         ?__find_free_block 00A8  
                __size_of_task_3_priority 005C                   __end_of_dispatcher_init 0F50  
                   i2scheduler_priority@i 000F                               _timer0_init 1038  
                      ??__find_free_block 00AA                __end_of_task_idle_callback 11EC  
                        __timer0_callback 003B                          __timer0_delay_us 01A9  
       __end_of_dispatcher_change_context 0650                      __end_ofi1_task_ready 1196  
       __size_of_linked_list_remove_first 00B0  
